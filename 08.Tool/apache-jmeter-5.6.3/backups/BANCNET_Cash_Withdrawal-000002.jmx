<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="dp_filepath" elementType="Argument">
            <stringProp name="Argument.name">dp_filepath</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_waittime" elementType="Argument">
            <stringProp name="Argument.name">dp_waittime</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_timeout" elementType="Argument">
            <stringProp name="Argument.name">dp_timeout</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_duration" elementType="Argument">
            <stringProp name="Argument.name">dp_duration</stringProp>
            <stringProp name="Argument.value">3600</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_rampup" elementType="Argument">
            <stringProp name="Argument.name">dp_rampup</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_signon_stan" elementType="Argument">
            <stringProp name="Argument.name">dp_signon_stan</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">033001</stringProp>
          </elementProp>
          <elementProp name="SCR31_dp_stanstart" elementType="Argument">
            <stringProp name="Argument.name">SCR31_dp_stanstart</stringProp>
            <stringProp name="Argument.value">033001 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR32_dp_stanstart" elementType="Argument">
            <stringProp name="Argument.name">SCR32_dp_stanstart</stringProp>
            <stringProp name="Argument.value">038501 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR34_dp_stanstart" elementType="Argument">
            <stringProp name="Argument.name">SCR34_dp_stanstart</stringProp>
            <stringProp name="Argument.value">038501 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR31_dp_rrnstart" elementType="Argument">
            <stringProp name="Argument.name">SCR31_dp_rrnstart</stringProp>
            <stringProp name="Argument.value">000000033001 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR32_dp_rrnstart" elementType="Argument">
            <stringProp name="Argument.name">SCR32_dp_rrnstart</stringProp>
            <stringProp name="Argument.value">000000033001 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR24_dp_rrnstart" elementType="Argument">
            <stringProp name="Argument.name">SCR24_dp_rrnstart</stringProp>
            <stringProp name="Argument.value">000000038501  </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR31_users" elementType="Argument">
            <stringProp name="Argument.name">SCR31_users</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR32_users" elementType="Argument">
            <stringProp name="Argument.name">SCR32_users</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR34_users" elementType="Argument">
            <stringProp name="Argument.name">SCR34_users</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR31_iterations" elementType="Argument">
            <stringProp name="Argument.name">SCR31_iterations</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR32_iterations" elementType="Argument">
            <stringProp name="Argument.name">SCR32_iterations</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR34_iterations" elementType="Argument">
            <stringProp name="Argument.name">SCR34_iterations</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR31_tps" elementType="Argument">
            <stringProp name="Argument.name">SCR31_tps</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR32_tps" elementType="Argument">
            <stringProp name="Argument.name">SCR32_tps</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCR34_tps" elementType="Argument">
            <stringProp name="Argument.name">SCR34_tps</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dp_signon_stan" elementType="Argument">
            <stringProp name="Argument.name">dp_signon_stan</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="ISO8583 Connection Configuration-BANCNET">
        <stringProp name="classname">NACChannel</stringProp>
        <stringProp name="configKey"></stringProp>
        <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
        <stringProp name="header"></stringProp>
        <stringProp name="host">10.192.196.91</stringProp>
        <stringProp name="keyPassword"></stringProp>
        <stringProp name="maxConnections"></stringProp>
        <stringProp name="mtiMapping"></stringProp>
        <stringProp name="packager">${dp_filepath}/Packager/UBP_BANCNET.xml</stringProp>
        <stringProp name="port">8000</stringProp>
        <stringProp name="requestListener"></stringProp>
        <boolProp name="reuseConnection">true</boolProp>
        <stringProp name="storePassword"></stringProp>
        <collectionProp name="channelConfig"/>
        <stringProp name="keystore"></stringProp>
        <collectionProp name="muxKeyConfig"/>
        <stringProp name="TestPlan.comments">004A</stringProp>
      </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="BancNet-SignOn_Message" enabled="true">
            <stringProp name="configKey"></stringProp>
            <stringProp name="header"></stringProp>
            <stringProp name="responseCodeField">70</stringProp>
            <stringProp name="successResponseCode">001</stringProp>
            <intProp name="timeout">10000</intProp>
            <stringProp name="trailer">2020</stringProp>
            <collectionProp name="fields">
              <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
                <stringProp name="content">0800</stringProp>
              </elementProp>
              <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
                <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
              </elementProp>
              <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
                <stringProp name="content">${dp_signon_stan}</stringProp>
              </elementProp>
              <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
                <stringProp name="content">${__time(HHmmss,)}</stringProp>
              </elementProp>
              <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
                <stringProp name="content">${__time(MMdd,)}</stringProp>
              </elementProp>
              <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
                <stringProp name="content">0000000041</stringProp>
              </elementProp>
              <elementProp name="48" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="48">
                <stringProp name="content">0000000000F59621BBB41A87C059A1E4237425705CFF15</stringProp>
              </elementProp>
              <elementProp name="70" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="70">
                <stringProp name="content">001</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">008100:::00</stringProp>
          </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SCR34_DEBIT_BANCNET_CASH_WITHDRAWAL">
        <stringProp name="ThreadGroup.num_threads">${SCR34_users}</stringProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <stringProp name="ThreadGroup.duration">${dp_duration}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">${dp_filepath}/DataFile/SCR34_DEBIT_BANCNET_CASH_WITHDRAWAL_DataFile.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">dp_cardno,dp_expirey,dp_track2data,dp_amount</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="SCR34_dp_stan" enabled="true">
          <stringProp name="CounterConfig.start">${SCR34_dp_stanstart}</stringProp>
          <stringProp name="CounterConfig.end">999999</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">SCR34_dp_stans</stringProp>
          <stringProp name="CounterConfig.format">000000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="SCR34_dp_rrn" enabled="true">
          <stringProp name="CounterConfig.start">${SCR34_dp_rrnstart}</stringProp>
          <stringProp name="CounterConfig.end">999999999999</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">SCR34_dp_rrn</stringProp>
          <stringProp name="CounterConfig.format">000000000000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__groovy(${dp_waittime}*1000,)}</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SCR34_T01_DEBIT_BANCNET_CASH_WITHDRAWAL" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="SCR34_T01_R01_DEBIT_BANCNET_CASH_WITHDRAWAL" enabled="true">
            <stringProp name="configKey"></stringProp>
            <stringProp name="header"></stringProp>
            <stringProp name="responseCodeField">39</stringProp>
            <stringProp name="successResponseCode">00</stringProp>
            <stringProp name="timeout">${__groovy(${dp_timeout}*1000,)}</stringProp>
            <stringProp name="trailer"></stringProp>
            <collectionProp name="fields">
              <elementProp name="00" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="00">
                <stringProp name="content">0200</stringProp>
              </elementProp>
              <elementProp name="02" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="02">
                <stringProp name="content">${dp_cardno}</stringProp>
              </elementProp>
              <elementProp name="03" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="03">
                <stringProp name="content">011000</stringProp>
              </elementProp>
              <elementProp name="04" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="04">
                <stringProp name="content">${dp_amount}</stringProp>
              </elementProp>
              <elementProp name="05" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="05">
                <stringProp name="content">${dp_amount}</stringProp>
              </elementProp>
              <elementProp name="07" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="07">
                <stringProp name="content">${__time(MMddHHmmss,)}</stringProp>
              </elementProp>
              <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
                <stringProp name="content">${SCR34_dp_stans}</stringProp>
              </elementProp>
              <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
                <stringProp name="content">${__time(HHmmss,)}</stringProp>
              </elementProp>
              <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
                <stringProp name="content">${__time(MMdd,)}</stringProp>
              </elementProp>
              <elementProp name="14" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="14">
                <stringProp name="content">${dp_expirey}</stringProp>
              </elementProp>
              <elementProp name="15" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="15">
                <stringProp name="content">${__time(MMdd,)}</stringProp>
              </elementProp>
              <elementProp name="18" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="18">
                <stringProp name="content">6011</stringProp>
              </elementProp>
              <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
                <stringProp name="content">051</stringProp>
              </elementProp>
              <elementProp name="23" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="23">
                <stringProp name="content">001</stringProp>
              </elementProp>
              <elementProp name="24" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="24">
                <stringProp name="content">000</stringProp>
              </elementProp>
              <elementProp name="25" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="25">
                <stringProp name="content">02</stringProp>
              </elementProp>
              <elementProp name="28" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="28">
                <stringProp name="content">D00000000</stringProp>
              </elementProp>
              <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
                <stringProp name="content">0000000188</stringProp>
              </elementProp>
              <elementProp name="35" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="35">
                <stringProp name="content">${dp_track2data}</stringProp>
              </elementProp>
              <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
                <stringProp name="content">${SCR34_dp_rrn}</stringProp>
              </elementProp>
              <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
                <stringProp name="content">71655555</stringProp>
              </elementProp>
              <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
                <stringProp name="content">METS 7171 MANILA ST      MANILA       PH</stringProp>
              </elementProp>
              <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
                <stringProp name="content">608</stringProp>
              </elementProp>
              <elementProp name="50" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="50">
                <stringProp name="content">608</stringProp>
              </elementProp>
              <elementProp name="52" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="52">
                <stringProp name="content">F2802D655FF71DEC</stringProp>
              </elementProp>
              <elementProp name="55.1" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.1">
                <stringProp name="tag">82</stringProp>
                <stringProp name="content">1C00</stringProp>
              </elementProp>
              <elementProp name="55.2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.2">
                <stringProp name="tag">9F36</stringProp>
                <stringProp name="content">084E</stringProp>
              </elementProp>
              <elementProp name="55.3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.3">
                <stringProp name="tag">9F27</stringProp>
                <stringProp name="content">80</stringProp>
              </elementProp>
              <elementProp name="55.4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.4">
                <stringProp name="tag">9F34</stringProp>
                <stringProp name="content">020100</stringProp>
              </elementProp>
              <elementProp name="55.5" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.5">
                <stringProp name="tag">9F10</stringProp>
                <stringProp name="content">06010A03A00000</stringProp>
              </elementProp>
              <elementProp name="55.6" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.6">
                <stringProp name="tag">9F33</stringProp>
                <stringProp name="content">604020</stringProp>
              </elementProp>
              <elementProp name="55.7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.7">
                <stringProp name="tag">9F35</stringProp>
                <stringProp name="content">14</stringProp>
              </elementProp>
              <elementProp name="55.8" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.8">
                <stringProp name="tag">95</stringProp>
                <stringProp name="content">8000040000</stringProp>
              </elementProp>
              <elementProp name="55.9" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.9">
                <stringProp name="tag">9F26</stringProp>
                <stringProp name="content">BB44835D8A3FD3D8</stringProp>
              </elementProp>
              <elementProp name="55.10" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.10">
                <stringProp name="tag">9F37</stringProp>
                <stringProp name="content">919B13AF</stringProp>
              </elementProp>
              <elementProp name="55.11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.11">
                <stringProp name="tag">9F02</stringProp>
                <stringProp name="content">${dp_amount}</stringProp>
              </elementProp>
              <elementProp name="55.12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.12">
                <stringProp name="tag">9F03</stringProp>
                <stringProp name="content">000000000000</stringProp>
              </elementProp>
              <elementProp name="55.13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.13">
                <stringProp name="tag">5F2A</stringProp>
                <stringProp name="content">0608</stringProp>
              </elementProp>
              <elementProp name="55.14" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.14">
                <stringProp name="tag">9A</stringProp>
                <stringProp name="content">240119</stringProp>
              </elementProp>
              <elementProp name="55.15" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.15">
                <stringProp name="tag">9C</stringProp>
                <stringProp name="content">01</stringProp>
              </elementProp>
              <elementProp name="55.16" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="55.16">
                <stringProp name="tag">9F1A</stringProp>
                <stringProp name="content">0608</stringProp>
              </elementProp>
              <elementProp name="61" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="61">
                <stringProp name="content">25012000000</stringProp>
              </elementProp>
              <elementProp name="84" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="84">
                <stringProp name="content">D00000000</stringProp>
              </elementProp>
            </collectionProp>
          </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
          <hashTree>
            <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
              <intProp name="calcMode">2</intProp>
              <stringProp name="throughput">${__groovy(${SCR34_tps}*60,)}</stringProp>
            </ConstantThroughputTimer>
            <hashTree/>
            <nz.co.breakpoint.jmeter.iso8583.ISO8583Crypto guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Crypto" testname="ISO8583 Crypto PreProcessor" enabled="true">
              <stringProp name="pinField">52</stringProp>
              <stringProp name="pinKey"></stringProp>
              <stringProp name="ksnField">53</stringProp>
              <stringProp name="macAlgorithm"></stringProp>
              <stringProp name="macKey"></stringProp>
              <stringProp name="macField"></stringProp>
              <stringProp name="iccField">55</stringProp>
              <stringProp name="imkac"></stringProp>
              <stringProp name="pan"></stringProp>
              <stringProp name="psn">00</stringProp>
              <stringProp name="txnData"></stringProp>
              <stringProp name="padding"></stringProp>
            </nz.co.breakpoint.jmeter.iso8583.ISO8583Crypto>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="FileWrite" enabled="false">
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters">${__time(yyyyMMddHHmmssSSS,dc_timestamp)}</stringProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer;
def FilePath = vars.get(&quot;dp_filepath&quot;);
def cardNo =vars.get(&quot;dp_cardno&quot;);
def stan = vars.get(&quot;SCR34_dp_stan&quot;);
def rrn = vars.get(&quot;SCR34_dp_rrn&quot;);
long responseTime = prev.getTime();
def timeStamp = vars.get(&quot;dc_timestamp&quot;);

f = new FileOutputStream(FilePath +&quot;/Filewrite/SCR34_RequestIdentifiers&quot;+&quot;.txt&quot;,true);
p = new PrintStream(f);
p.println(timeStamp + &quot;,&quot; + cardNo+ &quot;,&quot; + stan +  &quot;,&quot; + rrn + &quot;,&quot;+ responseTime );
f.close();</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">${dp_filepath}\Result\VISA_DEBIT_VRT.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">${dp_filepath}\Result\VISA_DEBIT_ART.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
