<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="4">
  <HTTPTask id="36" hostname="opensource-demo.orangehrmlive.com" path="https://opensource-demo.orangehrmlive.com/web/dist/js/app.js?v=1721393199309" url="https://opensource-demo.orangehrmlive.com/web/dist/js/app.js?v=1721393199309" ip="34.205.40.6" port="443" connectionId="8" origin="Primary" frame="1" startDateTime="2025-02-06T16:48:38.850+05:30" startTime="1138003906" endTime="1138003921">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>dj0xNzIxMzkzMTk5MzA5</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="v" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTcyMTM5MzE5OTMwOQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="sec-ch-ua-platform" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IldpbmRvd3Mi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMi4wLjAuMCBTYWZhcmkvNTM3LjM2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ik5vdCBBKEJyYW5kIjt2PSI4IiwgIkNocm9taXVtIjt2PSIxMzIiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMyIg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-mobile" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY29ycw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9vcGVuc291cmNlLWRlbW8ub3JhbmdlaHJtbGl2ZS5jb20vd2ViL2luZGV4LnBocC9hdXRoL2xvZ2lu</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgenN0ZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tR0IsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>b3JhbmdlaHJtPXZsOHYwOW5jN3BxMWs5dGJsN21rNGRwYzNl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>b3BlbnNvdXJjZS1kZW1vLm9yYW5nZWhybWxpdmUuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHBzOi8vb3BlbnNvdXJjZS1kZW1vLm9yYW5nZWhybWxpdmUuY29tL3dlYi9kaXN0L2pzL2FwcC5qcz92PTE3MjEzOTMxOTkzMDkgSFRUUC8xLjENCnNlYy1jaC11YS1wbGF0Zm9ybTogIldpbmRvd3MiDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMyLjAuMC4wIFNhZmFyaS81MzcuMzYNCnNlYy1jaC11YTogIk5vdCBBKEJyYW5kIjt2PSI4IiwgIkNocm9taXVtIjt2PSIxMzIiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMyIg0Kc2VjLWNoLXVhLW1vYmlsZTogPzANCkFjY2VwdDogKi8qDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL29wZW5zb3VyY2UtZGVtby5vcmFuZ2Vocm1saXZlLmNvbS93ZWIvaW5kZXgucGhwL2F1dGgvbG9naW4NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgenN0ZA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1HQixlbjtxPTAuOQ0KQ29va2llOiBvcmFuZ2Vocm09dmw4djA5bmM3cHExazl0Ymw3bWs0ZHBjM2UNCkhvc3Q6IG9wZW5zb3VyY2UtZGVtby5vcmFuZ2Vocm1saXZlLmNvbQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="orangehrm" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dmw4djA5bmM3cHExazl0Ymw3bWs0ZHBjM2U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwNiBGZWIgMjAyNSAxMToxNDoyMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U2F0LCAyOCBTZXAgMjAyNCAxODoxMTo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IjE3MTM1Mi02MjMzMWU3ZjE4YTAwLWd6aXAi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YmRvbWFpbnM7</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Security-Policy" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVmYXVsdC1zcmMgJ3NlbGYnICoucHJvamVjdHMtYWJyb2FkLm5ldCBmb250cy5nb29nbGVhcGlzLmNvbSBmb250cy5nc3RhdGljLmNvbSBjb2RlLmpxdWVyeS5jb20gbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20gYWpheC5nb29nbGVhcGlzLmNvbSBjZG5qcy5jbG91ZGZsYXJlLmNvbSBuYXRpdmUudGVzdGluZy5lcXVlc3QuY29tIHd3dy5nb29nbGUuY29tICouZG9jdXNpZ24ubmV0IHd3dy55b3V0dWJlLmNvbSB5b3V0dS5iZSBwbGF5ZXIudmltZW8uY29tIGRvY3MuZ29vZ2xlLmNvbSAndW5zYWZlLWlubGluZScgJ3Vuc2FmZS1ldmFsJyBkYXRhOiBmb250O2ZyYW1lLXNyYyAnc2VsZicgd3d3LnlvdXR1YmUuY29tIHd3dy52aW1lby5jb20gdmltZW8uY29tIHd3dy55YWhvby5jb20gd3d3LmRhaWx5bW90aW9uLmNvbSB3d3cubWV0YWNhZmUuY29tIHd3dy51c3RyZWFtLnR2IG5hdGl2ZS50ZXN0aW5nLmVxdWVzdC5jb20gKi5vcmFuZ2Vocm1saXZlLmNvbSAqLm9yYW5nZWhybS5jb20gKi5hbWF6b25hd3MuY29tO2Nvbm5lY3Qtc3JjICdzZWxmJyAqLm9yYW5nZWhybS5jb20gKi5vcmFuZ2Vocm1saXZlLmNvbTt3b3JrZXItc3JjIGJsb2I6ICdzZWxmJztpbWctc3JjICogJ3NlbGYnIGRhdGE6IGJsb2I6</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="client_max_body_size" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTBN</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Public-Key-Pins" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cGluLXNoYTI1Nj0iTWQ3UUpJTC9VTXFkSGFTNzNwRWtMSG01b2ZVVUUzNStyNFNZZE0wMTQvRT0iO3Bpbi1zaGEyNTY9ImJsZ21qZjNUYjNDMHNVcWI3am80YXhpWkFucjMyN2ZYMHljclVHcWp3Mms9IjtwaW4tc2hhMjU2PSJwdUNkeXVaZFhvRGM1alNkY0dLVTZtZGpkMFZOcTE2eW9hTzJCY0RGMzZBPSI7cGluLXNoYTI1Nj0ieVFoTzZZcVFYNVkvTnh5SEFqWG5JM2pPdFlXVW0vVHRScjY2NlJ1blhSZz0iOyBwaW4tc2hhMjU2PSJTbHQ0OGlCVlRqdVJRSlRqYnpvcG1pblJySFNHdG5kWTAvc2owbEZmOVFrPSI7IG1heC1hZ2U9NjMwNzIwMDA7IGluY2x1ZGVTdWJEb21haW5z</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54DQpEYXRlOiBUaHUsIDA2IEZlYiAyMDI1IDExOjE0OjIwIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpMYXN0LU1vZGlmaWVkOiBTYXQsIDI4IFNlcCAyMDI0IDE4OjExOjUyIEdNVA0KRVRhZzogIjE3MTM1Mi02MjMzMWU3ZjE4YTAwLWd6aXAiDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpYLVhTUy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5OiBtYXgtYWdlPTMxNTM2MDAwOyBpbmNsdWRlU3ViZG9tYWluczsNCkNvbnRlbnQtU2VjdXJpdHktUG9saWN5OiBkZWZhdWx0LXNyYyAnc2VsZicgKi5wcm9qZWN0cy1hYnJvYWQubmV0IGZvbnRzLmdvb2dsZWFwaXMuY29tIGZvbnRzLmdzdGF0aWMuY29tIGNvZGUuanF1ZXJ5LmNvbSBtYXhjZG4uYm9vdHN0cmFwY2RuLmNvbSBhamF4Lmdvb2dsZWFwaXMuY29tIGNkbmpzLmNsb3VkZmxhcmUuY29tIG5hdGl2ZS50ZXN0aW5nLmVxdWVzdC5jb20gd3d3Lmdvb2dsZS5jb20gKi5kb2N1c2lnbi5uZXQgd3d3LnlvdXR1YmUuY29tIHlvdXR1LmJlIHBsYXllci52aW1lby5jb20gZG9jcy5nb29nbGUuY29tICd1bnNhZmUtaW5saW5lJyAndW5zYWZlLWV2YWwnIGRhdGE6IGZvbnQ7ZnJhbWUtc3JjICdzZWxmJyB3d3cueW91dHViZS5jb20gd3d3LnZpbWVvLmNvbSB2aW1lby5jb20gd3d3LnlhaG9vLmNvbSB3d3cuZGFpbHltb3Rpb24uY29tIHd3dy5tZXRhY2FmZS5jb20gd3d3LnVzdHJlYW0udHYgbmF0aXZlLnRlc3RpbmcuZXF1ZXN0LmNvbSAqLm9yYW5nZWhybWxpdmUuY29tICoub3JhbmdlaHJtLmNvbSAqLmFtYXpvbmF3cy5jb207Y29ubmVjdC1zcmMgJ3NlbGYnICoub3JhbmdlaHJtLmNvbSAqLm9yYW5nZWhybWxpdmUuY29tO3dvcmtlci1zcmMgYmxvYjogJ3NlbGYnO2ltZy1zcmMgKiAnc2VsZicgZGF0YTogYmxvYjoNCmNsaWVudF9tYXhfYm9keV9zaXplOiA1ME0NClB1YmxpYy1LZXktUGluczogcGluLXNoYTI1Nj0iTWQ3UUpJTC9VTXFkSGFTNzNwRWtMSG01b2ZVVUUzNStyNFNZZE0wMTQvRT0iO3Bpbi1zaGEyNTY9ImJsZ21qZjNUYjNDMHNVcWI3am80YXhpWkFucjMyN2ZYMHljclVHcWp3Mms9IjtwaW4tc2hhMjU2PSJwdUNkeXVaZFhvRGM1alNkY0dLVTZtZGpkMFZOcTE2eW9hTzJCY0RGMzZBPSI7cGluLXNoYTI1Nj0ieVFoTzZZcVFYNVkvTnh5SEFqWG5JM2pPdFlXVW0vVHRScjY2NlJ1blhSZz0iOyBwaW4tc2hhMjU2PSJTbHQ0OGlCVlRqdVJRSlRqYnpvcG1pblJySFNHdG5kWTAvc2owbEZmOVFrPSI7IG1heC1hZ2U9NjMwNzIwMDA7IGluY2x1ZGVTdWJEb21haW5zDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>(function(){var e={9052:function(e){function t(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}t.keys=function(){return[]},t.resolve=t,t.id=9052,e.exports=t},7368:function(e,t,o){"use strict";var a=o(4032);function l(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createBlock)(i,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])}var n={name:"SubmitButton"},r=o(8152);const i=(0,r.c)(n,[["render",l]]);var d=i;const s={key:0},c={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},m={key:0};function u(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),u=(0,a.resolveComponent)("oxd-button");return o.loading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",s,[o.showDivider?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"orangehrm-horizontal-margin"})):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",c,[o.selected>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",m,[(0,a.createVNode)(d,{tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.n_records_selected",{count:o.selected})),1)])),_:1}),(0,a.createVNode)(u,{label:e.$t("general.delete_selected"),"icon-name":"trash-fill","display-type":"label-danger",class:"orangehrm-horizontal-margin",onClick:t[0]||(t[0]=t=>e.$emit("delete",t))},null,8,["label"])])):((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t(o.recordsFoundLangString,{count:o.total})),1)])),_:1}))])]))}var p={name:"TableHeader",props:{loading:{type:Boolean,required:!0},selected:{type:Number,required:!0},total:{type:Number,required:!0},showDivider:{type:Boolean,required:!1,default:!0},recordsFoundLangString:{type:String,required:!1,default:"general.n_records_found"}},emits:["delete"]};const h=(0,r.c)(p,[["render",u],["__scopeId","data-v-5a621acd"]]);var g=h;function v(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createBlock)(i,{tag:"p",class:"orangehrm-form-hint"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" * "+(0,a.toDisplayString)(e.$t("general.required")),1)])),_:1})}var f={name:"RequiredText"};const y=(0,r.c)(f,[["render",v],["__scopeId","data-v-e3b2b1dc"]]);var C=y;const V=["href"],b={key:0},x=["href"],w=["href"];function N(e,t,o,l,n,r){const i=(0,a.resolveComponent)("upgrade-button"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("oxd-layout"),c=(0,a.resolveComponent)("about");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(s,(0,a.mergeProps)({class:{"orangehrm-upgrade-layout":o.showUpgrade}},e.$attrs),(0,a.createSlots)({"user-actions":(0,a.withCtx)((()=>[(0,a.createElementVNode)("li",null,[(0,a.createElementVNode)("a",{href:"#",role:"menuitem",class:"oxd-userdropdown-link",onClick:t[0]||(t[0]=(...e)=>l.openAboutModel&&l.openAboutModel(...e))},(0,a.toDisplayString)(e.$t("general.about")),1)]),(0,a.createElementVNode)("li",null,[(0,a.createElementVNode)("a",{href:o.supportUrl,role:"menuitem",class:"oxd-userdropdown-link"},(0,a.toDisplayString)(e.$t("general.support")),9,V)]),o.updatePasswordUrl?((0,a.openBlock)(),(0,a.createElementBlock)("li",b,[(0,a.createElementVNode)("a",{href:o.updatePasswordUrl,role:"menuitem",class:"oxd-userdropdown-link"},(0,a.toDisplayString)(e.$t("general.change_password")),9,x)])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("li",null,[(0,a.createElementVNode)("a",{href:o.logoutUrl,role:"menuitem",class:"oxd-userdropdown-link"},(0,a.toDisplayString)(e.$t("general.logout")),9,w)])])),"nav-actions":(0,a.withCtx)((()=>[(0,a.createVNode)(d,{name:"question-lg",title:e.$t("general.help"),onClick:l.onClickSupport},null,8,["title","onClick"])])),_:2},[(0,a.renderList)(e.$slots,((t,o)=>({name:o,fn:(0,a.withCtx)((t=>[(0,a.renderSlot)(e.$slots,o,(0,a.normalizeProps)((0,a.guardReactiveProps)(t)))]))}))),o.showUpgrade?{name:"topbar-header-right-area",fn:(0,a.withCtx)((()=>[o.showUpgrade?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0})):(0,a.createCommentVNode)("",!0)])),key:"0"}:void 0]),1040,["class"]),l.showAboutModel?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,onClose:l.closeAboutModel},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)],64)}const _={class:"orangehrm-modal-header"},k={key:0,class:"orangehrm-loader"};function S(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-loading-spinner"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(u,{style:{width:"90%",maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",_,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.about")),1)])),_:1})]),(0,a.createVNode)(d),n.isLoading?((0,a.openBlock)(),(0,a.createElementBlock)("div",k,[(0,a.createVNode)(s)])):((0,a.openBlock)(),(0,a.createBlock)(m,{key:1,cols:2,class:"orangehrm-about"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.company_name"))+": ",1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.data.companyName),1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.version"))+": ",1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.data.productName)+" "+(0,a.toDisplayString)(n.data.version),1)])),_:1})])),_:1}),void 0!==n.data.numberOfActiveEmployee?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active_employees"))+": ",1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.data.numberOfActiveEmployee),1)])),_:1})])),_:1})],64)):(0,a.createCommentVNode)("",!0),void 0!==n.data.numberOfPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:1},[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.employees_terminated"))+": ",1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-about-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.data.numberOfPastEmployee),1)])),_:1})])),_:1})],64)):(0,a.createCommentVNode)("",!0)])),_:1}))])),_:1},8,["onUpdate:show"])}var $=o(8012),D=o(2774);o(8208);class E{constructor(){(0,$.c)(this,"_tempStorage",{})}clear(){this._tempStorage={}}getItem(e){return this._tempStorage[e]||null}key(e){return Object.keys(this._tempStorage)[e]||null}removeItem(e){delete this._tempStorage[e]}setItem(e,t){this._tempStorage[e]=t}}function T(e){try{const t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(t){return t instanceof DOMException&&(22===t.code||1014===t.code||"QuotaExceededError"===t.name||"NS_ERROR_DOM_QUOTA_REACHED"===t.name)&&e&&0!==e.length}}class I{constructor(e){(0,$.c)(this,"_storage",void 0),T(e)?this._storage=e:this._storage=new E}clear(){this._storage.clear()}getItem(e){return this._storage.getItem(e)}key(e){return this._storage.key(e)}removeItem(e){this._storage.removeItem(e)}setItem(e,t){this._storage.setItem(e,t)}}const B=function(e,t={},o={}){let a=e;o=JSON.parse(JSON.stringify(o)),Object.keys(t).forEach((e=>{const o=`{${e}}`;if(a.includes(o)){let l=t[e];"number"===typeof l&&(l=l.toString()),a=a.replace(o,l)}else console.error("Invalid parameter.")}));let l="?";const n=Object.keys(o);return n.forEach(((e,t)=>{0!==t&&(l+="&");const a=o[e];Array.isArray(a)?a.forEach(((t,o)=>{0!==o&&(l+="&"),l+=`${e}[]=${t}`})):l+=`${e}=${a}`})),encodeURI(a+(0===n.length?"":l))},L=function(e,t={},o={}){return window.appGlobal.baseUrl+B(e,t,o)},U=function(e,t={},o={}){window.location.href=L(e,t,o)},A=function(){window.location.reload()};class P{constructor(e,t){(0,$.c)(this,"_http",void 0),(0,$.c)(this,"_baseUrl",void 0),(0,$.c)(this,"_apiSection",void 0),(0,$.c)(this,"_cacheStorage",void 0),(0,$.c)(this,"_ignorePathRegex",void 0),this._baseUrl=e,this._apiSection=t,this._http=D.c.create({baseURL:this._baseUrl}),this._cacheStorage=new I(localStorage),this.setupResponseInterceptors((0,a.getCurrentInstance)())}setIgnorePath(e){this._ignorePathRegex=new RegExp(e)}getAll(e){const t={"Content-Type":"application/json",Accept:"application/json","Cache-Control":"no-store, no-cache, must-revalidate, post-check=0, pre-check=0"};return this._http.get(this._apiSection,{headers:t,params:e})}get(e,t){const o={"Content-Type":"application/json"};return this._http.get(`${this._apiSection}/${e}`,{headers:o,params:t})}create(e){const t={"Content-Type":"application/json",Accept:"application/json"};return this._http.post(this._apiSection,e,{headers:t})}update(e,t){const o={"Content-Type":"application/json"};return this._http.put(`${this._apiSection}/${e}`,t,{headers:o})}delete(e){const t={"Content-Type":"application/json"};return this._http.delete(`${this._apiSection}/${e}`,{headers:t})}deleteAll(e){const t={"Content-Type":"application/json"};return this._http.delete(`${this._apiSection}`,{headers:t,data:e})}request(e){const t={"Content-Type":"application/json"};return this._http.request({url:this._apiSection,headers:t,...e})}ignoreError(e){if(this._ignorePathRegex&&(422===e.response?.status||400===e.response?.status)){const t=e.response.config.url??"";return this._ignorePathRegex.test(t)}return!1}setupResponseInterceptors(e){this._http.interceptors.response.use((e=>e),(t=>{if(401===t.response?.status)return A(),Promise.reject();if(this.ignoreError(t))return Promise.reject(t.response);const o=e?.appContext.config.globalProperties.$toast;if(o&&"ECONNABORTED"!==t.code){const e=t.response?.data;o.unexpectedError(e?.error.message||null)}return Promise.reject(t)}));{const e=e=>e.startsWith("W/")?e.substring(2):e;this._http.interceptors.request.use((e=>{if(e.url){const t=e.url,o=this._cacheStorage.getItem(t);o&&e.headers.set("If-None-Match",o)}return e}),(e=>Promise.reject(e))),this._http.interceptors.response.use((t=>{const{config:o,headers:a}=t;if(o.url&&a){const l=o.url,n=a["etag"],r=this._cacheStorage.getItem(l);n&&n!==r&&(this._cacheStorage.removeItem(l),this._cacheStorage.setItem(l,e(n)),r&&this._cacheStorage.removeItem(r),this._cacheStorage.setItem(e(n),JSON.stringify(t.data)))}return t}),(t=>{if(304===t.response?.status){const o=t.response.headers["etag"];if(o){const a=this._cacheStorage.getItem(e(o));if(a)return Promise.resolve({...t.response,status:200,data:JSON.parse(a)})}}return Promise.reject(t)}))}}get http(){return this._http}get baseUrl(){return this._baseUrl}set apiSection(e){this._apiSection=e}}var q=o(3736),F={components:{"oxd-loading-spinner":q.OxdSpinner,"oxd-dialog":q.OxdDialog},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/core/about");return{http:e}},data(){return{isLoading:!1,data:null}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.data={...t}})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){this.$emit("close",!0)}}};const M=(0,r.c)(F,[["render",S],["__scopeId","data-v-d52720b8"]]);var z=M;const j=Symbol("dateFormat");function R(){const e=(0,a.inject)(j);if(!e)throw new Error("Date format is invalid");const t=(0,q.convertPHPDateFormat)(e.id),o=e.label,l="HH:mm",n="hh:mm a";return{timeFormat:l,jsTimeFormat:n,jsDateFormat:t,userDateFormat:o}}const O={class:"orangehrm-upgrade-container"},G={class:"orangehrm-upgrade-link",target:"_blank",href:"https://orangehrm.com/open-source/upgrade-to-advanced"};function Q(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-glass-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",O,[(0,a.createElementVNode)("a",G,[(0,a.createVNode)(d,{label:e.$t("general.upgrade"),size:"large",class:"orangehrm-upgrade-button"},{icon:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"svg",name:"upgrade",class:"orangehrm-upgrade-icon"})])),_:1},8,["label"])])])}var H={name:"UpgradeButton",components:{"oxd-icon":q.OxdIcon,"oxd-glass-button":q.OxdGlassButton}};const W=(0,r.c)(H,[["render",Q],["__scopeId","data-v-e60dde10"]]);var Y=W,J={components:{about:z,"oxd-layout":q.OxdLayout,"upgrade-button":Y},inheritAttrs:!1,props:{permissions:{type:Object,default:()=>({})},logoutUrl:{type:String,default:"#"},supportUrl:{type:String,default:"#"},updatePasswordUrl:{type:String,default:"#"},dateFormat:{type:Object,default:null},helpUrl:{type:String,default:null},showUpgrade:{type:Boolean,default:!1}},setup(e){const t=(0,a.ref)(!1);(0,a.provide)("permissions",(0,a.readonly)(e.permissions)),(0,a.provide)(j,(0,a.readonly)(e.dateFormat));const o=()=>{t.value=!0},l=()=>{t.value=!1},n=()=>{e.helpUrl&&window.open(e.helpUrl,"_blank")};return{onClickSupport:n,showAboutModel:t,openAboutModel:o,closeAboutModel:l}}};const X=(0,r.c)(J,[["render",N]]);var K=X;function Z(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"date",placeholder:l.userDateFormat,"day-attributes":e.attributes,events:e.events,"display-format":l.jsDateFormat,locale:l.locale,onSelectYear:l.onSelectYear},null,8,["placeholder","day-attributes","events","display-format","locale","onSelectYear"])}var ee=o(3008),te=o(2688),oe=o(984),ae=o(928),le=o(4104),ne=o(196),re=o(3304),ie=o(9296),de=o(4484),se=o(3864);const ce=[{offset:0,label:"Europe/London"},{offset:1,label:"Europe/Belgrade"},{offset:2,label:"Europe/Minsk"},{offset:3,label:"Asia/Kuwait"},{offset:4,label:"Asia/Muscat"},{offset:5,label:"Asia/Yekaterinburg"},{offset:5.5,label:"Asia/Kolkata"},{offset:6,label:"Asia/Dhaka"},{offset:7,label:"Asia/Krasnoyarsk"},{offset:8,label:"Asia/Brunei"},{offset:9,label:"Asia/Seoul"},{offset:9.5,label:"Australia/Darwin"},{offset:10,label:"Australia/Canberra"},{offset:11,label:"Asia/Magadan"},{offset:12,label:"Pacific/Fiji"},{offset:-11,label:"Pacific/Midway"},{offset:-10,label:"Pacific/Honolulu"},{offset:-9,label:"America/Anchorage"},{offset:-8,label:"America/Los_Angeles"},{offset:-7,label:"America/Denver"},{offset:-6,label:"America/Tegucigalpa"},{offset:-5,label:"America/New_York"},{offset:-4,label:"America/Halifax"},{offset:-3.5,label:"America/St_Johns"},{offset:-3,label:"America/Argentina/Buenos_Aires"},{offset:-2,label:"Atlantic/South_Georgia"},{offset:-1,label:"Atlantic/Azores"}],me=()=>new Date((new Date).setHours(0,0,0,0)),ue=(e,t="yyyy-MM-dd",o={})=>{try{const a=(0,ee.c)(e,t,me(),o);return!isNaN(a.valueOf())&&a.getFullYear()>=1e3?a:null}catch(a){return null}},pe=(e,t,o={})=>{try{return(0,te.c)(e,t,o)}catch(a){return null}},he=(e,t,o)=>{const a=ue(e,o),l=ue(t,o);return!(!a||!l)&&-1===(0,oe.c)(a,l)},ge=(e,t,o)=>{const a=ue(e,o),l=ue(t,o);return!(!a||!l)&&1===(0,oe.c)(a,l)},ve=(e,t,o)=>{const a=ue(e,o),l=ue(t,o);return!(!a||!l)&&0===(0,oe.c)(a,l)},fe=(e,t)=>ue(e,t),ye=(e,t,o={})=>pe(e,t,o),Ce=(e,t,o)=>{const a=ue(e,o),l=ue(t,o);if(a&&l){if(a.valueOf()<l.valueOf())return 1;if(a.valueOf()>l.valueOf())return-1;if(a.valueOf()===l.valueOf())return 0}return NaN},Ve=(e,t,o="yyyy-MM-dd")=>{const a=ue(e,o),l=ue(t,o);return a&&l?(0,ae.c)(l,a)?1:(0,le.c)(l,a)+1:0},be=(e,t,o="HH:mm")=>{const a=fe(e,o),l=fe(t,o);if(a&&l){const e=(0,ne.c)(l,a);if(e>0)return e}return 0},xe=e=>{const t=Math.floor(e/3600),o=Math.floor((e-3600*t)/60);return`${t.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},we=e=>{if(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(e)){const t=e.split(":");return 60*parseInt(t[0])*60+60*parseInt(t[1])}return parseFloat(e)<24&&/^([0-9])+(?:\.[0-9]{1,2})?$/.test(e)?60*parseFloat(e)*60:-1},Ne=(e,t=1e3)=>{t=t<1e3?1e3:t;const o=()=>{e(),setTimeout(o,t-(new Date).getTime()%t)};o()},_e=e=>(e>0?"+":"-")+String(Math.abs(e).toFixed(2)).split(".").map(((e,t)=>0===t?e.padStart(2,"0"):String(.6*parseInt(e)).padEnd(2,"0"))).join(":"),ke=()=>{let e=Intl.DateTimeFormat().resolvedOptions().timeZone;const t=(new Date).getTimezoneOffset()/60*-1;if(void 0===e){const o=ce.find((e=>e.offset===t));e=o?o.label:ce[0].label}const o=_e(t);return{name:e,label:`(GMT ${o}) ${e}`,offset:t}};var Se=o(5644);const $e={},De=()=>(e,t={})=>{try{if(!$e[e])return e;const o=$e[e].format(t);return Array.isArray(o)?"string"===typeof o[0]?o[0]:e:o}catch(o){return console.error(o),e}},Ee=()=>({beforeCreate(){this.$t=De()}});function Te(e){const t=new P(e.baseUrl,e.resourceUrl);return{init:function(){return new Promise((e=>{t.request({method:"GET",headers:{Accept:"application/json",contentType:"application/json",...!1}}).then((e=>{const{data:t}=e,o={};for(const a in t)o[a]=t[a].target||t[a].source,$e[a]=new Se.cp(t[a].target||t[a].source,void 0,void 0,{ignoreTag:!0});q.StoreService.mergeConfig({language:o})})).finally((()=>e()))}))},i18n:function(e){e.mixin(Ee())}}}var Ie=Te;function Be(){const e=De();return{$t:e}}function Le(){const{$t:e}=Be(),t=(0,q.buildLocale)({months:{wide:[e("general.january"),e("general.february"),e("general.march"),e("general.april"),e("general.may"),e("general.june"),e("general.july"),e("general.august"),e("general.september"),e("general.october"),e("general.november"),e("general.december")],abbreviated:[e("general.jan"),e("general.feb"),e("general.mar"),e("general.apr"),e("general.may"),e("general.jun"),e("general.jul"),e("general.aug"),e("general.sep"),e("general.oct"),e("general.nov"),e("general.dec")]},days:{abbreviated:[e("general.sun"),e("general.mon"),e("general.tue"),e("general.wed"),e("general.thu"),e("general.fri"),e("general.sat")],wide:[e("general.sunday"),e("general.monday"),e("general.tuesday"),e("general.wednesday"),e("general.thursday"),e("general.friday"),e("general.saturday")]}});return{locale:t}}var Ue={name:"DateInput",setup(){const e=(0,a.reactive)({attributes:[],events:[]}),t=new P(window.appGlobal.baseUrl,""),{jsDateFormat:o,userDateFormat:l}=R(),{locale:n}=Le(),r=e=>e>=200&&e<300||403===e,i=async()=>{t.request({method:"GET",url:"/api/v2/leave/workweek",params:{model:"indexed"},validateStatus:r}).then((({data:t})=>{t?.data&&(e.attributes=Object.keys(t.data).map((e=>({index:parseInt(e),class:8===t.data[e]?"--non-working-day":4===t.data[e]?"--working-day-half":""}))))}))},d=async(o,a)=>{t.request({method:"GET",url:"/api/v2/leave/holidays",params:{fromDate:o,toDate:a},validateStatus:r}).then((({data:t})=>{Array.isArray(t?.data)&&(e.events=t.data.map((e=>({date:ue(e.date,"yyyy-MM-dd"),type:e.name,class:0===e.length?"--holiday-full":"--holiday-half"}))))}))},s=async({year:e})=>{const t=(new Date).setFullYear(e),o=pe((0,re.c)(t),"yyyy-MM-dd"),a=pe((0,ie.c)(t),"yyyy-MM-dd");d(o,a)};return(0,a.onBeforeMount)((async()=>{await i(),await s({year:(new Date).getFullYear()})})),{jsDateFormat:o,userDateFormat:l,...(0,a.toRefs)(e),onSelectYear:s,locale:n}}};const Ae=(0,r.c)(Ue,[["render",Z]]);var Pe=Ae;function qe(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"time",step:15,placeholder:e.$t("attendance.hh_mm")},null,8,["placeholder"])}var Fe={name:"TimeInput"};const Me=(0,r.c)(Fe,[["render",qe]]);var ze=Me,je={install:e=>{e.component("OxdLayout",K),e.component("OxdCardTable",q.OxdCardTable),e.component("OxdButton",q.OxdButton),e.component("OxdPagination",q.OxdPagination),e.component("OxdDivider",q.OxdDivider),e.component("OxdText",q.OxdText),e.component("OxdIconButton",q.OxdIconButton),e.component("OxdForm",q.OxdForm),e.component("OxdFormRow",q.OxdFormRow),e.component("OxdFormActions",q.OxdFormActions),e.component("OxdInputField",q.OxdInputField),e.component("OxdInputGroup",q.OxdInputGroup),e.component("OxdGrid",q.OxdGrid),e.component("OxdGridItem",q.OxdGridItem),e.component("OxdTableFilter",q.OxdTableFilter),e.component("SubmitButton",d),e.component("TableHeader",g),e.component("RequiredText",C),e.component("DateInput",Pe),e.component("TimeInput",ze)}};function Re(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-alert");return(0,a.openBlock)(),(0,a.createBlock)(i,{show:!0,type:"warn",message:e.$t("general.no_records_found")},null,8,["message"])}var Oe={components:{"oxd-alert":q.OxdAlert}};const Ge=(0,r.c)(Oe,[["render",Re]]);var Qe=Ge;function He(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-alert");return(0,a.openBlock)(),(0,a.createBlock)(i,{show:!0,type:"warn",message:e.$t("general.bad_request")},null,8,["message"])}var We={components:{"oxd-alert":q.OxdAlert}};const Ye=(0,r.c)(We,[["render",He]]);var Je=Ye;const Xe={class:"orangehrm-background-container"},Ke={class:"orangehrm-card-container"},Ze={class:"orangehrm-module-under-development"},et=["src"],tt={target:"_blank",class:"orangehrm-module-under-development-link",href:"https://sourceforge.net/projects/orangehrm/files/latest/download"};function ot(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Xe,[(0,a.createElementVNode)("div",Ke,[(0,a.createElementVNode)("div",Ze,[(0,a.createVNode)(i,{tag:"h4",class:"orangehrm-module-under-development-heading"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.launching_soon")),1)])),_:1}),(0,a.createElementVNode)("img",{src:n.moduleUnderDevelopment,class:"orangehrm-module-under-development-img",alt:"this module is under development"},null,8,et),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-under-development-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.page_under_development"))+" ",1),(0,a.createElementVNode)("a",tt,(0,a.toDisplayString)(e.$t("general.click_here")),1),(0,a.createTextVNode)(" "+(0,a.toDisplayString)(e.$t("general.download_latest_release")),1)])),_:1})])])])}var at={data(){return{moduleUnderDevelopment:`${window.appGlobal.publicPath}/images/web_under_construction.png`}}};const lt=(0,r.c)(at,[["render",ot],["__scopeId","data-v-6718f751"]]);var nt=lt;const rt={class:"orangehrm-background-container"},it={class:"orangehrm-card-container"},dt={class:"orangehrm-module-disabled"};function st(e,t){const o=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",rt,[(0,a.createElementVNode)("div",it,[(0,a.createElementVNode)("div",dt,[(0,a.createVNode)(o,{tag:"h1",class:"orangehrm-module-disabled-heading"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" 403 ")])),_:1}),(0,a.createVNode)(o,{tag:"h4",class:"orangehrm-module-disabled-sub-heading"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.module_forbidden")),1)])),_:1}),(0,a.createVNode)(o,{tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.module_access_restriction")),1)])),_:1})])])])}const ct={},mt=(0,r.c)(ct,[["render",st],["__scopeId","data-v-e0c01186"]]);var ut=mt;function pt(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-alert");return(0,a.openBlock)(),(0,a.createBlock)(i,{show:!0,type:"warn",message:e.$t("time.timesheet_period_not_defined")},null,8,["message"])}var ht={components:{"oxd-alert":q.OxdAlert}};const gt=(0,r.c)(ht,[["render",pt]]);var vt=gt,ft={"bad-request":Je,"no-records-found":Qe,"module-under-development":nt,"disabled-module":ut,"time-sheet-period-not-defined":vt};const yt={class:"orangehrm-background-container"},Ct={class:"orangehrm-paper-container"},Vt={class:"orangehrm-header-container"},bt={class:"orangehrm-container"},xt={class:"orangehrm-bottom-container"};function wt(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yt,[(0,a.createElementVNode)("div",Ct,[(0,a.createElementVNode)("div",Vt,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.job_titles")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",bt,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[1]||(t[1]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",xt,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[2]||(t[2]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}o(3248);function Nt(){const e=(0,a.getCurrentInstance)()?.appContext.config.globalProperties.$toast,t=e=>(...t)=>e&&e(...t);return{notify:t(e?.notify),show:t(e?.show),success:t(e?.success),error:t(e?.error),info:t(e?.info),warn:t(e?.warn),clear:t(e?.clear),clearAll:t(e?.clearAll),saveSuccess:t(e?.saveSuccess),addSuccess:t(e?.addSuccess),updateSuccess:t(e?.updateSuccess),deleteSuccess:t(e?.deleteSuccess),cannotDelete:t(e?.cannotDelete),noRecordsFound:t(e?.noRecordsFound)}}async function _t(e,t){try{const o=await e.getAll(t);return{data:o.data.data,meta:o.data.meta,error:!1}}catch(o){return{error:!0,message:o.message}}}function kt(e,t){const o=e*(t-1);return{limit:e,offset:o}}function St(e){const t=JSON.parse(JSON.stringify((0,a.unref)(e)));for(const[o,a]of Object.entries(t))t[o]=null===a||""===a?void 0:a;return t}function $t(e){return e}function Dt(e,{query:t={},normalizer:o=$t,prefetch:l=!0,toastNoRecords:n=!0,pageSize:r=50}={}){const i=(0,a.reactive)({showPaginator:!1,isLoading:!1,response:{},total:0,pages:0,currentPage:1}),{noRecordsFound:d}=Nt(),s=async()=>{i.isLoading=!0;const a=kt(r,i.currentPage),l=St(t);if(i.response=await _t(e,{...a,...l}),!i.response.error){const{data:e,...t}=i.response,a=o(e);i.response={data:a,...t}}i.response.meta&&(i.total=i.response.meta.total,i.total>r?(i.showPaginator=!0,i.pages=Math.ceil(i.total/r)):(i.currentPage=1,i.pages=1,i.showPaginator=!1),0===i.total&&n&&d()),i.isLoading=!1};return l&&(0,a.onBeforeMount)(s),(0,a.watch)((()=>i.currentPage),s),{...(0,a.toRefs)(i),execQuery:s}}const Et={class:"orangehrm-modal-header"},Tt={class:"orangehrm-text-center-align"},It={class:"orangehrm-modal-footer"};function Bt(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-dialog-popup","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Et,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.are_you_sure")),1)])),_:1})]),(0,a.createElementVNode)("div",Tt,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.message||e.$t("general.delete_confirmation_message")),1)])),_:1})]),(0,a.createElementVNode)("div",It,[(0,a.createVNode)(d,{label:e.$t("general.no_cancel"),"display-type":"ghost",class:"orangehrm-button-margin",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{label:e.$t("general.yes_delete"),"icon-name":"trash","display-type":"label-danger",class:"orangehrm-button-margin",onClick:r.onDelete},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var Lt={components:{"oxd-dialog":q.OxdDialog},props:{message:{type:String,default:null,required:!1}},data(){return{show:!1,reject:null,resolve:null}},methods:{showDialog(){return new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))},onDelete(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const Ut=(0,r.c)(Lt,[["render",Bt],["__scopeId","data-v-8f9701a2"]]);var At=Ut;function Pt(e){const t=(0,a.ref)({...JSON.parse(JSON.stringify(e.sortDefinition))}),o=(0,a.computed)((()=>Object.keys(t.value).filter((e=>{const o=t.value[e];return o&&"DEFAULT"!=o}))[0])),l=(0,a.computed)((()=>t.value[o.value])),n=e=>(0,a.watch)(t,e);return{sortDefinition:t,sortField:o,sortOrder:l,onSort:n}}const qt={jobTitleName:"",jobDescription:""},Ft={"jt.jobTitleName":"ASC"};var Mt={components:{"delete-confirmation":At},setup(){const e=(0,a.ref)({...qt}),{sortDefinition:t,sortField:o,sortOrder:l,onSort:n}=Pt({sortDefinition:Ft}),r=(0,a.computed)((()=>({jobTitleName:e.value.jobTitleName,jobDescription:e.value.jobDescription,sortField:o.value,sortOrder:l.value}))),i=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-titles"),{showPaginator:d,currentPage:s,total:c,pages:m,pageSize:u,response:p,isLoading:h,execQuery:g}=Dt(i,{query:r});return n(g),{http:i,showPaginator:d,currentPage:s,isLoading:h,total:c,pages:m,pageSize:u,execQuery:g,items:p,filters:e,sortDefinition:t}},data(){return{headers:[{name:"title",slot:"title",title:this.$t("admin.job_titles"),sortField:"jt.jobTitleName",style:{flex:2}},{name:"description",cellType:"oxd-table-cell-truncate",title:this.$t("admin.job_description"),style:{flex:4}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveJobTitle")},onClickEdit(e){U("/admin/saveJobTitle/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const zt=(0,r.c)(Mt,[["render",wt]]);var jt=zt;const Rt={class:"orangehrm-background-container"},Ot={class:"orangehrm-card-container"};function Gt(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("file-upload-input"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Rt,[(0,a.createElementVNode)("div",Ot,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_job_title")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.title,"onUpdate:modelValue":t[0]||(t[0]=e=>n.jobTitle.title=e),label:e.$t("general.job_title"),rules:n.rules.title,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.jobTitle.description=e),type:"textarea",label:e.$t("admin.job_description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{newFile:n.jobTitle.newSpecification,"onUpdate:newFile":t[2]||(t[2]=e=>n.jobTitle.newSpecification=e),method:n.jobTitle.method,"onUpdate:method":t[3]||(t[3]=e=>n.jobTitle.method=e),label:e.$t("general.job_specification"),"button-label":e.$t("general.browse"),file:n.jobTitle.oldSpecification,rules:n.rules.specification,url:"admin/viewJobSpecification/attachId",hint:e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.note,"onUpdate:modelValue":t[4]||(t[4]=e=>n.jobTitle.note=e),type:"textarea",label:e.$t("general.note"),placeholder:e.$t("general.add_note"),rules:n.rules.note,"label-icon":"pencil-square"},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(h)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Qt=De(),Ht=function(e){return"string"===typeof e?!!e&&""!==e.trim()||Qt("general.required"):"number"===typeof e?!Number.isNaN(e)||"general.required":Array.isArray(e)?!!e&&0!==e.length||Qt("general.required"):"object"===typeof e&&null!==e||Qt("general.required")},Wt=function(e){return function(t){return!t||new String(t).length<=e||Qt("general.should_be_less_n_characters",{amount:e})}},Yt=function(e="yyyy-mm-dd",t="yyyy-MM-dd"){return function(o){if(!o)return!0;const a=ue(o,t);return!!a||Qt("general.should_be_a_valid_date_in_x_format",{format:e})}},Jt=function(){return function(e){if(!e)return!0;const t="yyyy-MM-dd",o=pe(new Date,t)||"",a=Ve(e,o,t);return a>0||Qt("recruitment.should_be_current_date_previous_date")}},Xt=function(e){if(!e)return!0;const t=ue(e,"HH:mm");return!!t||Qt("general.should_be_a_valid_date_in_hh:mm_format")},Kt=function(e){return function(t){return Number.isNaN(parseFloat(t))||parseFloat(t)<e||Qt("general.should_be_less_than_n",{amount:e})}},Zt=function(e){return""==e||/^\d+$/.test(e)&&!Number.isNaN(parseFloat(e))||Qt("general.should_be_a_number")},eo=function(e){return""==e||/^\d+$/.test(e)&&!Number.isNaN(parseFloat(e))||Qt("general.should_be_a_numeric_value")},to=function(e){return""==e||/^\d*\.?\d*$/.test(e)&&!Number.isNaN(parseFloat(e))||Qt("general.should_be_a_number")},oo=function(e){return""==e||/^-?\d*\.?\d*$/.test(e)&&!Number.isNaN(parseFloat(e))||Qt("general.should_be_a_number")},ao=function(e,t,o="yyyy-MM-dd"){return!e||!t||he(e,t,o)},lo=function(e,t,o="yyyy-MM-dd"){return!e||!t||ge(e,t,o)},no=function(e,t,o="yyyy-MM-dd"){return!e||!t||ve(e,t,o)},ro=(e,t,o={allowSameDate:!1,dateFormat:"yyyy-MM-dd"})=>a=>{const l="function"===typeof e?e():e,n="string"===typeof t?t:Qt("general.end_date_should_be_after_start_date");return o.allowSameDate?no(a,l)||lo(a,l,o.dateFormat)||n:lo(a,l,o.dateFormat)||n},io=function(e,t,o="yyyy-MM-dd"){return!e||!t||1===Ce(e,t,o)},so=function(e,t,o="HH:mm"){return!e||!t||-1===Ce(e,t,o)},co=function(e,t,o="HH:mm"){return!e||!t||0===Ce(e,t,o)},mo=(e,t,o={allowSameTime:!1,timeFormat:"HH:mm"})=>a=>{const l="function"===typeof e?e():e,n="string"===typeof t?t:Qt("general.end_time_should_be_after_start_time");return o.allowSameTime?co(a,l)||so(a,l,o.timeFormat)||n:so(a,l,o.timeFormat)||n},uo=function(e){return function(t){return null===t||t.size&&t.size<=e||Qt("general.attachment_size_exceeded")}},po=function(e){return function(t){return null===t||t&&e.findIndex((e=>e===t.type))>-1||Qt("general.file_type_not_allowed")}},ho=function(e){return!e||/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/.test(e)||Qt("general.expected_email_address_format_not_matched")},go=function(e){return!e||/^[0-9+\-/() ]+$/.test(e)||Qt("general.allows_phone_numbers_only")},vo=(e,t,o={allowSameDate:!1,dateFormat:"yyyy-MM-dd"})=>a=>{const l="function"===typeof e?e():e,n="string"===typeof t?t:Qt("general.start_date_should_be_before_end_date");return o.allowSameDate?no(a,l)||ao(a,l,o.dateFormat)||n:ao(a,l,o.dateFormat)||n},fo=function(e){return function(t){return Number.isNaN(parseFloat(t))||parseFloat(t)<e||Qt("general.should_be_less_than_n",{amount:e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")})}},yo=(e,t,o={allowSameTime:!1,timeFormat:"HH:mm"})=>a=>{const l="function"===typeof e?e():e,n="string"===typeof t?t:Qt("general.start_time_should_be_before_end_time");return o.allowSameTime?co(a,l)||io(a,l,o.timeFormat)||n:io(a,l,o.timeFormat)||n},Co=function(e){return function(t){return!t||String(t).length>=e||Qt("general.should_be_least_n_characters",{amount:e})}},Vo=(e,t)=>o=>{const a="function"===typeof e?e():e,l="string"===typeof t?t:Qt("general.should_be_higher_than_minimum_value");return null===a||(void 0===a||(""===a||""===a&&""===o||("0"===a||"0"===a&&"0"===o||(parseFloat(a)<parseFloat(o)||l))))},bo=(e,t)=>o=>{const a="function"===typeof e?e():e,l="string"===typeof t?t:Qt("general.should_be_lower_than_maximum_value");return null===a||null===o||(void 0===a||void 0===o||(""===a||""===o||("0"===a||"0"===o||(parseFloat(a)>parseFloat(o)||l))))},xo=(e,t,o)=>a=>{const l="string"===typeof o?o:Qt("general.should_be_a_number_between_min_and_max",{min:e,max:t});return!0===Zt(a)&&parseFloat(a)>=e&&parseFloat(a)<=t||l},wo=function(e){return!e||(!!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/i.test(e)||Qt("general.invalid"))},No=function(e,t=.1){return function(o){return new Promise((a=>{if(null===o||"image/svg+xml"===o.type)return a(!0);const l=new Image;l.src=`data:${o.type};base64, ${o.base64}`,l.decode().then((()=>{Math.abs(l.width/l.height-e)<t?a(!0):a(Qt("general.incorrect_dimensions"))}))}))}},_o=function(e,t){const o="string"===typeof t?t:Qt("general.greater_than_or_equal_to_n",{minValue:e});return function(t){return null===t||""===t||(!0!==oo(t)?o:parseFloat(t)>=e||o)}},ko=function(e,t){const o="string"===typeof t?t:Qt("general.less_than_or_equal_to_n",{maxValue:e});return function(t){return null===t||""===t||(!0!==oo(t)?o:parseFloat(t)<=e||o)}},So=function(e){return"string"!==typeof e||Qt("general.invalid")},$o=function(e){let t;return t=/\p{L}/u.test(e)?/^([\p{L}\p{N}\p{S}\-.])+(\.?([\p{L}\p{N}]|xn--[\p{L}\p{N}-]+)+\.?)(:[0-9]+)?$/gu:/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,!e||t.test(e)||Qt("general.invalid")},Do=function(e,t,o){return function(a){return!a||/^\d+$/.test(a)&&!Number.isNaN(parseFloat(a))&&String(a).length<=e&&parseInt(a)>=t&&parseInt(a)<=o||Qt("general.enter_valid_port_between_a_to_b",{minValue:t,maxValue:o})}},Eo=function(e){return""==e||/^\d+?(?:\.\d{1,2})?$/.test(e)||Qt("claim.should_be_a_valid_number")},To={class:"orangehrm-file-current"},Io={key:0,class:"orangehrm-file-options"},Bo={key:1,class:"orangehrm-file-input"};function Lo(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[r.fileSelected?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,label:o.label},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",To,[(0,a.createElementVNode)("div",{class:"orangehrm-file-preview",onClick:t[0]||(t[0]=(...e)=>r.downloadFile&&r.downloadFile(...e))},[(0,a.createVNode)(i,{class:"orangehrm-file-icon",name:"file-earmark-text"}),(0,a.createVNode)(d,{class:"orangehrm-file-name",tag:"p",title:o.file.filename},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.file.filename)+" ",1),(0,a.createVNode)(i,{class:"orangehrm-file-download",name:"download"})])),_:1},8,["title"])]),o.disabled?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",Io,[(0,a.createVNode)(s,{type:"radio","option-label":e.$t("general.keep_current"),value:"keepCurrent","model-value":o.method,"onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:method",t))},null,8,["option-label","model-value"]),o.deletable?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,type:"radio","option-label":e.$t("general.delete_current"),value:"deleteCurrent","model-value":o.method,"onUpdate:modelValue":t[2]||(t[2]=t=>e.$emit("update:method",t))},null,8,["option-label","model-value"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{type:"radio","option-label":e.$t("general.replace_current"),value:"replaceCurrent","model-value":o.method,"onUpdate:modelValue":t[3]||(t[3]=t=>e.$emit("update:method",t))},null,8,["option-label","model-value"])]))])])),_:1},8,["label"])):(0,a.createCommentVNode)("",!0),"replaceCurrent"!==o.method&&r.fileSelected?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",Bo,[(0,a.createVNode)(s,(0,a.mergeProps)(e.$attrs,{type:"file",label:r.fieldLabel,"model-value":o.newFile,disabled:o.disabled,placeholder:e.$t("general.no_file_selected"),"onUpdate:modelValue":t[4]||(t[4]=t=>e.$emit("update:newFile",t))}),null,16,["label","model-value","disabled","placeholder"]),(0,a.createVNode)(d,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.hint),1)])),_:1})]))],64)}var Uo={name:"FileUploadInput",components:{"oxd-icon":q.OxdIcon},inheritAttrs:!1,props:{label:{type:String,default:""},hint:{type:String,default:""},url:{type:[String,Function],required:!0},method:{type:String,required:!0},file:{type:Object,required:!1,default:()=>null},newFile:{type:Object,required:!1,default:()=>null},disabled:{type:Boolean,default:!1},deletable:{type:Boolean,default:!0}},emits:["update:method","update:newFile"],computed:{fileSelected(){return this.file&&Object.keys(this.file).length>0},fieldLabel(){return"replaceCurrent"===this.method&&this.fileSelected?this.$t("general.upload_n_file",{fileName:this.label}):this.label}},methods:{downloadFile(){let e;if("function"===typeof this.url)e=this.url(this.$props);else{if(!this.file?.id)return;e=`${window.appGlobal.baseUrl}/${this.url}/${this.file.id}`}window.open(e,"_blank")}}};const Ao=(0,r.c)(Uo,[["render",Lo],["__scopeId","data-v-2d6a04e6"]]);var Po=Ao;function qo(e,t={debounce:!0,debounceOffset:500}){const o=De(),a=(a,l,n={translateKey:"general.already_exists"})=>{const r=t=>new Promise(((r,i)=>{t.trim()?e.request({method:"GET",url:"api/v2/core/validation/unique",params:{value:t,entityName:a,attributeName:l,entityId:n.entityId,matchByField:n.matchByField,matchByValue:n.matchByValue}}).then((e=>{const{data:t}=e.data;!0===t.valid?r(!0):r(o(n.translateKey??"general.already_exists"))})).catch((e=>i(e))):r(!0)}));return t.debounce?(0,q.promiseDebounce)(r,t.debounceOffset):r};return{createUniqueValidator:a}}const Fo={title:"",description:"",oldSpecification:"",newSpecification:null,method:"keepCurrent",note:""};var Mo={components:{"file-upload-input":Po},props:{jobTitleId:{type:String,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-titles"),{createUniqueValidator:o}=qo(t),a=o("JobTitle","jobTitleName",{entityId:e.jobTitleId,matchByField:"isDeleted",matchByValue:"false"});return{http:t,jobTitleUniqueValidation:a}},data(){return{isLoading:!1,jobTitle:{...Fo},rules:{title:[Ht,this.jobTitleUniqueValidation,Wt(100)],description:[Wt(400)],specification:[e=>"replaceCurrent"!=this.jobTitle.method||Ht(e),po(this.allowedFileTypes),uo(this.maxFileSize)],note:[Wt(400)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},created(){this.isLoading=!0,this.http.get(this.jobTitleId).then((e=>{const{data:t}=e.data;this.jobTitle.title=t.title,this.jobTitle.description=t.description,this.jobTitle.note=t.note,this.jobTitle.oldSpecification=t.jobSpecification?.id?t.jobSpecification:null,this.jobTitle.newSpecification=null,this.jobTitle.method="keepCurrent"})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/admin/viewJobTitleList")},onSave(){this.isLoading=!0,this.http.update(this.jobTitleId,{title:this.jobTitle.title,description:this.jobTitle.description,note:this.jobTitle.note,currentJobSpecification:this.jobTitle.oldSpecification?this.jobTitle.method:void 0,specification:this.jobTitle.newSpecification?this.jobTitle.newSpecification:void 0}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const zo=(0,r.c)(Mo,[["render",Gt]]);var jo=zo;const Ro={class:"orangehrm-background-container"},Oo={class:"orangehrm-card-container"};function Go(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ro,[(0,a.createElementVNode)("div",Oo,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_job_title")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.title,"onUpdate:modelValue":t[0]||(t[0]=e=>n.jobTitle.title=e),label:e.$t("general.job_title"),rules:n.rules.title,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.jobTitle.description=e),type:"textarea",label:e.$t("admin.job_description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.specification,"onUpdate:modelValue":t[2]||(t[2]=e=>n.jobTitle.specification=e),type:"file",label:e.$t("general.job_specification"),"button-label":e.$t("general.browse"),rules:n.rules.specification},null,8,["modelValue","label","button-label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.jobTitle.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.jobTitle.note=e),type:"textarea",label:e.$t("general.note"),placeholder:e.$t("general.add_note"),"label-icon":"pencil-square",rules:n.rules.note},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Qo={title:"",description:"",specification:null,note:""};var Ho={props:{allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-titles"),{createUniqueValidator:t}=qo(e),o=t("JobTitle","jobTitleName",{matchByField:"isDeleted",matchByValue:"false"});return{http:e,jobTitleUniqueValidation:o}},data(){return{isLoading:!1,jobTitle:{...Qo},rules:{title:[Ht,this.jobTitleUniqueValidation,Wt(100)],description:[Wt(400)],specification:[po(this.allowedFileTypes),uo(this.maxFileSize)],note:[Wt(400)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onCancel(){U("/admin/viewJobTitleList")},onSave(){this.isLoading=!0,this.http.create({...this.jobTitle}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const Wo=(0,r.c)(Ho,[["render",Go]]);var Yo=Wo;const Jo={class:"orangehrm-background-container"},Xo={class:"orangehrm-paper-container"},Ko={class:"orangehrm-header-container"},Zo={class:"orangehrm-container"},ea={class:"orangehrm-bottom-container"};function ta(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Jo,[(0,a.createElementVNode)("div",Xo,[(0,a.createElementVNode)("div",Ko,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.job_categories")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Zo,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",ea,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var oa={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-categories"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.job_category"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveJobCategory")},onClickEdit(e){U("/admin/saveJobCategory/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const aa=(0,r.c)(oa,[["render",ta]]);var la=aa;const na={class:"orangehrm-background-container"},ra={class:"orangehrm-card-container"};function ia(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",na,[(0,a.createElementVNode)("div",ra,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_job_category")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.category.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.category.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var da={props:{jobCategoryId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-categories"),{createUniqueValidator:o}=qo(t),a=o("JobCategory","name",{entityId:e.jobCategoryId});return{http:t,jobCategoryUniqueValidation:a}},data(){return{isLoading:!1,category:{id:"",name:""},rules:{name:[Ht,Wt(50),this.jobCategoryUniqueValidation]},errors:[]}},created(){this.isLoading=!0,this.http.get(this.jobCategoryId).then((e=>{const{data:t}=e.data;this.category.id=t.id,this.category.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.jobCategoryId,{name:this.category.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/jobCategory")}}};const sa=(0,r.c)(da,[["render",ia]]);var ca=sa;const ma={class:"orangehrm-background-container"},ua={class:"orangehrm-card-container"};function pa(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ma,[(0,a.createElementVNode)("div",ua,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_job_category")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.category.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.category.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var ha={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-categories"),{createUniqueValidator:t}=qo(e),o=t("JobCategory","name");return{http:e,jobCategoryUniqueValidation:o}},data(){return{isLoading:!1,category:{id:"",name:""},rules:{name:[Ht,Wt(50),this.jobCategoryUniqueValidation]},errors:[]}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.category.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/jobCategory")}}};const ga=(0,r.c)(ha,[["render",pa]]);var va=ga;const fa={class:"orangehrm-background-container"},ya=(0,a.createElementVNode)("br",null,null,-1),Ca={class:"orangehrm-paper-container"},Va={class:"orangehrm-header-container"},ba={class:"orangehrm-container"},xa={class:"orangehrm-bottom-container"};function wa(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("table-header"),y=(0,a.resolveComponent)("oxd-card-table"),C=(0,a.resolveComponent)("oxd-pagination"),V=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",fa,[(0,a.createVNode)(v,{"filter-title":e.$t("admin.system_users")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.username,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.username=e),label:e.$t("general.username")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.userRoleId,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.userRoleId=e),type:"select",label:e.$t("general.user_role"),options:n.userRoles},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.empNumber,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.empNumber=e),rules:n.rules.employee},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.status,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.status=e),type:"select",label:e.$t("general.status"),options:n.userStatuses},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),ya,(0,a.createElementVNode)("div",Ca,[(0,a.createElementVNode)("div",Va,[(0,a.createVNode)(p,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(f,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",ba,[(0,a.createVNode)(y,{selected:n.checkedItems,"onUpdate:selected":t[4]||(t[4]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[5]||(t[5]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",xa,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(C,{key:0,current:l.currentPage,"onUpdate:current":t[6]||(t[6]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(V,{ref:"deleteDialog"},null,512)])}const Na={key:0,class:"past-employee-tag"};function _a(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("general.employee_name"),clear:!1,"create-options":r.loadEmployees},{afterSelected:(0,a.withCtx)((({data:t})=>[t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.past_employee")),1)],64)):(0,a.createCommentVNode)("",!0)])),option:(0,a.withCtx)((({data:t})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(t.label),1),t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)("div",Na,(0,a.toDisplayString)(e.$t("general.past_employee")),1)):(0,a.createCommentVNode)("",!0)])),_:1},8,["label","create-options"])}var ka={name:"EmployeeAutocomplete",props:{params:{type:Object,default:()=>({})},apiPath:{type:String,default:"/api/v2/pim/employees"}},setup(e){const t=new P(window.appGlobal.baseUrl,e.apiPath);return{http:t}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()&&e.length<100?this.http.getAll({nameOrId:e.trim(),...this.params}).then((({data:e})=>{t(e.data.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,_employee:e,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const Sa=(0,r.c)(ka,[["render",_a],["__scopeId","data-v-08362132"]]);var $a=Sa;function Da(){const{$t:e}=Be(),t=(t,o)=>{if("Purged"===t.firstName&&"Employee"===t.lastName)return e("general.purged_employee");const a=o?.includeMiddle,l=o?.excludePastEmpTag,n="boolean"===typeof a&&a&&"string"===typeof t.middleName?` ${t.middleName} `:" ";if(t.terminationId){const o="undefined"===typeof l?` ${e("general.past_employee")}`:l?"":` ${e("general.past_employee")}`;return`${t.firstName}${n}${t.lastName}${o}`}return`${t.firstName}${n}${t.lastName}`};return{$tEmpName:t}}const Ea={username:"",userRoleId:null,empNumber:null,status:null},Ta={"u.userName":"ASC","r.displayName":"ASC","e.firstName":"ASC","u.status":"DEFAULT"};var Ia={components:{"delete-confirmation":At,"employee-autocomplete":$a},props:{unselectableIds:{type:Array,default:()=>[]}},setup(e){const{$t:t}=Be(),{$tEmpName:o}=Da(),l=a=>a.map((a=>{const l=e.unselectableIds.findIndex((e=>e==a.id));return{id:a.id,userName:a.userName,role:"Admin"===a.userRole?.displayName?t("general.admin"):t("general.ess"),empName:o(a.employee,{includeMiddle:!1}),status:a.status?t("general.enabled"):t("general.disabled"),isSelectable:-1===l}})),n=(0,a.ref)({...Ea}),{sortDefinition:r,sortField:i,sortOrder:d,onSort:s}=Pt({sortDefinition:Ta}),c=(0,a.computed)((()=>({username:n.value.username,userRoleId:n.value.userRoleId?.id,empNumber:n.value.empNumber?.id,status:n.value.status?.id,sortField:i.value,sortOrder:d.value}))),m=new P(window.appGlobal.baseUrl,"/api/v2/admin/users"),{showPaginator:u,currentPage:p,total:h,pages:g,pageSize:v,response:f,isLoading:y,execQuery:C}=Dt(m,{query:c,normalizer:l});return s(C),{http:m,showPaginator:u,currentPage:p,isLoading:y,total:h,pages:g,pageSize:v,execQuery:C,items:f,filters:n,sortDefinition:r}},data(){return{headers:[{name:"userName",title:this.$t("general.username"),sortField:"u.userName",style:{flex:1}},{name:"role",title:this.$t("general.user_role"),style:{flex:1},sortField:"r.displayName"},{name:"empName",slot:"title",title:this.$t("general.employee_name"),sortField:"e.firstName",style:{flex:1}},{name:"status",title:this.$t("general.status"),sortField:"u.status",style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],userRoles:[{id:1,label:this.$t("general.admin")},{id:2,label:this.$t("general.ess")}],userStatuses:[{id:1,label:this.$t("general.enabled")},{id:0,label:this.$t("general.disabled")}],checkedItems:[],rules:{employee:[Wt(100),So]}}},methods:{onClickAdd(){U("/admin/saveSystemUser")},onClickEdit(e){U("/admin/saveSystemUser/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.cannotDelete();this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...Ea},this.filterItems()}}};const Ba=(0,r.c)(Ia,[["render",wa]]);var La=Ba;const Ua={class:"orangehrm-background-container"},Aa={class:"orangehrm-card-container"};function Pa(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("employee-autocomplete"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("password-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ua,[(0,a.createElementVNode)("div",Aa,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_user")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.role,"onUpdate:modelValue":t[0]||(t[0]=e=>n.user.role=e),type:"select",label:e.$t("general.user_role"),rules:n.rules.role,options:n.userRoles,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.user.employee,"onUpdate:modelValue":t[1]||(t[1]=e=>n.user.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.user.status=e),type:"select",label:e.$t("general.status"),rules:n.rules.status,options:n.userStatuses,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.username,"onUpdate:modelValue":t[3]||(t[3]=e=>n.user.username=e),label:e.$t("general.username"),rules:n.rules.username,required:"",autocomplete:"off"},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,{password:n.user.password,"onUpdate:password":t[4]||(t[4]=e=>n.user.password=e),passwordConfirm:n.user.passwordConfirm,"onUpdate:passwordConfirm":t[5]||(t[5]=e=>n.user.passwordConfirm=e),"is-password-required":o.isPasswordRequired},null,8,["password","passwordConfirm","is-password-required"]),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function qa(e,t,o,l,n,r){const i=(0,a.resolveComponent)("password-strength-indicator"),d=(0,a.resolveComponent)("oxd-input-field"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row");return(0,a.openBlock)(),(0,a.createBlock)(u,{class:"user-password-row"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"user-password-cell"},{default:(0,a.withCtx)((()=>[o.password?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,"password-strength":l.passwordStrength},null,8,["password-strength"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d,{type:"password",autocomplete:"off",required:o.isPasswordRequired,"model-value":o.password,rules:n.rules.password,label:e.$t("general.password"),"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:password",t))},null,8,["required","model-value","rules","label"]),(0,a.createVNode)(s,{class:"user-password-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.password_strength_message")),1)])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{ref:"passwordConfirm",type:"password",autocomplete:"off",required:o.isPasswordRequired,"model-value":o.passwordConfirm,rules:n.rules.passwordConfirm,label:e.$t("general.confirm_password"),"onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:passwordConfirm",t))},null,8,["required","model-value","rules","label"])])),_:1})])),_:1})])),_:1})}function Fa(e){const t=(0,a.ref)(0),o=o=>new Promise((a=>{""!==o.trim()?e.request({method:"POST",url:"/api/v2/auth/public/validation/password",data:{password:o}}).then((e=>{const{data:o,meta:l}=e.data;t.value=l?.strength||0,Array.isArray(o?.messages)&&o.messages.length>0?a(o.messages[0]):a(!0)})):(t.value=0,a(!0))}));return{passwordStrength:t,validatePassword:o}}function Ma(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-chip");return(0,a.openBlock)(),(0,a.createBlock)(i,{class:(0,a.normalizeClass)(r.chipClasses),label:r.passwordStrengthLabel},null,8,["class","label"])}var za={name:"PasswordStrengthIndicator",components:{"oxd-chip":q.OxdChip},props:{passwordStrength:{type:Number,required:!0}},computed:{passwordStrengthLabel(){switch(this.passwordStrength){case 1:return this.$t("general.weak");case 2:return this.$t("general.better");case 3:return this.$t("general.strong");case 4:return this.$t("general.strongest");default:return this.$t("general.very_weak")}},chipClasses(){return{"orangehrm-password-chip":!0,"--strength-better":2===this.passwordStrength,"--strength-strong":3===this.passwordStrength,"--strength-strongest":4===this.passwordStrength}}}};const ja=(0,r.c)(za,[["render",Ma],["__scopeId","data-v-7d7791c7"]]);var Ra=ja,Oa={name:"PasswordInput",components:{"password-strength-indicator":Ra},props:{password:{type:String,required:!0},passwordConfirm:{type:String,required:!0},isPasswordRequired:{type:Boolean,default:!0}},emits:["update:password","update:passwordConfirm"],setup(){const e=new P(window.appGlobal.baseUrl,""),{passwordStrength:t,validatePassword:o}=Fa(e);return{passwordStrength:t,validatePassword:o}},data(){return{rules:{password:[e=>!this.isPasswordRequired||Ht(e),Wt(64),(0,q.promiseDebounce)(this.validatePassword,500)],passwordConfirm:[e=>!(this.isPasswordRequired||this.password.length>0)||(!!e&&e===this.password||this.$t("general.passwords_do_not_match"))]}}},watch:{password(e){(this.passwordConfirm&&e!==this.passwordConfirm||this.passwordConfirm&&e===this.passwordConfirm)&&this.$nextTick(this.$refs.passwordConfirm.triggerUpdate)}}};const Ga=(0,r.c)(Oa,[["render",qa],["__scopeId","data-v-a64d9b08"]]);var Qa=Ga;const Ha={username:"",role:null,employee:null,status:null,password:"",passwordConfirm:""};var Wa={components:{"employee-autocomplete":$a,"password-input":Qa},props:{isPasswordRequired:{type:Boolean,default:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/users");return e.setIgnorePath("/api/v2/admin/validation/user-name"),{http:e}},data(){return{isLoading:!1,user:{...Ha},rules:{username:[Ht,Co(5),Wt(40),(0,q.promiseDebounce)(this.validateUserName,500)],role:[Ht],employee:[Ht,So],status:[Ht]},userRoles:[{id:1,label:this.$t("general.admin")},{id:2,label:this.$t("general.ess")}],userStatuses:[{id:1,label:this.$t("general.enabled")},{id:2,label:this.$t("general.disabled")}]}},methods:{onCancel(){U("/admin/viewSystemUsers")},onSave(){this.isLoading=!0,this.http.create({username:this.user.username.trim(),password:this.user.password,status:this.user.status&&1===this.user.status.id,userRoleId:this.user.role?.id,empNumber:this.user.employee?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},validateUserName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/admin/validation/user-name",params:{userName:this.user.username.trim()}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const Ya=(0,r.c)(Wa,[["render",Pa]]);var Ja=Ya;const Xa={class:"orangehrm-background-container"},Ka={class:"orangehrm-card-container"};function Za(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("employee-autocomplete"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("password-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Xa,[(0,a.createElementVNode)("div",Ka,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_user")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.role,"onUpdate:modelValue":t[0]||(t[0]=e=>n.user.role=e),type:"select",label:e.$t("general.user_role"),rules:n.rules.role,options:n.userRoles,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.user.employee,"onUpdate:modelValue":t[1]||(t[1]=e=>n.user.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.user.status=e),type:"select",label:e.$t("general.status"),rules:n.rules.status,options:n.userStatuses,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.username,"onUpdate:modelValue":t[3]||(t[3]=e=>n.user.username=e),label:e.$t("general.username"),rules:n.rules.username,required:"",autocomplete:"off"},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.user.changePassword,"onUpdate:modelValue":t[4]||(t[4]=e=>n.user.changePassword=e),type:"checkbox",value:"true","true-value":!0,"false-value":!1,"option-label":"Yes",label:e.$t("general.change_password_question")},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),n.user.changePassword?((0,a.openBlock)(),(0,a.createBlock)(h,{key:0,password:n.user.password,"onUpdate:password":t[5]||(t[5]=e=>n.user.password=e),passwordConfirm:n.user.passwordConfirm,"onUpdate:passwordConfirm":t[6]||(t[6]=e=>n.user.passwordConfirm=e),"is-password-required":o.isPasswordRequired},null,8,["password","passwordConfirm","is-password-required"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const el={id:"",username:"",role:null,employee:null,status:null,changePassword:!1,password:"",passwordConfirm:""};var tl={components:{"employee-autocomplete":$a,"password-input":Qa},props:{systemUserId:{type:Number,required:!0},isPasswordRequired:{type:Boolean,default:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/users");return e.setIgnorePath("/api/v2/admin/validation/user-name"),{http:e}},data(){return{isLoading:!1,user:{...el},rules:{username:[Ht,Co(5),Wt(40),(0,q.promiseDebounce)(this.validateUserName,500)],role:[Ht],employee:[Ht,So],status:[Ht]},userRoles:[{id:1,label:this.$t("general.admin")},{id:2,label:this.$t("general.ess")}],userStatuses:[{id:1,label:this.$t("general.enabled")},{id:2,label:this.$t("general.disabled")}]}},beforeMount(){this.isLoading=!0,this.http.get(this.systemUserId).then((e=>{const{data:t}=e.data;this.user.id=t.id,this.user.username=t.userName,this.user.role=this.userRoles.find((e=>e.id===t.userRole.id)),this.user.employee={id:t.employee.empNumber,label:`${t.employee.firstName} ${t.employee.middleName} ${t.employee.lastName}`,isPastEmployee:t.employee.terminationId},t.status?this.user.status={id:1,label:this.$t("general.enabled")}:this.user.status={id:2,label:this.$t("general.disabled")}})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/admin/viewSystemUsers")},onSave(){this.isLoading=!0,this.http.update(this.systemUserId,{username:this.user.username.trim(),password:this.user.password,status:this.user.status&&1===this.user.status.id,userRoleId:this.user.role?.id,empNumber:this.user.employee?.id,changePassword:this.user.changePassword}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},validateUserName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/admin/validation/user-name",params:{userName:this.user.username.trim(),userId:this.systemUserId}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const ol=(0,r.c)(tl,[["render",Za]]);var al=ol;const ll={class:"orangehrm-background-container"},nl={class:"orangehrm-paper-container"},rl={class:"orangehrm-header-container"},il={key:1,class:"org-root-container"},dl={class:"org-container"},sl={key:0,class:"loader"},cl={class:"org-name"},ml={key:0,class:"org-action"},ul=["onClick"],pl=["onClick"],hl=["onClick"];function gl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-switch-input"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("oxd-loading-spinner"),u=(0,a.resolveComponent)("oxd-icon-button"),p=(0,a.resolveComponent)("oxd-dropdown"),h=(0,a.resolveComponent)("oxd-sheet"),g=(0,a.resolveComponent)("oxd-tree-view"),v=(0,a.resolveComponent)("delete-confirmation"),f=(0,a.resolveComponent)("save-org-unit"),y=(0,a.resolveComponent)("edit-org-unit");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ll,[(0,a.createElementVNode)("div",nl,[(0,a.createElementVNode)("div",rl,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.organization_structure")),1)])),_:1}),n.isLoading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,modelValue:n.editable,"onUpdate:modelValue":t[0]||(t[0]=e=>n.editable=e),"option-label":e.$t("general.edit"),"label-position":"left"},null,8,["modelValue","option-label"]))]),n.isLoading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-horizontal-margin orangehrm-clear-margins"})),n.isLoading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",il,[(0,a.createVNode)(i,{tag:"p",class:(0,a.normalizeClass)({"--parent":n.data&&0!=n.data.children})},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.data.name),1)])),_:1},8,["class"]),(0,a.withDirectives)((0,a.createVNode)(c,{class:"org-structure-add",label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:t[1]||(t[1]=e=>r.onAddOrglevel(n.data))},null,8,["label"]),[[a.vShow,n.editable]])])),(0,a.createElementVNode)("div",dl,[n.isLoading?((0,a.openBlock)(),(0,a.createElementBlock)("div",sl,[(0,a.createVNode)(m)])):((0,a.openBlock)(),(0,a.createBlock)(g,{key:1,data:n.data,open:!0,"show-root":!1,class:"org-structure"},{content:(0,a.withCtx)((({nodeData:t})=>[(0,a.createVNode)(h,{type:"pastel-white",class:(0,a.normalizeClass)({"org-structure-card":!0,"--edit":n.editable})},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",cl,(0,a.toDisplayString)(t.unitId?`${t.unitId}: ${t.name}`:`${t.name}`),1),n.editable?((0,a.openBlock)(),(0,a.createElementBlock)("div",ml,[l.isMobile?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0},{content:(0,a.withCtx)((()=>[(0,a.createElementVNode)("li",{class:"org-action-description",onClick:e=>r.onDelete(t)},[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.delete")),1)])),_:1})],8,ul),(0,a.createElementVNode)("li",{class:"org-action-description",onClick:e=>r.onEditOrglevel(t)},[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit")),1)])),_:1})],8,pl),(0,a.createElementVNode)("li",{class:"org-action-description",onClick:e=>r.onAddOrglevel(t)},[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add")),1)])),_:1})],8,hl)])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{name:"three-dots","with-container":!0})])),_:2},1024)):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:1},[(0,a.createVNode)(u,{class:"org-action-icon",name:"trash-fill",role:"none",onClick:e=>r.onDelete(t)},null,8,["onClick"]),(0,a.createVNode)(u,{class:"org-action-icon",name:"pencil-fill",role:"none",onClick:e=>r.onEditOrglevel(t)},null,8,["onClick"]),(0,a.createVNode)(u,{class:"org-action-icon",name:"plus",role:"none",onClick:e=>r.onAddOrglevel(t)},null,8,["onClick"])],64))])):(0,a.createCommentVNode)("",!0)])),_:2},1032,["class"])])),_:1},8,["data"]))])]),(0,a.createVNode)(v,{ref:"deleteDialog"},null,512),n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(f,{key:0,data:n.saveModalState,onClose:r.onSaveModalClose},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(y,{key:1,data:n.editModalState,onClose:r.onEditModalClose},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0)])}const vl={class:"orangehrm-modal-header"};function fl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",vl,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_organization_unit")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.unitId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.orgUnit.unitId=e),label:e.$t("admin.unit_id"),rules:n.rules.unitId},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.name,"onUpdate:modelValue":t[1]||(t[1]=e=>n.orgUnit.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.orgUnit.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"level-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.this_unit_will_be_added_under"))+" ",1),(0,a.createElementVNode)("b",null,(0,a.toDisplayString)(o.data?.unitId?`${o.data.unitId}: ${o.data?.name}`:`${o.data?.name}`),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const yl={unitId:"",name:"",description:""};var Cl={name:"SaveOrgUnit",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>({})}},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/subunits");return{http:e}},data(){return{isLoading:!1,orgUnit:{...yl},rules:{unitId:[Wt(100)],name:[Ht,Wt(100)],description:[Wt(400)]}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;t&&this.rules.name.push((e=>{const o=t.findIndex((t=>String(t.name).toLowerCase()==String(e).toLowerCase()));return!(o>-1)||this.$t("admin.organization_unit_name_should_be_unique")}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({...this.orgUnit,parentId:this.data?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.orgUnit={...yl},this.$emit("close",!0)}}};const Vl=(0,r.c)(Cl,[["render",fl],["__scopeId","data-v-7a56fe24"]]);var bl=Vl;const xl={class:"orangehrm-modal-header"};function wl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",xl,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_organization_unit")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.unitId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.orgUnit.unitId=e),label:e.$t("admin.unit_id"),rules:n.rules.unitId},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.name,"onUpdate:modelValue":t[1]||(t[1]=e=>n.orgUnit.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.orgUnit.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.orgUnit.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const Nl={unitId:"",name:"",description:""};var _l={name:"EditOrgUnit",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>({})}},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/subunits");return{http:e}},data(){return{isLoading:!1,orgUnit:{...Nl},rules:{unitId:[Wt(100)],name:[Ht,Wt(100)],description:[Wt(400)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;return this.orgUnit.name=t.name,this.orgUnit.description=t.description,this.orgUnit.unitId=t.unitId,this.http.getAll()})).then((e=>{const{data:t}=e.data;t&&this.rules.name.push((e=>{const o=t.findIndex((t=>String(t.name).toLowerCase()==String(e).toLowerCase()));if(o>-1){const{id:e}=t[o];return e==this.data.id||this.$t("admin.organization_unit_name_should_be_unique")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.orgUnit}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const kl=(0,r.c)(_l,[["render",wl]]);var Sl=kl,$l={components:{"oxd-sheet":q.OxdSheet,"save-org-unit":bl,"edit-org-unit":Sl,"oxd-tree-view":q.OxdTreeView,"oxd-dropdown":q.OxdDropdownMenu,"oxd-loading-spinner":q.OxdSpinner,"oxd-switch-input":q.OxdSwitchInput,"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/subunits"),t=(0,q.useResponsive)(),o=(0,a.computed)((()=>!(t.screenType===q.DEVICE_TYPES.DEVICE_LG||t.screenType===q.DEVICE_TYPES.DEVICE_XL)));return{http:e,isMobile:o}},data(){return{isLoading:!1,editable:!1,showSaveModal:!1,saveModalState:null,showEditModal:!1,editModalState:null,data:{}}},created(){this.fetchOrgStructure()},methods:{onDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&(this.isLoading=!0,this.http.delete(e.id).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.fetchOrgStructure()})))}))},onAddOrglevel(e){this.editable&&(this.saveModalState=e,this.showSaveModal=!0)},onEditOrglevel(e){this.editable&&(this.editModalState=e,this.showEditModal=!0)},onSaveModalClose(){this.saveModalState=null,this.showSaveModal=!1,this.fetchOrgStructure()},onEditModalClose(){this.editModalState=null,this.showEditModal=!1,this.fetchOrgStructure()},fetchOrgStructure(){this.isLoading=!0,this.http.getAll({mode:"tree"}).then((e=>{const{data:t}=e.data;this.data=t[0]})).finally((()=>{this.isLoading=!1}))}}};const Dl=(0,r.c)($l,[["render",gl],["__scopeId","data-v-1cc4d566"]]);var El=Dl;const Tl={class:"orangehrm-background-container"},Il={class:"orangehrm-card-container"};function Bl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Tl,[(0,a.createElementVNode)("div",Il,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_employment_status")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.employmentStatus.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employmentStatus.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Ll={props:{employmentStatusId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/employment-statuses"),{createUniqueValidator:o}=qo(t),a=o("EmploymentStatus","name",{entityId:e.employmentStatusId});return{http:t,employmentStatusValidation:a}},data(){return{isLoading:!1,employmentStatus:{id:"",name:""},rules:{name:[Ht,this.employmentStatusValidation,Wt(50)]}}},created(){this.isLoading=!0,this.http.get(this.employmentStatusId).then((e=>{const{data:t}=e.data;this.employmentStatus.id=t.id,this.employmentStatus.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.employmentStatusId,{name:this.employmentStatus.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/employmentStatus")}}};const Ul=(0,r.c)(Ll,[["render",Bl]]);var Al=Ul;const Pl={class:"orangehrm-background-container"},ql={class:"orangehrm-paper-container"},Fl={class:"orangehrm-header-container"},Ml={class:"orangehrm-container"},zl={class:"orangehrm-bottom-container"};function jl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Pl,[(0,a.createElementVNode)("div",ql,[(0,a.createElementVNode)("div",Fl,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.employment_status")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Ml,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",zl,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var Rl={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/employment-statuses"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.employment_status"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveEmploymentStatus")},onClickEdit(e){U("/admin/saveEmploymentStatus/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const Ol=(0,r.c)(Rl,[["render",jl]]);var Gl=Ol;const Ql={class:"orangehrm-background-container"},Hl={class:"orangehrm-card-container"};function Wl(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ql,[(0,a.createElementVNode)("div",Hl,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_employment_status")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.employmentStatus.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employmentStatus.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Yl={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/employment-statuses"),{createUniqueValidator:t}=qo(e),o=t("EmploymentStatus","name");return{http:e,employmentStatusValidation:o}},data(){return{isLoading:!1,employmentStatus:{id:"",name:""},rules:{name:[Ht,this.employmentStatusValidation,Wt(50)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.employmentStatus.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/employmentStatus")}}};const Jl=(0,r.c)(Yl,[["render",Wl]]);var Xl=Jl;const Kl={class:"orangehrm-background-container"},Zl={class:"orangehrm-paper-container"},en={class:"orangehrm-header-container"},tn={class:"orangehrm-container"},on={class:"orangehrm-bottom-container"};function an(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Kl,[(0,a.createElementVNode)("div",Zl,[(0,a.createElementVNode)("div",en,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.education")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",tn,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",on,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var ln={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/educations"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.level"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveEducation")},onClickEdit(e){U("/admin/saveEducation/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const nn=(0,r.c)(ln,[["render",an]]);var rn=nn;const dn={class:"orangehrm-background-container"},sn={class:"orangehrm-card-container"};function cn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",dn,[(0,a.createElementVNode)("div",sn,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_education")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.qualification.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.qualification.name=e),label:e.$t("general.level"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var mn={props:{educationId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/educations"),{createUniqueValidator:o}=qo(t),a=o("Education","name",{entityId:e.educationId});return{http:t,educationUniqueValidation:a}},data(){return{isLoading:!1,qualification:{id:"",name:""},rules:{name:[Ht,this.educationUniqueValidation,Wt(100)]}}},created(){this.isLoading=!0,this.http.get(this.educationId).then((e=>{const{data:t}=e.data;this.qualification.id=t.id,this.qualification.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.educationId,{name:this.qualification.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/viewEducation")}}};const un=(0,r.c)(mn,[["render",cn]]);var pn=un;const hn={class:"orangehrm-background-container"},gn={class:"orangehrm-card-container"};function vn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hn,[(0,a.createElementVNode)("div",gn,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_education")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.qualification.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.qualification.name=e),label:e.$t("general.level"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var fn={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/educations"),{createUniqueValidator:t}=qo(e),o=t("Education","name");return{http:e,educationUniqueValidation:o}},data(){return{isLoading:!1,qualification:{id:"",name:""},rules:{name:[Ht,this.educationUniqueValidation,Wt(100)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.qualification.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/viewEducation")}}};const yn=(0,r.c)(fn,[["render",vn]]);var Cn=yn;const Vn={class:"orangehrm-background-container"},bn={class:"orangehrm-paper-container"},xn={class:"orangehrm-header-container"},wn={class:"orangehrm-container"},Nn={class:"orangehrm-bottom-container"};function _n(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Vn,[(0,a.createElementVNode)("div",bn,[(0,a.createElementVNode)("div",xn,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.skills")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",wn,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",Nn,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var kn={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/skills"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:2}},{name:"description",title:this.$t("general.description"),style:{flex:4}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveSkills")},onClickEdit(e){U("/admin/saveSkills/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const Sn=(0,r.c)(kn,[["render",_n]]);var $n=Sn;const Dn={class:"orangehrm-background-container"},En={class:"orangehrm-card-container"};function Tn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Dn,[(0,a.createElementVNode)("div",En,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_skill")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.skill.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.skill.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const In={id:"",name:"",description:""};var Bn={props:{qualificationSkillId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/skills"),{createUniqueValidator:o}=qo(t),a=o("Skill","name",{entityId:e.qualificationSkillId});return{http:t,skillUniqueValidation:a}},data(){return{isLoading:!1,skill:{...In},rules:{name:[Ht,Wt(120),this.skillUniqueValidation],description:[Wt(400)]}}},created(){this.isLoading=!0,this.http.get(this.qualificationSkillId).then((e=>{const{data:t}=e.data;this.skill.id=t.id,this.skill.name=t.name,this.skill.description=t.description})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.qualificationSkillId,{name:this.skill.name,description:this.skill.description}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/viewSkills")}}};const Ln=(0,r.c)(Bn,[["render",Tn]]);var Un=Ln;const An={class:"orangehrm-background-container"},Pn={class:"orangehrm-card-container"};function qn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",An,[(0,a.createElementVNode)("div",Pn,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_skill")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.skill.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.skill.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Fn={id:"",name:"",description:""};var Mn={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/skills"),{createUniqueValidator:t}=qo(e),o=t("Skill","name");return{http:e,skillUniqueValidation:o}},data(){return{isLoading:!1,skill:{...Fn},rules:{name:[Ht,Wt(120),this.skillUniqueValidation],description:[Wt(400)]},errors:[]}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.skill.name,description:this.skill.description}).then((()=>this.$toast.saveSuccess())).then((()=>{this.skill.name="",this.skill.description="",this.onCancel()}))},onCancel(){U("/admin/viewSkills")}}};const zn=(0,r.c)(Mn,[["render",qn]]);var jn=zn;const Rn={class:"orangehrm-background-container"},On={class:"orangehrm-card-container"};function Gn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Rn,[(0,a.createElementVNode)("div",On,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_license")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.license.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.license.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Qn={props:{licenseId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/licenses"),{createUniqueValidator:o}=qo(t),a=o("License","name",{entityId:e.licenseId});return{http:t,licenseUniqueValidation:a}},data(){return{isLoading:!1,license:{id:"",name:""},rules:{name:[Ht,Wt(100),this.licenseUniqueValidation]}}},created(){this.isLoading=!0,this.http.get(this.licenseId).then((e=>{const{data:t}=e.data;this.license.id=t.id,this.license.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.licenseId,{name:this.license.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/viewLicenses")}}};const Hn=(0,r.c)(Qn,[["render",Gn]]);var Wn=Hn;const Yn={class:"orangehrm-background-container"},Jn={class:"orangehrm-card-container"};function Xn(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Yn,[(0,a.createElementVNode)("div",Jn,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_license")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.license.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.license.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Kn={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/licenses"),{createUniqueValidator:t}=qo(e),o=t("License","name");return{http:e,licenseUniqueValidation:o}},data(){return{isLoading:!1,license:{id:"",name:""},rules:{name:[Ht,Wt(100),this.licenseUniqueValidation]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.license.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.license.name="",this.onCancel()}))},onCancel(){U("/admin/viewLicenses")}}};const Zn=(0,r.c)(Kn,[["render",Xn]]);var er=Zn;const tr={class:"orangehrm-background-container"},or={class:"orangehrm-paper-container"},ar={class:"orangehrm-header-container"},lr={class:"orangehrm-container"},nr={class:"orangehrm-bottom-container"};function rr(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",tr,[(0,a.createElementVNode)("div",or,[(0,a.createElementVNode)("div",ar,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.licenses")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",lr,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",nr,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var ir={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/licenses"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveLicenses")},onClickEdit(e){U("/admin/saveLicenses/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const dr=(0,r.c)(ir,[["render",rr]]);var sr=dr;const cr={class:"orangehrm-background-container"},mr={class:"orangehrm-card-container"};function ur(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",cr,[(0,a.createElementVNode)("div",mr,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_language")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.language.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var pr={props:{qualificationLanguageId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/languages"),{createUniqueValidator:o}=qo(t),a=o("Language","name",{entityId:e.qualificationLanguageId});return{http:t,langugageUniqueValidation:a}},data(){return{isLoading:!1,language:{id:"",name:""},rules:{name:[Ht,Wt(120),this.langugageUniqueValidation]}}},created(){this.isLoading=!0,this.http.get(this.qualificationLanguageId).then((e=>{const{data:t}=e.data;this.language.id=t.id,this.language.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.qualificationLanguageId,{name:this.language.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/viewLanguages")}}};const hr=(0,r.c)(pr,[["render",ur]]);var gr=hr;const vr={class:"orangehrm-background-container"},fr={class:"orangehrm-card-container"};function yr(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",vr,[(0,a.createElementVNode)("div",fr,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_language")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.language.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Cr={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/languages"),{createUniqueValidator:t}=qo(e),o=t("Language","name");return{http:e,langugageUniqueValidation:o}},data(){return{isLoading:!1,language:{id:"",name:""},rules:{name:[Ht,Wt(120),this.langugageUniqueValidation]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.language.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.language.name="",this.onCancel()}))},onCancel(){U("/admin/viewLanguages")}}};const Vr=(0,r.c)(Cr,[["render",yr]]);var br=Vr;const xr={class:"orangehrm-background-container"},wr={class:"orangehrm-paper-container"},Nr={class:"orangehrm-header-container"},_r={class:"orangehrm-container"},kr={class:"orangehrm-bottom-container"};function Sr(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",xr,[(0,a.createElementVNode)("div",wr,[(0,a.createElementVNode)("div",Nr,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.languages")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",_r,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",kr,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var $r={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/languages"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveLanguages")},onClickEdit(e){U("/admin/saveLanguages/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const Dr=(0,r.c)($r,[["render",Sr]]);var Er=Dr;const Tr={class:"orangehrm-background-container"},Ir={class:"orangehrm-paper-container"},Br={class:"orangehrm-header-container"},Lr={class:"orangehrm-container"},Ur={class:"orangehrm-bottom-container"};function Ar(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Tr,[(0,a.createElementVNode)("div",Ir,[(0,a.createElementVNode)("div",Br,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.memberships")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Lr,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",Ur,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var Pr={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/memberships"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("pim.membership"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveMemberships")},onClickEdit(e){U("/admin/saveMemberships/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const qr=(0,r.c)(Pr,[["render",Ar]]);var Fr=qr;const Mr={class:"orangehrm-background-container"},zr={class:"orangehrm-card-container"};function jr(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Mr,[(0,a.createElementVNode)("div",zr,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_membership")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.membership.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Rr={props:{qualificationMembershipId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/memberships"),{createUniqueValidator:o}=qo(t),a=o("Membership","name",{entityId:e.qualificationMembershipId});return{http:t,membershipUniqueValidation:a}},data(){return{isLoading:!1,membership:{id:"",name:""},rules:{name:[Ht,Wt(50),this.membershipUniqueValidation]}}},created(){this.isLoading=!0,this.http.get(this.qualificationMembershipId).then((e=>{const{data:t}=e.data;this.membership.id=t.id,this.membership.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.qualificationMembershipId,{name:this.membership.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/membership")}}};const Or=(0,r.c)(Rr,[["render",jr]]);var Gr=Or;const Qr={class:"orangehrm-background-container"},Hr={class:"orangehrm-card-container"};function Wr(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Qr,[(0,a.createElementVNode)("div",Hr,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_membership")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.membership.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Yr={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/memberships"),{createUniqueValidator:t}=qo(e),o=t("Membership","name");return{http:e,membershipUniqueValidation:o}},data(){return{isLoading:!1,membership:{id:"",name:""},rules:{name:[Ht,Wt(50),this.membershipUniqueValidation]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.membership.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.membership.name="",this.onCancel()}))},onCancel(){U("/admin/membership")}}};const Jr=(0,r.c)(Yr,[["render",Wr]]);var Xr=Jr;const Kr={class:"orangehrm-background-container"},Zr={class:"orangehrm-card-container"},ei={class:"orangehrm-header-container"};function ti(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-switch-input"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-input-group"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Kr,[(0,a.createElementVNode)("div",Zr,[(0,a.createElementVNode)("div",ei,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.general_information")),1)])),_:1}),(0,a.createVNode)(d,{modelValue:n.editable,"onUpdate:modelValue":t[0]||(t[0]=e=>n.editable=e),"option-label":e.$t("general.edit"),"label-position":"left"},null,8,["modelValue","option-label"])]),(0,a.createVNode)(s),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.name,"onUpdate:modelValue":t[1]||(t[1]=e=>n.organization.name=e),label:e.$t("admin.organization_name"),rules:n.rules.name,disabled:!n.editable,required:""},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{label:e.$t("admin.number_of_employees")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"no-of-employees-value"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.organization.noOfEmployees),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.registrationNumber,"onUpdate:modelValue":t[2]||(t[2]=e=>n.organization.registrationNumber=e),label:e.$t("admin.registration_number"),rules:n.rules.registrationNumber,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.taxId,"onUpdate:modelValue":t[3]||(t[3]=e=>n.organization.taxId=e),label:e.$t("admin.tax_id"),rules:n.rules.taxId,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.phone,"onUpdate:modelValue":t[4]||(t[4]=e=>n.organization.phone=e),modelModifiers:{trim:!0},label:e.$t("general.phone"),rules:n.rules.phone,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.fax,"onUpdate:modelValue":t[5]||(t[5]=e=>n.organization.fax=e),label:e.$t("general.fax"),rules:n.rules.fax,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.email,"onUpdate:modelValue":t[6]||(t[6]=e=>n.organization.email=e),label:e.$t("general.email"),rules:n.rules.email,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.street1,"onUpdate:modelValue":t[7]||(t[7]=e=>n.organization.street1=e),label:e.$t("general.address_street_1"),rules:n.rules.street1,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.street2,"onUpdate:modelValue":t[8]||(t[8]=e=>n.organization.street2=e),label:e.$t("general.address_street_2"),rules:n.rules.street2,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.city,"onUpdate:modelValue":t[9]||(t[9]=e=>n.organization.city=e),label:e.$t("general.city"),rules:n.rules.city,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.province,"onUpdate:modelValue":t[10]||(t[10]=e=>n.organization.province=e),label:e.$t("general.state_province"),rules:n.rules.province,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.zipCode,"onUpdate:modelValue":t[11]||(t[11]=e=>n.organization.zipCode=e),label:e.$t("general.zip_postal_code"),rules:n.rules.zipCode,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.country,"onUpdate:modelValue":t[12]||(t[12]=e=>n.organization.country=e),label:e.$t("general.country"),type:"select",rules:n.rules.country,options:o.countryList,disabled:!n.editable},null,8,["modelValue","label","rules","options","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.organization.note,"onUpdate:modelValue":t[13]||(t[13]=e=>n.organization.note=e),label:e.$t("general.notes"),type:"textarea",rules:n.rules.note,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),n.editable?((0,a.openBlock)(),(0,a.createBlock)(v,{key:0})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var oi={components:{"oxd-switch-input":q.OxdSwitchInput},props:{numberOfEmployees:{type:Number,required:!0},countryList:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/organization");return{http:e}},data(){return{editable:!1,isLoading:!1,organization:{name:"",noOfEmployees:this.numberOfEmployees,registrationNumber:"",taxId:"",phone:"",fax:"",email:"",street1:"",street2:"",city:"",province:"",country:null,zipCode:"",note:""},rules:{name:[Ht,Wt(100)],registrationNumber:[Wt(30)],taxId:[Wt(30)],phone:[Wt(30),go],fax:[Wt(30),go],email:[Wt(30),ho],street1:[Wt(100)],street2:[Wt(100)],city:[Wt(30)],province:[Wt(30)],zipCode:[Wt(30)],note:[Wt(255)],country:[]},errors:[]}},created(){this.isLoading=!0,this.http.http.get("/api/v2/admin/organization").then((e=>{const{data:t}=e.data;this.organization.name=t.name,this.organization.registrationNumber=t.registrationNumber,this.organization.taxId=t.taxId,this.organization.phone=t.phone,this.organization.fax=t.fax,this.organization.email=t.email,this.organization.street1=t.street1,this.organization.street2=t.street2,this.organization.city=t.city,this.organization.province=t.province,""!==t.country&&null!==t.country&&(this.organization.country=this.countryList.find((e=>e.id===t.country))),this.organization.zipCode=t.zipCode,this.organization.note=t.note})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.http.put("/api/v2/admin/organization",{name:this.organization.name,registrationNumber:this.organization.registrationNumber,taxId:this.organization.taxId,phone:this.organization.phone,fax:this.organization.fax,email:this.organization.email,street1:this.organization.street1,street2:this.organization.street2,city:this.organization.city,province:this.organization.province,country:this.organization.country?.id,zipCode:this.organization.zipCode,note:this.organization.note}).then((()=>this.$toast.updateSuccess())).then((()=>{this.isLoading=!1,this.editable=!1}))}}};const ai=(0,r.c)(oi,[["render",ti],["__scopeId","data-v-e19120c2"]]);var li=ai;const ni={class:"orangehrm-background-container"},ri={class:"orangehrm-paper-container"},ii={class:"orangehrm-header-container"},di={class:"orangehrm-container"},si={class:"orangehrm-bottom-container"};function ci(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ni,[(0,a.createElementVNode)("div",ri,[(0,a.createElementVNode)("div",ii,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.nationalities")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",di,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",si,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var mi={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/nationalities"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.nationality"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveNationality")},onClickEdit(e){U("/admin/saveNationality/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const ui=(0,r.c)(mi,[["render",ci]]);var pi=ui;const hi={class:"orangehrm-background-container"},gi={class:"orangehrm-card-container"};function vi(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hi,[(0,a.createElementVNode)("div",gi,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_nationality")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.nationality.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.nationality.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var fi={props:{nationalityId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/nationalities"),{createUniqueValidator:o}=qo(t),a=o("Nationality","name",{entityId:e.nationalityId});return{http:t,nationalityUniqueValidation:a}},data(){return{isLoading:!1,nationality:{id:"",name:""},rules:{name:[Ht,Wt(100),this.nationalityUniqueValidation]}}},created(){this.isLoading=!0,this.http.get(this.nationalityId).then((e=>{const{data:t}=e.data;this.nationality.id=t.id,this.nationality.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.nationalityId,{name:this.nationality.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/nationality")}}};const yi=(0,r.c)(fi,[["render",vi]]);var Ci=yi;const Vi={class:"orangehrm-background-container"},bi={class:"orangehrm-card-container"};function xi(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Vi,[(0,a.createElementVNode)("div",bi,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_nationality")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.nationality.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.nationality.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var wi={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/nationalities"),{createUniqueValidator:t}=qo(e),o=t("Nationality","name");return{http:e,nationalityUniqueValidation:o}},data(){return{isLoading:!1,nationality:{id:"",name:""},rules:{name:[Ht,Wt(100),this.nationalityUniqueValidation]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.nationality.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/nationality")}}};const Ni=(0,r.c)(wi,[["render",xi]]);var _i=Ni;const ki={class:"orangehrm-background-container"},Si={class:"orangehrm-card-container"},$i={class:"send-method-div"},Di={class:"orangehrm-optional-field-row"},Ei={class:"orangehrm-optional-field-row"};function Ti(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-group"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ki,[(0,a.createElementVNode)("div",Si,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.email_configuration")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.sentAs,"onUpdate:modelValue":t[0]||(t[0]=e=>n.emailConfiguration.sentAs=e),label:e.$t("admin.mail_sent_as"),rules:n.rules.sentAs,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{label:e.$t("admin.sending_method")},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",$i,[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.mailType,"onUpdate:modelValue":t[1]||(t[1]=e=>n.emailConfiguration.mailType=e),type:"radio","option-label":e.$t("admin.secure_smtp"),value:"smtps"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.emailConfiguration.mailType,"onUpdate:modelValue":t[2]||(t[2]=e=>n.emailConfiguration.mailType=e),type:"radio","option-label":e.$t("admin.smtp"),value:"smtp"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.emailConfiguration.mailType,"onUpdate:modelValue":t[3]||(t[3]=e=>n.emailConfiguration.mailType=e),type:"radio","option-label":e.$t("admin.sendmail"),value:"sendmail"},null,8,["modelValue","option-label"])])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),"sendmail"===n.emailConfiguration.mailType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{label:e.$t("admin.path_to_sendmail")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"sendmail-path-value"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.emailConfiguration.pathToSendmail),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),"sendmail"!==n.emailConfiguration.mailType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpHost,"onUpdate:modelValue":t[4]||(t[4]=e=>n.emailConfiguration.smtpHost=e),label:e.$t("admin.smtp_host"),rules:n.rules.smtpHost,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpPort,"onUpdate:modelValue":t[5]||(t[5]=e=>n.emailConfiguration.smtpPort=e),label:e.$t("admin.smtp_port"),rules:n.rules.smtpPort},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),"sendmail"!==n.emailConfiguration.mailType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:2},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{label:e.$t("admin.use_smtp_authentication"),classes:{wrapper:"--status-grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpAuthType,"onUpdate:modelValue":t[6]||(t[6]=e=>n.emailConfiguration.smtpAuthType=e),type:"radio","option-label":e.$t("general.yes"),value:"login"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpAuthType,"onUpdate:modelValue":t[7]||(t[7]=e=>n.emailConfiguration.smtpAuthType=e),type:"radio","option-label":e.$t("general.no"),value:"none"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),"sendmail"!==n.emailConfiguration.mailType&&"login"===n.emailConfiguration.smtpAuthType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpUsername,"onUpdate:modelValue":t[8]||(t[8]=e=>n.emailConfiguration.smtpUsername=e),label:e.$t("admin.smtp_user"),rules:n.rules.smtpUsername,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.smtpPassword,"onUpdate:modelValue":t[9]||(t[9]=e=>n.emailConfiguration.smtpPassword=e),label:e.$t("admin.smtp_password"),rules:n.rules.smtpPassword,type:"password",placeholder:n.passwordPlaceHolder,required:""},null,8,["modelValue","label","rules","placeholder"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),"sendmail"!==n.emailConfiguration.mailType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:4,class:"orangehrm-input-field-bottom-space"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Di,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.tls")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.useTLSSecureConnection,"onUpdate:modelValue":t[10]||(t[10]=e=>n.useTLSSecureConnection=e)},null,8,["modelValue"])])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),"sendmail"!==n.emailConfiguration.mailType?((0,a.openBlock)(),(0,a.createBlock)(p,{key:5},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"tls-hint"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.optional_the_mail_server_requires_the_use_of_tls_security")),1)])),_:1})])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Ei,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.send_test_email")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.sendTestMailEditable,"onUpdate:modelValue":t[11]||(t[11]=e=>n.sendTestMailEditable=e)},null,8,["modelValue"])])])),_:1})])),_:1})])),_:1}),n.sendTestMailEditable?((0,a.openBlock)(),(0,a.createBlock)(p,{key:6},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.emailConfiguration.testEmailAddress,"onUpdate:modelValue":t[12]||(t[12]=e=>n.emailConfiguration.testEmailAddress=e),label:e.$t("admin.test_email_address"),rules:n.rules.testEmailAddress,disabled:!n.sendTestMailEditable,required:""},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onReset},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Ii={components:{"oxd-switch-input":q.OxdSwitchInput},props:{pathToSendmail:{type:String,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/email-configuration");return{http:e}},data(){return{passwordPlaceHolder:"",defaultValues:{smtpSecurityType:"tls"},useTLSSecureConnection:!0,sendTestMailEditable:!1,isLoading:!1,emailConfiguration:{mailType:"",sentAs:"",pathToSendmail:this.pathToSendmail,smtpHost:"",smtpPort:null,smtpUsername:"",smtpPassword:null,smtpAuthType:"",smtpSecurityType:"",testEmailAddress:""},initialEmailConfiguration:{...this.emailConfiguration,useTLSSecureConnection:!1},rules:{mailType:[Ht,Wt(50)],sentAs:[Ht,Wt(100),ho],smtpHost:[Ht,Wt(100)],smtpPort:[Wt(10)],smtpUsername:[Ht,Wt(100)],smtpPassword:[Wt(100)],smtpAuthType:[Wt(50)],smtpSecurityType:[Wt(50)],testEmailAddress:[Ht,Wt(250),ho]}}},created(){this.isLoading=!0,this.http.request({method:"GET",url:"/api/v2/admin/email-configuration"}).then((e=>{const{data:t}=e.data;this.emailConfiguration.mailType=t.mailType,this.emailConfiguration.sentAs=t.sentAs,this.emailConfiguration.smtpHost=t.smtpHost,this.emailConfiguration.smtpPort=t.smtpPort,this.emailConfiguration.smtpUsername=t.smtpUsername,this.passwordPlaceHolder=t.smtpUsername?"******":"",this.emailConfiguration.smtpAuthType=t.smtpAuthType??"none",this.emailConfiguration.testEmailAddress=t.testEmailAddress,this.useTLSSecureConnection="tls"===t.smtpSecurityType,this.initialEmailConfiguration={...this.emailConfiguration,useTLSSecureConnection:this.useTLSSecureConnection},t.smtpUsername||this.rules.smtpPassword.push(Ht)})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{mailType:this.emailConfiguration.mailType,sentAs:this.emailConfiguration.sentAs,smtpHost:this.emailConfiguration.smtpHost,smtpPort:parseInt(this.emailConfiguration.smtpPort),smtpUsername:"login"===this.emailConfiguration.smtpAuthType?this.emailConfiguration.smtpUsername:"",smtpPassword:""===this.emailConfiguration.smtpPassword?null:this.emailConfiguration.smtpPassword,smtpAuthType:this.emailConfiguration.smtpAuthType,smtpSecurityType:this.useTLSSecureConnection?"tls":"none",testEmailAddress:this.emailConfiguration.testEmailAddress}}).then((e=>{const t=e.data.meta?.testEmailStatus;return 1===t&&this.sendTestMailEditable?this.$toast.success({title:this.$t("general.success"),message:this.$t("admin.test_email_sent")}):0===t&&this.sendTestMailEditable&&this.$toast.warn({title:this.$t("general.failed"),message:this.$t("admin.test_email_not_sent")}),this.$toast.saveSuccess()})).then((()=>{this.isLoading=!1}))},onReset(){this.emailConfiguration={...this.initialEmailConfiguration},this.useTLSSecureConnection=this.initialEmailConfiguration.useTLSSecureConnection}}};const Bi=(0,r.c)(Ii,[["render",Ti],["__scopeId","data-v-0b55d614"]]);var Li=Bi;const Ui={class:"orangehrm-background-container"},Ai=(0,a.createElementVNode)("br",null,null,-1),Pi={class:"orangehrm-paper-container"},qi={class:"orangehrm-header-container"},Fi={class:"orangehrm-container"},Mi={class:"orangehrm-bottom-container"};function zi(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-table-filter"),v=(0,a.resolveComponent)("table-header"),f=(0,a.resolveComponent)("oxd-card-table"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ui,[(0,a.createVNode)(g,{"filter-title":e.$t("admin.locations")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.name,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.name=e),label:e.$t("general.name")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.city,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.city=e),label:e.$t("general.city")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.countryCode,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.countryCode=e),type:"select",label:e.$t("general.country"),clear:!1,options:o.countries},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),Ai,(0,a.createElementVNode)("div",Pi,[(0,a.createElementVNode)("div",qi,[(0,a.createElementVNode)("div",null,[e.$can.create("locations")?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(v,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Fi,[(0,a.createVNode)(f,{selected:n.checkedItems,"onUpdate:selected":t[3]||(t[3]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[4]||(t[4]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:e.$can.delete("locations"),disabled:!(e.$can.delete("locations")&&e.$can.update("locations")),clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","selectable","disabled","loading"])]),(0,a.createElementVNode)("div",Mi,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,current:l.currentPage,"onUpdate:current":t[5]||(t[5]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(C,{ref:"deleteDialog"},null,512)])}const ji={name:"",city:"",countryCode:{}},Ri={"location.name":"ASC","location.city":"DEFAULT","country.countryName":"DEFAULT","location.phone":"DEFAULT",noOfEmployees:"DEFAULT"},Oi=e=>e.map((e=>({id:e.id,name:e.name,city:e.city,country:e.country.countryName,phone:e.phone,noOfEmployees:e.noOfEmployees?e.noOfEmployees:0})));var Gi={components:{"delete-confirmation":At},props:{countries:{type:Array,default:()=>[]}},setup(){const{sortDefinition:e,sortField:t,sortOrder:o,onSort:l}=Pt({sortDefinition:Ri}),n=(0,a.ref)({...ji}),r=(0,a.computed)((()=>({name:n.value.name,city:n.value.city,countryCode:n.value.countryCode?.id,sortField:t.value,sortOrder:o.value}))),i=new P(window.appGlobal.baseUrl,"/api/v2/admin/locations"),{showPaginator:d,currentPage:s,total:c,pages:m,pageSize:u,response:p,isLoading:h,execQuery:g}=Dt(i,{query:r,normalizer:Oi});return l(g),{http:i,showPaginator:d,currentPage:s,isLoading:h,total:c,pages:m,pageSize:u,execQuery:g,items:p,filters:n,sortDefinition:e}},data(){const e={delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}};return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1},sortField:"location.name"},{name:"city",title:this.$t("general.city"),style:{flex:1},sortField:"location.city"},{name:"country",title:this.$t("general.country"),style:{flex:1},sortField:"country.countryName"},{name:"phone",title:this.$t("general.phone"),style:{flex:1},sortField:"location.phone"},{name:"noOfEmployees",title:this.$t("admin.number_of_employees"),style:{flex:1},sortField:"noOfEmployees"},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:e}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveLocation")},onClickEdit(e){U("/admin/saveLocation/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...ji},this.filterItems()}}};const Qi=(0,r.c)(Gi,[["render",zi]]);var Hi=Qi;const Wi={class:"orangehrm-background-container"},Yi={class:"orangehrm-card-container"};function Ji(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wi,[(0,a.createElementVNode)("div",Yi,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_location")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.location.name=e),label:e.$t("general.name"),rules:n.rules.name,required:"",disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.city,"onUpdate:modelValue":t[1]||(t[1]=e=>n.location.city=e),label:e.$t("general.city"),rules:n.rules.city,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.province,"onUpdate:modelValue":t[2]||(t[2]=e=>n.location.province=e),label:e.$t("general.state_province"),rules:n.rules.province,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.zipCode,"onUpdate:modelValue":t[3]||(t[3]=e=>n.location.zipCode=e),label:e.$t("general.zip_postal_code"),rules:n.rules.zipCode,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.countryCode,"onUpdate:modelValue":t[4]||(t[4]=e=>n.location.countryCode=e),type:"select",label:e.$t("general.country"),rules:n.rules.countryCode,clear:!1,options:o.countries,required:"",disabled:!r.hasCreatePermissions},null,8,["modelValue","label","rules","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.phone,"onUpdate:modelValue":t[5]||(t[5]=e=>n.location.phone=e),modelModifiers:{trim:!0},label:e.$t("general.phone"),rules:n.rules.phone,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.fax,"onUpdate:modelValue":t[6]||(t[6]=e=>n.location.fax=e),label:e.$t("general.fax"),rules:n.rules.fax,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.address,"onUpdate:modelValue":t[7]||(t[7]=e=>n.location.address=e),type:"textarea",label:e.$t("admin.address"),rules:n.rules.address,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.note,"onUpdate:modelValue":t[8]||(t[8]=e=>n.location.note=e),type:"textarea",label:e.$t("general.notes"),rules:n.rules.note,disabled:!r.hasCreatePermissions,placeholder:e.$t("general.type_here_message")},null,8,["modelValue","label","rules","disabled","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),r.hasCreatePermissions?((0,a.openBlock)(),(0,a.createBlock)(g,{key:0})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Xi={name:"",countryCode:null,province:"",city:"",address:"",zipCode:"",phone:"",fax:"",note:""};var Ki={props:{countries:{type:Array,default:()=>[]}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/locations"),{createUniqueValidator:t}=qo(e),o=t("Location","name");return{http:e,locationUniqueValidation:o}},data(){return{isLoading:!1,location:{...Xi},rules:{name:[Ht,Wt(100),this.locationUniqueValidation],countryCode:[Ht],province:[Wt(50)],city:[Wt(50)],address:[Wt(250)],zipCode:[Wt(30)],phone:[Wt(30),go],fax:[Wt(30),go],note:[Wt(250)]}}},computed:{hasCreatePermissions(){return this.$can.create("locations")}},methods:{onCancel(){U("/admin/viewLocations")},onSave(){this.isLoading=!0,this.http.create({...this.location,countryCode:this.location.countryCode.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const Zi=(0,r.c)(Ki,[["render",Ji]]);var ed=Zi;const td={class:"orangehrm-background-container"},od={class:"orangehrm-card-container"};function ad(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",td,[(0,a.createElementVNode)("div",od,[(0,a.createVNode)(i,{class:"orangehrm-main-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_location")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.location.name=e),disabled:!r.hasUpdatePermissions,rules:n.rules.name,label:e.$t("general.name"),required:""},null,8,["modelValue","disabled","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.city,"onUpdate:modelValue":t[1]||(t[1]=e=>n.location.city=e),disabled:!r.hasUpdatePermissions,rules:n.rules.city,label:e.$t("general.city")},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.province,"onUpdate:modelValue":t[2]||(t[2]=e=>n.location.province=e),disabled:!r.hasUpdatePermissions,rules:n.rules.province,label:e.$t("general.state_province")},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.zipCode,"onUpdate:modelValue":t[3]||(t[3]=e=>n.location.zipCode=e),disabled:!r.hasUpdatePermissions,rules:n.rules.zipCode,label:e.$t("general.zip_postal_code")},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.countryCode,"onUpdate:modelValue":t[4]||(t[4]=e=>n.location.countryCode=e),clear:!1,disabled:!r.hasUpdatePermissions,options:o.countries,rules:n.rules.countryCode,label:e.$t("general.country"),required:"",type:"select"},null,8,["modelValue","disabled","options","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.phone,"onUpdate:modelValue":t[5]||(t[5]=e=>n.location.phone=e),modelModifiers:{trim:!0},disabled:!r.hasUpdatePermissions,rules:n.rules.phone,label:e.$t("general.phone")},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.fax,"onUpdate:modelValue":t[6]||(t[6]=e=>n.location.fax=e),disabled:!r.hasUpdatePermissions,rules:n.rules.fax,label:e.$t("general.fax")},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.address,"onUpdate:modelValue":t[7]||(t[7]=e=>n.location.address=e),disabled:!r.hasUpdatePermissions,rules:n.rules.address,label:e.$t("admin.address"),type:"textarea"},null,8,["modelValue","disabled","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.location.note,"onUpdate:modelValue":t[8]||(t[8]=e=>n.location.note=e),disabled:!r.hasUpdatePermissions,rules:n.rules.note,label:e.$t("general.note"),type:"textarea"},null,8,["modelValue","disabled","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),r.hasUpdatePermissions?((0,a.openBlock)(),(0,a.createBlock)(g,{key:0})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const ld={name:"",countryCode:null,province:"",city:"",address:"",zipCode:"",phone:"",fax:"",note:""};var nd={props:{locationId:{type:String,required:!0},countries:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/locations"),{createUniqueValidator:o}=qo(t),a=o("Location","name",{entityId:e.locationId});return{http:t,locationUniqueValidation:a}},data(){return{isLoading:!1,location:{...ld},rules:{name:[Ht,Wt(100),this.locationUniqueValidation],countryCode:[Ht],province:[Wt(50)],city:[Wt(50)],address:[Wt(250)],zipCode:[Wt(30)],phone:[Wt(30),go],fax:[Wt(30),go],note:[Wt(250)]}}},computed:{hasUpdatePermissions(){return this.$can.update("locations")}},created(){this.isLoading=!0,this.http.get(parseInt(this.locationId,10)).then((e=>{const{data:t}=e.data;this.location.name=t.name,this.location.countryCode=this.countries.find((e=>e.id===t.country.countryCode)),this.location.province=t.province,this.location.city=t.city,this.location.address=t.address,this.location.zipCode=t.zipCode,this.location.phone=t.phone,this.location.fax=t.fax,this.location.note=t.note})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/admin/viewLocations")},onSave(){this.isLoading=!0,this.http.update(this.locationId,{name:this.location.name,countryCode:this.location.countryCode.id,province:this.location.province,city:this.location.city,address:this.location.address,zipCode:this.location.zipCode,phone:this.location.phone,fax:this.location.fax,note:this.location.note}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const rd=(0,r.c)(nd,[["render",ad]]);var id=rd;const dd={class:"orangehrm-background-container"},sd={class:"orangehrm-paper-container"},cd={class:"orangehrm-header-container"},md={class:"orangehrm-container"},ud={class:"orangehrm-bottom-container"};function pd(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",dd,[(0,a.createElementVNode)("div",sd,[(0,a.createElementVNode)("div",cd,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.pay_grades")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",md,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",ud,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}const hd=e=>e.map((e=>{const t=e.currencies.map((e=>e.name));return{id:e.id,name:e.name,currency:t.join(",")}}));var gd={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/pay-grades"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e,{normalizer:hd});return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"40%"}},{name:"currency",title:this.$t("general.currency"),style:{"flex-basis":"40%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/payGrade")},onClickEdit(e){U("/admin/payGrade/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const vd=(0,r.c)(gd,[["render",pd]]);var fd=vd;const yd={class:"orangehrm-background-container"},Cd={class:"orangehrm-card-container"};function Vd(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yd,[(0,a.createElementVNode)("div",Cd,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_pay_grade")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.grade.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.grade.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var bd={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/pay-grades"),{createUniqueValidator:t}=qo(e),o=t("PayGrade","name");return{http:e,payGradeUniqueValidation:o}},data(){return{isLoading:!1,grade:{id:"",name:""},rules:{name:[Ht,this.payGradeUniqueValidation,Wt(50)]},errors:[]}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.grade.name}).then((e=>{const{data:t}=e.data;this.$toast.saveSuccess(),U("/admin/payGrade/{id}",{id:t.id})}))},onCancel(){U("/admin/viewPayGrades")}}};const xd=(0,r.c)(bd,[["render",Vd]]);var wd=xd;const Nd={class:"orangehrm-background-container"},_d={class:"orangehrm-card-container"};function kd(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("pay-grade-currency");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",Nd,[(0,a.createElementVNode)("div",_d,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_pay_grade")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.grade.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.grade.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])]),(0,a.createVNode)(y,{"pay-grade-id":o.payGradeId},null,8,["pay-grade-id"])],64)}const Sd={class:"orangehrm-background-container"},$d={class:"orangehrm-paper-container"},Dd={class:"orangehrm-header-container"},Ed={class:"orangehrm-container"},Td={class:"orangehrm-bottom-container"};function Id(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-pay-currency"),d=(0,a.resolveComponent)("edit-pay-currency"),s=(0,a.resolveComponent)("inline-action-button"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,"pay-grade-id":o.payGradeId,onClose:r.onSaveModalClose},null,8,["pay-grade-id","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,data:n.editModalState,"pay-grade-id":o.payGradeId,onClose:r.onEditModalClose},null,8,["data","pay-grade-id","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Sd,[(0,a.createElementVNode)("div",$d,[(0,a.createElementVNode)("div",Dd,[(0,a.createVNode)(s,{"display-type":"secondary",onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.currencies")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Ed,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:r.selectable,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","loading"])]),(0,a.createElementVNode)("div",Td,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])])],64)}const Bd={class:"orangehrm-action-header"};function Ld(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Bd,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)])),_:3}),(0,a.createVNode)(d,(0,a.mergeProps)({label:e.$t("general.add"),"icon-name":"plus","display-type":"text"},e.$attrs),null,16,["label"])])}var Ud={name:"InlineActionButton",inheritAttrs:!1};const Ad=(0,r.c)(Ud,[["render",Ld],["__scopeId","data-v-7dd3770e"]]);var Pd=Ad;const qd={class:"orangehrm-card-container"};function Fd(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",qd,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_currency")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.currencyId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.payCurrency.currencyId=e),type:"select",label:e.$t("general.currency"),options:n.currencies,rules:n.rules.currencyId,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.minSalary,"onUpdate:modelValue":t[1]||(t[1]=e=>n.payCurrency.minSalary=e),label:e.$t("admin.minimum_salary"),rules:n.rules.minSalary},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.maxSalary,"onUpdate:modelValue":t[2]||(t[2]=e=>n.payCurrency.maxSalary=e),label:e.$t("admin.maximum_salary"),rules:n.rules.maxSalary},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const Md={currencyId:null,minSalary:"",maxSalary:""};var zd={name:"SavePayCurrency",props:{payGradeId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/pay-grades/${e.payGradeId}/currencies`);return{http:t}},data(){return{isLoading:!1,payCurrency:{...Md},currencies:[],rules:{currencyId:[Ht],minSalary:[fo(1e9),Eo,bo((()=>this.payCurrency.maxSalary),this.$t("admin.should_be_lower_than_maximum_salary"))],maxSalary:[fo(1e9),Eo,Vo((()=>this.payCurrency.minSalary),this.$t("admin.should_be_higher_than_minimum_salary"))]}}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:`/api/v2/admin/pay-grades/${this.payGradeId}/currencies/allowed`,params:{limit:0}}).then((e=>{const{data:t}=e.data;this.currencies=t.map((e=>({id:e.id,label:e.id+" - "+e.name})))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({...this.payCurrency,currencyId:this.payCurrency.currencyId.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const jd=(0,r.c)(zd,[["render",Fd]]);var Rd=jd;const Od={class:"orangehrm-card-container"};function Gd(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Od,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_currency")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.payCurrency.name=e),label:e.$t("general.currency"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.minSalary,"onUpdate:modelValue":t[1]||(t[1]=e=>n.payCurrency.minSalary=e),label:e.$t("admin.minimum_salary"),rules:n.rules.minSalary},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.payCurrency.maxSalary,"onUpdate:modelValue":t[2]||(t[2]=e=>n.payCurrency.maxSalary=e),label:e.$t("admin.maximum_salary"),rules:n.rules.maxSalary},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const Qd={currencyId:null,minSalary:"",maxSalary:""};var Hd={name:"EditPayCurrency",props:{payGradeId:{type:Number,required:!0},data:{type:Object,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/pay-grades/${e.payGradeId}/currencies`);return{http:t}},data(){return{isLoading:!1,payCurrency:{...Qd},rules:{currencyId:[Ht],minSalary:[fo(1e9),Eo,bo((()=>this.payCurrency.maxSalary),this.$t("admin.should_be_lower_than_maximum_salary"))],maxSalary:[fo(1e9),Eo,Vo((()=>this.payCurrency.minSalary),this.$t("admin.should_be_higher_than_minimum_salary"))]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.payCurrency.name=t.currencyType.name,this.payCurrency.minSalary=t.minSalary?t.minSalary:"0",this.payCurrency.maxSalary=t.maxSalary?t.maxSalary:"0"})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{minSalary:this.payCurrency.minSalary,maxSalary:this.payCurrency.maxSalary}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Wd=(0,r.c)(Hd,[["render",Gd]]);var Yd=Wd;const Jd=e=>e.map((e=>{let t=e.maxSalary?Number(e.maxSalary):0,o=e.minSalary?Number(e.minSalary):0;return t=t.toLocaleString("en-US",{maximumFractionDigits:2,minimumFractionDigits:2}),o=o.toLocaleString("en-US",{maximumFractionDigits:2,minimumFractionDigits:2}),{id:e.currencyType.id,name:e.currencyType.name,maxSalary:t,minSalary:o}}));var Xd={name:"PayGradeCurrency",components:{"inline-action-button":Pd,"save-pay-currency":Rd,"edit-pay-currency":Yd,"delete-confirmation":At},props:{payGradeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/pay-grades/${e.payGradeId}/currencies`),{showPaginator:o,currentPage:a,total:l,pages:n,pageSize:r,response:i,isLoading:d,execQuery:s}=Dt(t,{normalizer:Jd});return{http:t,showPaginator:o,currentPage:a,isLoading:d,total:l,pages:n,pageSize:r,execQuery:s,items:i}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.currency"),style:{flex:2}},{name:"minSalary",title:this.$t("admin.minimum_salary"),style:{flex:1}},{name:"maxSalary",title:this.$t("admin.maximum_salary"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{selectable(){return!(this.showSaveModal||this.showEditModal)}},methods:{onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0,this.checkedItems=[]},onClickDelete(e){this.selectable&&this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onClickDeleteSelected(){if(!this.selectable)return;const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0,this.checkedItems=[]},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Kd=(0,r.c)(Xd,[["render",Id]]);var Zd=Kd,es={components:{"pay-grade-currency":Zd},props:{payGradeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/pay-grades"),{createUniqueValidator:o}=qo(t),a=o("PayGrade","name",{entityId:e.payGradeId});return{http:t,payGradeUniqueValidation:a}},data(){return{isLoading:!1,grade:{id:"",name:""},rules:{name:[Ht,this.payGradeUniqueValidation,Wt(50)]},errors:[]}},created(){this.isLoading=!0,this.http.get(this.payGradeId).then((e=>{const{data:t}=e.data;this.grade.id=t.id,this.grade.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.payGradeId,{name:this.grade.name}).then((()=>this.$toast.updateSuccess())).then((()=>{A()}))},onCancel(){U("/admin/viewPayGrades")}}};const ts=(0,r.c)(es,[["render",kd]]);var os=ts;const as={class:"orangehrm-background-container"},ls={class:"orangehrm-card-container"},ns={class:"orangehrm-module-field-row"},rs={class:"orangehrm-module-field-row"},is={class:"orangehrm-module-field-row"},ds={class:"orangehrm-module-field-row"},ss={class:"orangehrm-module-field-row"},cs={class:"orangehrm-module-field-row"},ms={class:"orangehrm-module-field-row"},us={class:"orangehrm-module-field-row"},ps={class:"orangehrm-module-field-row"},hs={class:"orangehrm-module-field-row"},gs={class:"orangehrm-module-field-row"};function vs(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-switch-input"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("submit-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",as,[(0,a.createElementVNode)("div",ls,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.module_configuration")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",ns,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.admin_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.admin,"onUpdate:modelValue":t[0]||(t[0]=e=>n.modules.admin=e),disabled:!0},null,8,["modelValue"])]),(0,a.createElementVNode)("div",rs,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.pim_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.pim,"onUpdate:modelValue":t[1]||(t[1]=e=>n.modules.pim=e),disabled:!0},null,8,["modelValue"])]),(0,a.createElementVNode)("div",is,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.leave_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.leave,"onUpdate:modelValue":t[2]||(t[2]=e=>n.modules.leave=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",ds,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.time_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.time,"onUpdate:modelValue":t[3]||(t[3]=e=>n.modules.time=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",ss,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.recruitment_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.recruitment,"onUpdate:modelValue":t[4]||(t[4]=e=>n.modules.recruitment=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",cs,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.performance_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.performance,"onUpdate:modelValue":t[5]||(t[5]=e=>n.modules.performance=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",ms,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.directory_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.directory,"onUpdate:modelValue":t[6]||(t[6]=e=>n.modules.directory=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",us,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.maintenance_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.maintenance,"onUpdate:modelValue":t[7]||(t[7]=e=>n.modules.maintenance=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",ps,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.mobile")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.mobile,"onUpdate:modelValue":t[8]||(t[8]=e=>n.modules.mobile=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",hs,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.claim_module")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.claim,"onUpdate:modelValue":t[9]||(t[9]=e=>n.modules.claim=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",gs,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.buzz")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.modules.buzz,"onUpdate:modelValue":t[10]||(t[10]=e=>n.modules.buzz=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const fs={admin:!1,pim:!1,leave:!1,time:!1,recruitment:!1,performance:!1,maintenance:!1,mobile:!1,directory:!1,claim:!1,buzz:!1};var ys={components:{"oxd-switch-input":q.OxdSwitchInput},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/modules");return{http:e}},data(){return{modules:{...fs},isLoading:!1}},created(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.modules.admin=t.admin,this.modules.pim=t.pim,this.modules.leave=t.leave,this.modules.time=t.time,this.modules.recruitment=t.recruitment,this.modules.performance=t.performance,this.modules.maintenance=t.maintenance,this.modules.mobile=t.mobile,this.modules.directory=t.directory,this.modules.claim=t.claim,this.modules.buzz=t.buzz})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e={admin:!0,pim:!0,leave:this.modules.leave,time:this.modules.time,recruitment:this.modules.recruitment,performance:this.modules.performance,maintenance:this.modules.maintenance,mobile:this.modules.mobile,directory:this.modules.directory,claim:this.modules.claim,buzz:this.modules.buzz};this.http.request({method:"PUT",data:e}).then((e=>{const{data:t}=e.data;return this.modules=t,this.$toast.saveSuccess()})).finally((()=>{this.isLoading=!1,A()}))}}};const Cs=(0,r.c)(ys,[["render",vs],["__scopeId","data-v-76bce9b6"]]);var Vs=Cs;const bs={class:"orangehrm-background-container"},xs={class:"orangehrm-paper-container"},ws={class:"orangehrm-header-container"},Ns={class:"orangehrm-container"},_s={class:"orangehrm-bottom-container"};function ks(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",bs,[(0,a.createElementVNode)("div",xs,[(0,a.createElementVNode)("div",ws,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.work_shifts")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Ns,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",_s,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var Ss={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/work-shifts"),{timeFormat:t,jsTimeFormat:o}=R(),a=e=>e.map((e=>({id:e.id,name:e.name,startTime:ye(fe(e.startTime,t),o),endTime:ye(fe(e.endTime,t),o),hoursPerDay:parseFloat(e.hoursPerDay).toFixed(2)}))),{showPaginator:l,currentPage:n,total:r,pages:i,pageSize:d,response:s,isLoading:c,execQuery:m}=Dt(e,{normalizer:a});return{http:e,showPaginator:l,currentPage:n,isLoading:c,total:r,pages:i,pageSize:d,execQuery:m,items:s}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1}},{name:"startTime",title:this.$t("general.from"),style:{flex:1}},{name:"endTime",title:this.$t("general.to"),style:{flex:1}},{name:"hoursPerDay",title:this.$t("admin.hours_per_day"),style:{flex:1}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveWorkShifts")},onClickEdit(e){U("/admin/saveWorkShifts/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const $s=(0,r.c)(Ss,[["render",ks]]);var Ds=$s;const Es={class:"orangehrm-background-container"},Ts={class:"orangehrm-card-container"};function Is(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("time-input"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("work-shift-employee-autocomplete"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Es,[(0,a.createElementVNode)("div",Ts,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_work_shift")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workShift.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.workShift.name=e),label:e.$t("admin.shift_name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.working_hours"))+" *",1)])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workShift.startTime,"onUpdate:modelValue":t[1]||(t[1]=e=>n.workShift.startTime=e),rules:n.rules.fromTime,label:e.$t("general.from")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workShift.endTime,"onUpdate:modelValue":t[2]||(t[2]=e=>n.workShift.endTime=e),rules:n.rules.endTime,label:e.$t("general.to")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{label:e.$t("admin.duration_per_day")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-workshift-duration",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.selectedTimeDuration),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.workShift.empNumbers,"onUpdate:modelValue":t[3]||(t[3]=e=>n.workShift.empNumbers=e),rules:n.rules.empNumbers},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function Bs(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete");return(0,a.openBlock)(),(0,a.createBlock)(i,{label:e.$t("admin.assigned_employees"),multiple:!0,clear:!1,"create-options":r.loadEmployees},null,8,["label","create-options"])}var Ls={name:"WorkShiftEmployeeAutocomplete",components:{"employee-autocomplete":$a},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/work-shifts/employees");return{http:e}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()?this.http.getAll({nameOrId:e.trim()}).then((({data:e})=>{t(e.data.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const Us=(0,r.c)(Ls,[["render",Bs]]);var As=Us;const Ps={id:"",name:"",hoursPerDay:"",startTime:"",endTime:"",empNumbers:[]};var qs={components:{"work-shift-employee-autocomplete":As},props:{workShiftConfig:{type:Object,required:!0,default:()=>({})}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/work-shifts"),{createUniqueValidator:t}=qo(e),o=t("WorkShift","name");return{http:e,workShiftUniqueValidation:o}},data(){return{isLoading:!1,workShift:{...Ps},rules:{name:[Ht,this.workShiftUniqueValidation,Wt(50)],fromTime:[Ht,Xt],endTime:[Ht,Xt,mo((()=>this.workShift.startTime),this.$t("general.to_time_should_be_after_from_time"))],empNumbers:[So]}}},computed:{selectedTimeDuration(){return parseFloat(be(this.workShift.startTime,this.workShift.endTime)/3600).toFixed(2)}},beforeMount(){this.workShift.endTime=this.workShiftConfig.endTime,this.workShift.startTime=this.workShiftConfig.startTime},methods:{onSave(){this.isLoading=!0;const e={name:this.workShift.name,hoursPerDay:this.selectedTimeDuration,startTime:this.workShift.startTime,endTime:this.workShift.endTime,empNumbers:this.workShift.empNumbers.map((e=>e.id))};this.http.create(e).then((()=>this.$toast.saveSuccess())).then((()=>{this.workShift={...Ps},this.onCancel()}))},onCancel(){U("/admin/workShift")}}};const Fs=(0,r.c)(qs,[["render",Is],["__scopeId","data-v-d991ae2e"]]);var Ms=Fs;const zs={class:"orangehrm-background-container"},js={class:"orangehrm-card-container"};function Rs(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("time-input"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("work-shift-employee-autocomplete"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",zs,[(0,a.createElementVNode)("div",js,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_work_shift")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workShift.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.workShift.name=e),label:e.$t("admin.shift_name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("Working Hours*")])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workShift.startTime,"onUpdate:modelValue":t[1]||(t[1]=e=>n.workShift.startTime=e),rules:n.rules.fromTime,label:e.$t("general.from")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workShift.endTime,"onUpdate:modelValue":t[2]||(t[2]=e=>n.workShift.endTime=e),rules:n.rules.endTime,label:e.$t("general.to")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{label:e.$t("admin.duration_per_day")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-workshift-duration",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.selectedTimeDuration),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.workShift.empNumbers,"onUpdate:modelValue":t[3]||(t[3]=e=>n.workShift.empNumbers=e),rules:n.rules.empNumbers},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Os={id:"",name:"",hoursPerDay:"",startTime:null,endTime:null,empNumbers:[]};var Gs={components:{"work-shift-employee-autocomplete":As},props:{workShiftId:{type:Number,required:!0,default:null}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/work-shifts"),{createUniqueValidator:o}=qo(t),a=o("WorkShift","name",{entityId:e.workShiftId});return{http:t,workShiftUniqueValidation:a}},data(){return{isLoading:!1,workShift:{...Os},rules:{name:[Ht,this.workShiftUniqueValidation,Wt(50)],fromTime:[Ht,Xt],endTime:[Ht,Xt,mo((()=>this.workShift.startTime),"To time should be after from time")],empNumbers:[So]}}},computed:{selectedTimeDuration(){return parseFloat(be(this.workShift.startTime,this.workShift.endTime)/3600).toFixed(2)}},beforeMount(){this.isLoading=!0,this.http.get(this.workShiftId).then((e=>{const{data:t}=e.data;this.workShift.id=t.id,this.workShift.name=t.name,this.workShift.hoursPerDay=t.hoursPerDay,this.workShift.startTime=t.startTime,this.workShift.endTime=t.endTime,this.workShift.empNumbers=t.employees.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId})))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e={name:this.workShift.name,hoursPerDay:this.selectedTimeDuration,startTime:this.workShift.startTime,endTime:this.workShift.endTime,empNumbers:this.workShift.empNumbers.map((e=>e.id))};this.http.update(this.workShiftId,e).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/admin/workShift")}}};const Qs=(0,r.c)(Gs,[["render",Rs],["__scopeId","data-v-249d2638"]]);var Hs=Qs;const Ws={class:"orangehrm-background-container"},Ys={class:"orangehrm-paper-container"},Js={class:"orangehrm-header-container"},Xs={class:"orangehrm-container"},Ks=(0,a.createElementVNode)("div",{class:"orangehrm-bottom-container"},null,-1);function Zs(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ws,[(0,a.createElementVNode)("div",Ys,[(0,a.createElementVNode)("div",Js,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.email_subscriptions")),1)])),_:1})]),(0,a.createVNode)(d,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",Xs,[(0,a.createVNode)(s,{loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!1,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["loading","headers","items"])]),Ks])])}var ec={setup(){const{$t:e}=Be(),t=t=>t.map((t=>{const o=Array.isArray(t.subscribers)?t.subscribers.slice(0,10):[];let a=t.name;switch(a){case"Leave Applications":a=e("admin.leave_applications");break;case"Leave Approvals":a=e("admin.leave_approvals");break;case"Leave Assignments":a=e("admin.leave_assignments");break;case"Leave Cancellations":a=e("admin.leave_cancellation");break;case"Leave Rejections":a=e("admin.leave_rejections");break}return{id:t.id,type:a,subscribers:o.map((e=>`${e.name} <${e.email}>`)).join(", "),enabled:t.isEnabled,_loading:!1}})),o=new P(window.appGlobal.baseUrl,"/api/v2/admin/email-subscriptions"),{total:a,response:l,isLoading:n}=Dt(o,{normalizer:t});return{http:o,isLoading:n,total:a,items:l}},data(){return{headers:[{name:"type",slot:"title",title:this.$t("admin.notification_type"),style:{flex:"20%"}},{name:"subscribers",title:this.$t("admin.subscribers"),style:{flex:"65%"}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:"15%"},cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer}]}},methods:{cellRenderer(...e){const[t,,,o]=e,a={component:"oxd-icon-button",props:{name:"person-plus-fill",onClick:()=>{U("/admin/saveSubscriber/{id}",{id:o.id})}}},l={component:q.OxdSwitchInput,props:{modelValue:o.enabled,"onUpdate:modelValue":e=>{this.items.data[t]._loading=!0,this.http.update(o.id,{enabled:e}).then((e=>{const{data:o}=e.data;this.items.data[t].enabled=o.isEnabled,this.$toast.updateSuccess()})).finally((()=>{this.items.data[t]._loading=!1}))},style:{"margin-left":"1rem","text-align":"left"}}},n={component:q.OxdSpinner,props:{withContainer:!1}};return{props:{header:{cellConfig:{...o._loading?{loader:n}:{addSubscriber:a,switchSubscription:l}}}}}}}};const tc=(0,r.c)(ec,[["render",Zs]]);var oc=tc;const ac={class:"orangehrm-background-container"},lc={class:"orangehrm-paper-container"},nc={class:"orangehrm-header-container"},rc={class:"orangehrm-container"},ic={class:"orangehrm-bottom-container"};function dc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation"),p=(0,a.resolveComponent)("save-subscriber"),h=(0,a.resolveComponent)("edit-subscriber");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ac,[(0,a.createElementVNode)("div",lc,[(0,a.createElementVNode)("div",nc,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.subscribers"))+": "+(0,a.toDisplayString)(r.title),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",rc,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",ic,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512),n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,data:{subscriptionId:o.subscriptionId},onClose:r.onSaveModalClose},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(h,{key:1,data:n.editModalState,onClose:r.onEditModalClose},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0)])}const sc={class:"orangehrm-modal-header"};function cc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",sc,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_subscriber")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.subscriber.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.subscriber.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.subscriber.email,"onUpdate:modelValue":t[1]||(t[1]=e=>n.subscriber.email=e),label:e.$t("general.email"),rules:n.rules.email,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const mc={name:"",email:""};var uc={name:"SaveSubscriber",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>({})}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/email-subscriptions/${e.data.subscriptionId}/subscribers`),{createUniqueValidator:o}=qo(t),a=o("EmailSubscriber","email",{matchByField:"emailNotification",matchByValue:e.data.subscriptionId});return{http:t,subscriberUniqueValidation:a}},data(){return{isLoading:!1,subscriber:{...mc},rules:{name:[Ht,Wt(100)],email:[Ht,ho,this.subscriberUniqueValidation,Wt(100)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.subscriber}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.subscriber={...mc},this.$emit("close",!0)}}};const pc=(0,r.c)(uc,[["render",cc],["__scopeId","data-v-611cea02"]]);var hc=pc;const gc={class:"orangehrm-modal-header"};function vc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",gc,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_subscriber")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.subscriber.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.subscriber.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.subscriber.email,"onUpdate:modelValue":t[1]||(t[1]=e=>n.subscriber.email=e),label:e.$t("general.email"),rules:n.rules.email,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const fc={name:"",email:""};var yc={name:"EditSubscriber",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>({})}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/email-subscriptions/${e.data.subscriptionId}/subscribers`),{createUniqueValidator:o}=qo(t),a=o("EmailSubscriber","email",{entityId:e.data.id,matchByField:"emailNotification",matchByValue:e.data.subscriptionId});return{http:t,subscriberUniqueValidation:a}},data(){return{isLoading:!1,subscriber:{...fc},rules:{name:[Ht,Wt(100)],email:[Ht,ho,this.subscriberUniqueValidation,Wt(100)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.subscriber.name=t.name,this.subscriber.email=t.email})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.subscriber}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.subscriber={...fc},this.$emit("close",!0)}}};const Cc=(0,r.c)(yc,[["render",vc],["__scopeId","data-v-1614466a"]]);var Vc=Cc,bc={components:{"save-subscriber":hc,"edit-subscriber":Vc,"delete-confirmation":At},props:{subscriptionId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/email-subscriptions/${e.subscriptionId}/subscribers`),{showPaginator:o,currentPage:a,total:l,pages:n,pageSize:r,response:i,isLoading:d,execQuery:s}=Dt(t);return{http:t,showPaginator:o,currentPage:a,isLoading:d,total:l,pages:n,pageSize:r,execQuery:s,items:i}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:"30%"}},{name:"email",title:this.$t("general.email"),style:{flex:"55%"}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:"15%"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{title(){return this.items.meta?this.items.meta?.name:""}},methods:{onClickAdd(){this.showSaveModal=!0},onClickEdit(e){this.editModalState={...e,subscriptionId:this.subscriptionId},this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.editModalState=null,this.showEditModal=!1,this.resetDataTable()},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const xc=(0,r.c)(bc,[["render",dc]]);var wc=xc;const Nc={class:"orangehrm-background-container"},_c={class:"orangehrm-card-container"};function kc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Nc,[(0,a.createElementVNode)("div",_c,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.localization")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.configuration.language,"onUpdate:modelValue":t[0]||(t[0]=e=>n.configuration.language=e),label:e.$t("general.language"),type:"select","show-empty-selector":!1,options:o.languageList},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.configuration.dateFormat,"onUpdate:modelValue":t[1]||(t[1]=e=>n.configuration.dateFormat=e),label:e.$t("admin.date_format"),type:"select","show-empty-selector":!1,options:o.dateFormatList},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Sc={props:{dateFormatList:{type:Array,required:!0},languageList:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/localization");return{http:e}},data(){return{isLoading:!1,configuration:{language:null,dateFormat:null}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.configuration.language=this.languageList.find((e=>e.id===t.language)),this.configuration.dateFormat=this.dateFormatList.find((e=>e.id===t.dateFormat))})).finally((()=>this.isLoading=!1))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",url:"/api/v2/admin/localization",data:{language:this.configuration.language?.id,dateFormat:this.configuration.dateFormat?.id}}).then((()=>this.$toast.updateSuccess())).then((()=>A()))}}};const $c=(0,r.c)(Sc,[["render",kc]]);var Dc=$c;const Ec=e=>((0,a.pushScopeId)("data-v-255b3832"),e=e(),(0,a.popScopeId)(),e),Tc={class:"orangehrm-background-container"},Ic={class:"orangehrm-card-container"},Bc=Ec((()=>(0,a.createElementVNode)("br",null,null,-1))),Lc=Ec((()=>(0,a.createElementVNode)("br",null,null,-1))),Uc={class:"orangehrm-sm-field"},Ac={class:"orangehrm-actions-group"};function Pc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("inline-color-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("file-upload-input"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Tc,[(0,a.createElementVNode)("div",Ic,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.corporate_branding")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{ref:"formRef",loading:e.isLoading,onSubmitValid:l.onFormSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.primaryColor,"onUpdate:modelValue":t[0]||(t[0]=t=>e.colors.primaryColor=t),rules:l.rules.color,label:e.$t("admin.primary_color"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-column-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.secondaryColor,"onUpdate:modelValue":t[1]||(t[1]=t=>e.colors.secondaryColor=t),rules:l.rules.color,label:e.$t("admin.secondary_color"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.primaryFontColor,"onUpdate:modelValue":t[2]||(t[2]=t=>e.colors.primaryFontColor=t),rules:l.rules.color,label:e.$t("admin.primary_font_color"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2 --offset-column-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.secondaryFontColor,"onUpdate:modelValue":t[3]||(t[3]=t=>e.colors.secondaryFontColor=t),rules:l.rules.color,label:e.$t("admin.secondary_font_color"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.primaryGradientStartColor,"onUpdate:modelValue":t[4]||(t[4]=t=>e.colors.primaryGradientStartColor=t),rules:l.rules.color,label:e.$t("admin.primary_gradient_color_one"),type:"color",required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-3 --offset-column-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.colors.primaryGradientEndColor,"onUpdate:modelValue":t[5]||(t[5]=t=>e.colors.primaryGradientEndColor=t),rules:l.rules.color,label:e.$t("admin.primary_gradient_color_two"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),Bc,(0,a.createVNode)(d),Lc,(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{newFile:e.clientLogo.newAttachment,"onUpdate:newFile":t[6]||(t[6]=t=>e.clientLogo.newAttachment=t),method:e.clientLogo.method,"onUpdate:method":t[7]||(t[7]=t=>e.clientLogo.method=t),label:e.$t("admin.client_logo"),"button-label":e.$t("general.browse"),file:e.clientLogo.oldAttachment,rules:l.rules.clientLogo,hint:e.$t("general.accept_jpg_png_gif_upto_recommended_dimensions",{fileSize:r.formattedFileSize,width:50,height:50}),"button-icon":"",url:"admin/theme/attachments/image"},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{newFile:e.clientBanner.newAttachment,"onUpdate:newFile":t[8]||(t[8]=t=>e.clientBanner.newAttachment=t),method:e.clientBanner.method,"onUpdate:method":t[9]||(t[9]=t=>e.clientBanner.method=t),label:e.$t("admin.client_banner"),"button-label":e.$t("general.browse"),file:e.clientBanner.oldAttachment,rules:l.rules.clientBanner,hint:e.$t("general.accept_jpg_png_gif_upto_recommended_dimensions",{fileSize:r.formattedFileSize,width:182,height:50}),"button-icon":"",url:"admin/theme/attachments/image"},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{newFile:e.loginBanner.newAttachment,"onUpdate:newFile":t[10]||(t[10]=t=>e.loginBanner.newAttachment=t),method:e.loginBanner.method,"onUpdate:method":t[11]||(t[11]=t=>e.loginBanner.method=t),label:e.$t("admin.login_banner"),"button-label":e.$t("general.browse"),file:e.loginBanner.oldAttachment,rules:l.rules.loginBanner,hint:e.$t("general.accept_jpg_png_gif_upto_recommended_dimensions",{fileSize:r.formattedFileSize,width:340,height:65}),"button-icon":"",url:"admin/theme/attachments/image"},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Uc,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-sm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.social_media_images")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:e.showSocialMediaImages,"onUpdate:modelValue":t[12]||(t[12]=t=>e.showSocialMediaImages=t)},null,8,["modelValue"])])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createElementVNode)("div",Ac,[(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.reset_to_default"),onClick:l.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.preview"),onClick:l.onClickPreview},null,8,["label","onClick"]),(0,a.createVNode)(v,{type:"submit","display-type":"secondary",label:e.$t("general.publish")},null,8,["label"])])])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function qc({refName:e="formRef"}={}){const t=(0,a.ref)(),o=()=>t.value?.onSubmit(new Event("submit")),l=()=>t.value?.onReset(),n=()=>t.value?.validate(),r=(0,a.computed)((()=>t.value?.isFromInvalid)),i=(0,a.computed)((()=>t.value?.errorbag));return{reset:l,submit:o,validate:n,[e]:t,errorbag:i,invalid:r}}function Fc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-label"),d=(0,a.resolveComponent)("oxd-color-input"),s=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createBlock)(s,{class:"oxd-input-field-bottom-space",message:l.message,classes:l.classes},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:o.label,class:(0,a.normalizeClass)(l.classes.label)},null,8,["label","class"]),(0,a.createVNode)(d,(0,a.mergeProps)(e.$attrs,{disabled:o.disabled,"has-error":l.hasError,"model-value":o.modelValue,"dropdown-position":"left","onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:modelValue",t))}),null,16,["disabled","has-error","model-value"])])),_:1},8,["message","classes"])}var Mc={name:"InlineColorInput",components:{"oxd-label":q.OxdLabel,"oxd-color-input":q.OxdColorInput},inheritAttrs:!1,props:{label:{type:String,default:null,required:!1},rules:{type:Array,default:()=>[],required:!1},required:{type:Boolean,default:!1,required:!1},modelValue:{type:String,default:null,required:!1},disabled:{type:Boolean,default:!1,required:!1}},emits:["update:modelValue"],setup(e,t){const o=(0,a.toRef)(e,"disabled"),l=(0,a.toRef)(e,"modelValue"),n=l.value,r=async()=>{t.emit("update:modelValue",n),await(0,a.nextTick)()},{hasError:i,message:d}=(0,q.useField)({fieldLabel:e.label??"",rules:e.rules,modelValue:l,onReset:r,disabled:o}),s=(0,a.computed)((()=>({label:{"oxd-input-field-required":e.required},message:{"oxd-input-field-error-message":i},wrapper:{"orangehrm-color-input-wrapper":!0}})));return{classes:s,message:d,hasError:i}}};const zc=(0,r.c)(Mc,[["render",Fc],["__scopeId","data-v-ebc3fe46"]]);var jc=zc;const Rc={primaryColor:null,primaryFontColor:null,secondaryColor:null,secondaryFontColor:null,primaryGradientStartColor:null,primaryGradientEndColor:null},Oc={oldAttachment:null,newAttachment:null,method:"keepCurrent"};var Gc={components:{"oxd-switch-input":q.OxdSwitchInput,"file-upload-input":Po,"inline-color-input":jc},props:{allowedImageTypes:{type:Array,required:!0},aspectRatios:{type:Object,required:!0},aspectRatioTolerance:{type:Number,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/admin/theme"),{saveSuccess:o}=Nt(),{formRef:l,invalid:n,validate:r}=qc(),i=(0,a.reactive)({isLoading:!1,colors:{...Rc},clientLogo:{...Oc},clientBanner:{...Oc},loginBanner:{...Oc},showSocialMediaImages:!0}),d={color:[Ht,wo],clientLogo:[e=>"replaceCurrent"!==i.clientLogo.method||Ht(e),uo(e.maxFileSize),No(e.aspectRatios.clientLogo,e.aspectRatioTolerance),po(e.allowedImageTypes)],clientBanner:[e=>"replaceCurrent"!==i.clientBanner.method||Ht(e),uo(e.maxFileSize),No(e.aspectRatios.clientBanner,e.aspectRatioTolerance),po(e.allowedImageTypes)],loginBanner:[e=>"replaceCurrent"!==i.loginBanner.method||Ht(e),uo(e.maxFileSize),No(e.aspectRatios.loginBanner,e.aspectRatioTolerance),po(e.allowedImageTypes)]},s=()=>{const e=e=>{if(null===e.method||"replaceCurrent"===e.method)return e.newAttachment};i.isLoading=!0,t.request({method:"PUT",url:"/api/v2/admin/theme",data:{variables:i.colors,showSocialMediaImages:i.showSocialMediaImages,currentClientLogo:i.clientLogo.method,clientLogo:e(i.clientLogo),currentClientBanner:i.clientBanner.method,clientBanner:e(i.clientBanner),currentLoginBanner:i.loginBanner.method,loginBanner:e(i.loginBanner)}}).then((()=>o())).then((()=>A()))},c=()=>{i.isLoading=!0,t.request({method:"DELETE",url:"/api/v2/admin/theme"}).then((()=>A()))},m=()=>{r().then((()=>{!0!==n.value&&(i.isLoading=!0,t.request({method:"POST",url:"/api/v2/admin/theme/preview",data:{...i.colors}}).then((e=>{const{data:t}=e.data;for(const o in t){const e=t[o];document.documentElement.style.setProperty(o,e)}})).finally((()=>i.isLoading=!1)))}))};return(0,a.onBeforeMount)((()=>{i.isLoading=!0,t.getAll().then((e=>{const{data:t}=e.data,{clientLogo:o,clientBanner:a,loginBanner:l,showSocialMediaImages:n,variables:r}=t;i.colors=r,null===o?i.clientLogo.method=null:(i.clientLogo.oldAttachment=o,i.clientLogo.oldAttachment.id="clientLogo"),null===a?i.clientBanner.method=null:(i.clientBanner.oldAttachment=a,i.clientBanner.oldAttachment.id="clientBanner"),null===l?i.loginBanner.method=null:(i.loginBanner.oldAttachment=l,i.loginBanner.oldAttachment.id="loginBanner"),i.showSocialMediaImages=n})).finally((()=>i.isLoading=!1))})),{rules:d,formRef:l,onFormSubmit:s,onClickReset:c,onClickPreview:m,...(0,a.toRefs)(i)}},computed:{formattedFileSize(){let e=Math.round(this.maxFileSize/1048576*100)/100;return 1===e?e+"MB":e+"MBs"}}};const Qc=(0,r.c)(Gc,[["render",Pc],["__scopeId","data-v-255b3832"]]);var Hc=Qc;const Wc={class:"orangehrm-background-container"},Yc={class:"orangehrm-paper-container"},Jc={class:"orangehrm-header-container"},Xc={class:"orangehrm-container"},Kc={class:"orangehrm-bottom-container"};function Zc(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("add-language-modal"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wc,[(0,a.createElementVNode)("div",Yc,[(0,a.createElementVNode)("div",Jc,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.language_packages")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAddLanguage},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Xc,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[1]||(t[1]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",Kc,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[2]||(t[2]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),n.showAddLanguageModal?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,onClose:r.onAddLanguageModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const em={class:"orangehrm-modal-header"},tm={class:"addlanguage-note"},om={class:"addlanguage-note-text"};function am(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("languages-dropdown"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(g,{"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",em,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_language_package")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(h,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language,"onUpdate:modelValue":t[0]||(t[0]=e=>n.language=e),rules:n.rules.language},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",tm,[(0,a.createElementVNode)("div",om,[(0,a.createVNode)(i,{class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.note")),1)])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.translate_text_manually")),1)])),_:1})])])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,{class:"orangehrm-form-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(u,{"display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}function lm(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.name"),options:l.options,required:""},null,8,["label","options"])}var nm={name:"LanguagesDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/admin/i18n/languages");return(0,a.onBeforeMount)((()=>{t.getAll({activeOnly:!1,limit:0}).then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.name})))}))})),{options:e}}};const rm=(0,r.c)(nm,[["render",lm]]);var im=rm,dm={name:"AddLanguageModal",components:{"oxd-dialog":q.OxdDialog,"languages-dropdown":im},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/i18n/languages");return{http:e}},data(){return{isLoading:!1,language:null,rules:{language:[Ht]}}},methods:{onSave(){this.http.update(this.language.id,null).then((e=>{if(e)return this.$toast.saveSuccess()})).then((()=>{this.isLoading=!1,this.$emit("close")}))},onCancel(){this.$emit("close")}}};const sm=(0,r.c)(dm,[["render",am],["__scopeId","data-v-337ed163"]]);var cm=sm;const mm={languageName:""},um={languageName:"ASC"};var pm={name:"LanguagePackageList",components:{"delete-confirmation":At,"add-language-modal":cm},setup(){const e=(0,a.ref)({...mm}),{sortDefinition:t,sortOrder:o,onSort:l}=Pt({sortDefinition:um}),n=(0,a.computed)((()=>({sortOrder:o.value,activeOnly:!0}))),r=new P(window.appGlobal.baseUrl,"/api/v2/admin/i18n/languages"),{showPaginator:i,currentPage:d,total:s,pages:c,pageSize:m,response:u,isLoading:p,execQuery:h}=Dt(r,{query:n});return l(h),{http:r,showPaginator:i,currentPage:d,isLoading:p,total:s,pages:c,pageSize:m,execQuery:h,items:u,filters:e,sortDefinition:t}},data(){return{showAddLanguageModal:!1,headers:[{name:"name",slot:"title",title:this.$t("general.language_packages"),sortField:"languageName",style:{flex:"70%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),cellType:"oxd-table-cell-actions",style:{flex:1},cellConfig:{import:{component:"oxd-icon-button",onClick:this.onClickImport,props:{name:"upload"}},translate:{component:"oxd-icon-button",onClick:this.onClickTranslate,props:{name:"translate"}},export:{component:"oxd-icon-button",props:{name:"download"},onClick:this.onClickExport},delete:{component:"oxd-icon-button",props:{name:"trash"},onClick:this.onClickDelete}}}],checkedItems:[]}},methods:{onClickAddLanguage(){this.showAddLanguageModal=!0},onAddLanguageModalClose(){this.showAddLanguageModal=!1,this.reloadLanguages()},onCancel(){U("/admin/languagePackage")},async reloadLanguages(){await this.execQuery()},onClickTranslate(e){U("/admin/languageCustomization/{id}",{id:e.id})},onClickExport(e){const t=L("/admin/viewLanguagePackage/languageId/{languageId}",{languageId:e.id});window.open(t,"_blank")},onClickImport(e){U("/admin/languageImport/{languageId}",{languageId:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const hm=(0,r.c)(pm,[["render",Zc],["__scopeId","data-v-11a17ec4"]]);var gm=hm;const vm=e=>((0,a.pushScopeId)("data-v-27f31f57"),e=e(),(0,a.popScopeId)(),e),fm={class:"orangehrm-background-container"},ym=vm((()=>(0,a.createElementVNode)("br",null,null,-1))),Cm={class:"orangehrm-paper-container"},Vm={class:"orangehrm-header-container"},bm={class:"orangehrm-bottom-container"};function xm(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("language-group-list-dropdown"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("oxd-alert"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("edit-translations");return(0,a.openBlock)(),(0,a.createElementBlock)("div",fm,[(0,a.createVNode)(v,{"filter-title":e.$t("admin.translate_language_package")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:l.onSubmit,onReset:l.onReset},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{value:o.languagePackage,label:e.$t("admin.language_package"),disabled:""},null,8,["value","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{value:o.sourceLanguage,label:e.$t("admin.source_language"),disabled:""},null,8,["value","label"])])),_:1})])),_:1}),(0,a.createVNode)(s,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.groupId,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.groupId=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.sourceText,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.sourceText=e),label:e.$t("admin.source_text")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.translatedText,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.translatedText=e),label:e.$t("admin.translated_text")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.onlyTranslated,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.onlyTranslated=e),type:"select",label:e.$t("admin.show"),options:l.translationOptions},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.sortOrder,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.sortOrder=e),type:"select",label:e.$t("admin.order"),options:l.sortOptions},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),ym,(0,a.createVNode)(f,{show:!l.isLoading&&l.itemsModified,type:"info",message:e.$t("admin.please_save_before_pagination")},null,8,["show","message"]),(0,a.createElementVNode)("div",Cm,[l.total>0?((0,a.openBlock)(),(0,a.createBlock)(g,{key:0,loading:l.isLoading,onSubmitValid:l.onSubmitLangString,onReset:l.onReset},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Vm,[l.showPaginator&&!l.itemsModified?((0,a.openBlock)(),(0,a.createBlock)(y,{key:l.currentPage,current:l.currentPage,"onUpdate:current":t[5]||(t[5]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(C,{loading:l.isLoading,total:l.total,selected:0},null,8,["loading","total"]),l.items?.data?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0,langstrings:l.items.data,"onUpdate:langstrings":[t[6]||(t[6]=e=>l.items.data=e),l.checkItemsModified]},null,8,["langstrings","onUpdate:langstrings"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",bm,[(0,a.createElementVNode)("div",null,[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.cancel"),type:"reset"},null,8,["label"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])])])])),_:1})])),_:1},8,["loading","onSubmitValid","onReset"])):(0,a.createCommentVNode)("",!0)])])}const wm={class:"orangehrm-translation-container"};function Nm(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("lang-string-target-input"),m=(0,a.resolveComponent)("oxd-grid");return(0,a.openBlock)(),(0,a.createElementBlock)("div",wm,[(0,a.createVNode)(i),(0,a.createVNode)(m,{cols:3,class:"orangehrm-translation-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_text")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_note")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.translated_text")),1)])),_:1})])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.langstrings,((t,o)=>((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:o},[(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-translation-grid-langstring-header",type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_text")),1)])),_:1}),(0,a.createVNode)(d,{title:t.source},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.source),1)])),_:2},1032,["title"])])),_:2},1024),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-translation-grid-langstring-header-note",type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_note")),1)])),_:1}),(0,a.createVNode)(d,{title:t.note,class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.note),1)])),_:2},1032,["title"])])),_:2},1024),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-translation-grid-langstring-header",type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.translated_text")),1)])),_:1}),(0,a.createVNode)(c,{"lang-string-id":t.langStringId,placeholder:t.target,"model-value":t.target,"onUpdate:modelValue":e=>l.onUpdateTranslation(e,o)},null,8,["lang-string-id","placeholder","model-value","onUpdate:modelValue"]),(0,a.createVNode)(i,{class:"orangehrm-translation-grid-langstring-header"})])),_:2},1024)],64)))),128))])),_:1}),(0,a.createVNode)(i)])}function _m(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"input",rules:n.rules.langStringTarget},null,8,["rules"])}var km={props:{langStringId:{type:Number,required:!0},required:{type:Boolean,default:!1}},setup(e){const{$t:t}=Be(),o=o=>new Promise((a=>{if(o){const l=new P(window.appGlobal.baseUrl,`/api/v2/admin/i18n/translation/${e.langStringId}/validate`);l.request({method:"GET",params:{translation:o}}).then((e=>{const{data:o}=e.data;return!0===o.valid?a(!0):a(t("admin."+o.code))}))}else a(!0)}));return{validateLangString:o}},data(){return{rules:{langStringTarget:this.required?[Ht,Wt(1e3),(0,q.promiseDebounce)(this.validateLangString,500)]:[Wt(1e3),(0,q.promiseDebounce)(this.validateLangString,500)]}}}};const Sm=(0,r.c)(km,[["render",_m]]);var $m=Sm,Dm={components:{LangStringTargetInput:$m},props:{langstrings:{type:Array,required:!0}},emits:["update:langstrings"],setup(e,t){const o=(o,a)=>{t.emit("update:langstrings",e.langstrings.map(((e,t)=>{let l=e.modified?e.oldTarget:e.target??"";return t===a?{...e,target:o,oldTarget:l,modified:!0}:e})))};return{onUpdateTranslation:o}}};const Em=(0,r.c)(Dm,[["render",Nm],["__scopeId","data-v-5ce8c1aa"]]);var Tm=Em;function Im(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("admin.module"),options:l.options},null,8,["label","options"])}var Bm={name:"GroupListDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/admin/i18n/groups");return(0,a.onBeforeMount)((()=>{t.getAll().then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.title})))}))})),{options:e}}};const Lm=(0,r.c)(Bm,[["render",Im]]);var Um=Lm;const Am={sourceText:null,translatedText:null,groupId:null,sortOrder:null,onlyTranslated:null};var Pm={name:"LanguageTranslationList",components:{"language-group-list-dropdown":Um,"edit-translations":Tm,"oxd-alert":q.OxdAlert},props:{languageId:{type:Number,required:!0},languagePackage:{type:String,required:!0},sourceLanguage:{type:String,required:!0}},setup(e){const{$t:t}=Be(),{saveSuccess:o}=Nt(),l=(0,a.ref)([{id:1,label:t("admin.all"),value:null},{id:2,label:t("admin.translated"),value:!0},{id:3,label:t("admin.not_translated"),value:!1}]),n=(0,a.ref)([{id:"ASC",label:t("general.ascending")},{id:"DESC",label:t("general.descending")}]),r=(0,a.ref)({...Am,sortOrder:n.value[0],onlyTranslated:l.value[0]}),i=(0,a.computed)((()=>({sourceText:r.value.sourceText,translatedText:r.value.translatedText,groupId:r.value.groupId?.id,sortOrder:r.value.sortOrder?.id,onlyTranslated:r.value.onlyTranslated?.value}))),d=new P(window.appGlobal.baseUrl,`/api/v2/admin/i18n/languages/${e.languageId}/translations`),{showPaginator:s,currentPage:c,total:m,pages:u,response:p,isLoading:h,execQuery:g}=Dt(d,{query:i}),v=(0,a.ref)(!1),f=()=>{c.value=1,v.value=!1,r.value={...Am,sortOrder:n.value[0]},g()},y=()=>{v.value=!1,g()},C=()=>{v.value=p.value.data.reduce(((e,t)=>e||null!==t.target&&t.oldTarget!==t.target&&!0===t.modified),!1)},V=()=>{h.value=!0,d.request({method:"PUT",url:`/api/v2/admin/i18n/languages/${e.languageId}/translations/bulk`,data:{data:p.value.data.filter((e=>null!==e.target&&!0===e.modified)).map((e=>({langStringId:e.langStringId,translatedValue:e.target})))}}).then((()=>o())).then((()=>{v.value=!1,g()}))};return{showPaginator:s,currentPage:c,isLoading:h,total:m,pages:u,items:p,filters:r,translationOptions:l,sortOptions:n,onReset:f,onSubmit:y,onSubmitLangString:V,itemsModified:v,checkItemsModified:C}}};const qm=(0,r.c)(Pm,[["render",xm],["__scopeId","data-v-27f31f57"]]);var Fm=qm;const Mm=e=>((0,a.pushScopeId)("data-v-08875aba"),e=e(),(0,a.popScopeId)(),e),zm={class:"orangehrm-background-container"},jm={class:"orangehrm-card-container"},Rm={class:"orangehrm-information-card-container"},Om=Mm((()=>(0,a.createElementVNode)("br",null,null,-1)));function Gm(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("language-string-import-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",zm,[(0,a.createElementVNode)("div",jm,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.import_language_package"))+": "+(0,a.toDisplayString)(o.languageName),1)])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",Rm,[(0,a.createVNode)(i,{class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.note"))+": ",1)])),_:1}),(0,a.createElementVNode)("ul",null,[(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.use_the_sample_template")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.only_edit_the_target_field")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.do_not_change_the_template")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.sample_xliff"))+": ",1),(0,a.createElementVNode)("a",{href:"#",class:"download-link",onClick:t[0]||(t[0]=(0,a.withModifiers)(((...e)=>r.onClickDownload&&r.onClickDownload(...e)),["prevent"]))},(0,a.toDisplayString)(e.$t("general.download")),1)])),_:1})])])]),Om,(0,a.createVNode)(v,{ref:"formRef",loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.attachment=e),type:"file",rules:n.rules.attachment,label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),placeholder:e.$t("general.no_file_selected"),required:""},null,8,["modelValue","rules","label","button-label","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{label:e.$t("general.upload")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])]),n.importModalState?((0,a.openBlock)(),(0,a.createBlock)(f,{key:0,data:n.importModalState,"language-id":o.languageId,onClose:r.onImportModalClose},null,8,["data","language-id","onClose"])):(0,a.createCommentVNode)("",!0)])}const Qm={class:"orangehrm-modal-header"},Hm={class:"orangehrm-text-center-align"},Wm={class:"orangehrm-modal-footer"};function Ym(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(s,{class:"orangehrm-dialog-popup","onUpdate:show":r.onClose},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Qm,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.import_details")),1)])),_:1})]),(0,a.createElementVNode)("div",Hm,[o.data.success>0?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,type:"card-body",class:(0,a.normalizeClass)({"orangehrm-success-message":o.data.success>0})},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.n_records_successfully_imported",{count:o.data.success})),1)])),_:1},8,["class"])):(0,a.createCommentVNode)("",!0),o.data.failed>0?((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,type:"card-body",class:"orangehrm-error-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.n_records_failed_to_import",{count:o.data.failed})),1)])),_:1})):(0,a.createCommentVNode)("",!0),o.data.skipped>0?((0,a.openBlock)(),(0,a.createBlock)(i,{key:2,type:"card-body",class:"orangehrm-warn-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.n_records_skipped",{count:o.data.skipped})),1)])),_:1})):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",Wm,[0===o.data.failed?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,"display-type":"secondary",label:e.$t("general.ok"),onClick:r.onClose},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),o.data.failed>0?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,"display-type":"secondary",label:e.$t("admin.fix_errors",{count:o.data.failed}),onClick:r.onClickFixErrors},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])])),_:1},8,["onUpdate:show"])}var Jm={name:"LanguageStringsImportModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0},languageId:{type:Number,required:!0}},emits:["close"],methods:{onClose(){this.$emit("close",!0)},onClickFixErrors(){U("/admin/fixLanguageStringErrors/{languageId}",{languageId:this.languageId})}}};const Xm=(0,r.c)(Jm,[["render",Ym],["__scopeId","data-v-ea9b5164"]]);var Km=Xm;const Zm={attachment:null};var eu={components:{SubmitButton:d,RequiredText:C,"language-string-import-modal":Km},props:{languageId:{type:Number,required:!0},languageName:{type:String,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/i18n/languages/${e.languageId}/import`),{formRef:o,reset:a}=qc();return{http:t,reset:a,formRef:o}},data(){return{isLoading:!1,attachment:{...Zm},rules:{attachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)]},importModalState:null}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.attachment}).then((e=>{const{meta:t}=e.data;this.importModalState=t})).finally((()=>{this.reset(),this.isLoading=!1}))},onClickDownload(){const e=`${window.appGlobal.baseUrl}/admin/viewLanguagePackage/languageId/${this.languageId}`;window.open(e,"_blank")},onImportModalClose(){this.importModalState=null}}};const tu=(0,r.c)(eu,[["render",Gm],["__scopeId","data-v-08875aba"]]);var ou=tu;const au=e=>((0,a.pushScopeId)("data-v-64d983f6"),e=e(),(0,a.popScopeId)(),e),lu={class:"orangehrm-background-container"},nu={class:"orangehrm-card-container"},ru={class:"orangehrm-header-container"},iu=au((()=>(0,a.createElementVNode)("br",null,null,-1)));function du(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-switch-input"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-icon"),g=(0,a.resolveComponent)("oxd-alert"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("ldap-test-connection-modal"),V=(0,a.resolveComponent)("ldap-sync-connection");return(0,a.openBlock)(),(0,a.createElementBlock)("div",lu,[(0,a.createElementVNode)("div",nu,[(0,a.createElementVNode)("div",ru,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.ldap_configuration")),1)])),_:1}),(0,a.createVNode)(d,{modelValue:n.configuration.enable,"onUpdate:modelValue":t[0]||(t[0]=e=>n.configuration.enable=e),"label-position":"left","option-label":e.$t("general.enable")},null,8,["modelValue","option-label"])]),(0,a.createVNode)(s),(0,a.createVNode)(y,{ref:"formRef",loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.server_settings")),1)])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.hostname,"onUpdate:modelValue":t[1]||(t[1]=e=>n.configuration.hostname=e),label:e.$t("admin.host"),rules:n.rules.hostname,required:""},null,8,["modelValue","label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.ldap_host_input_hint")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-column-half"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.port,"onUpdate:modelValue":t[2]||(t[2]=e=>n.configuration.port=e),label:e.$t("admin.port"),rules:n.rules.port,required:""},null,8,["modelValue","label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.port_input_hint")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.encryption,"onUpdate:modelValue":t[3]||(t[3]=e=>n.configuration.encryption=e),type:"select",options:n.encryptionOptions,label:e.$t("admin.encryption")},null,8,["modelValue","options","label"])])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.ldapImplementation,"onUpdate:modelValue":t[4]||(t[4]=e=>n.configuration.ldapImplementation=e),type:"select","show-empty-selector":!1,options:n.ldapImplementationOptions,label:e.$t("admin.ldap_implementation")},null,8,["modelValue","options","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-form-divider"}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.bind_settings")),1)])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-ldap-switch"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-ldap-switch-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.bind_anonymously")),1)])),_:1}),(0,a.createVNode)(d,{modelValue:n.configuration.bindAnonymously,"onUpdate:modelValue":t[5]||(t[5]=e=>n.configuration.bindAnonymously=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),n.configuration.bindAnonymously?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(p,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.bindUserDN,"onUpdate:modelValue":t[6]||(t[6]=e=>n.configuration.bindUserDN=e),label:e.$t("admin.distinguished_name"),rules:n.rules.bindUserDN,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.bindUserPassword,"onUpdate:modelValue":t[7]||(t[7]=e=>n.configuration.bindUserPassword=e),type:"password",label:e.$t("general.password"),placeholder:r.passwordPlaceHolder,rules:n.rules.bindUserPassword,required:!n.configuration.hasBindUserPassword},null,8,["modelValue","label","placeholder","rules","required"])])),_:1})])),_:1})])),_:1})),(0,a.createVNode)(s,{class:"orangehrm-form-divider"}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.user_lookup_settings")),1)])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.baseDistinguishedName,"onUpdate:modelValue":t[8]||(t[8]=e=>n.configuration.baseDistinguishedName=e),label:e.$t("admin.base_distinguished_name"),rules:n.rules.baseDistinguishedName,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.searchScope,"onUpdate:modelValue":t[9]||(t[9]=e=>n.configuration.searchScope=e),type:"select","show-empty-selector":!1,options:n.searchScopeOptions,label:e.$t("admin.search_scope")},null,8,["modelValue","options","label"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.search_scope_input_hint")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.userNameAttribute,"onUpdate:modelValue":t[10]||(t[10]=e=>n.configuration.userNameAttribute=e),label:e.$t("admin.user_name_attribute"),rules:n.rules.userNameAttribute,required:""},null,8,["modelValue","label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.user_name_input_hint")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-4"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.userSearchFilter,"onUpdate:modelValue":t[11]||(t[11]=e=>n.configuration.userSearchFilter=e),label:e.$t("admin.user_search_filter"),rules:n.rules.userSearchFilter,required:""},null,8,["modelValue","label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.user_search_filter_input_hint")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-5"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.userUniqueIdAttribute,"onUpdate:modelValue":t[12]||(t[12]=e=>n.configuration.userUniqueIdAttribute=e),label:e.$t("admin.user_unique_id_attribute"),rules:n.rules.userUniqueIdAttribute},null,8,["modelValue","label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.user_unique_attribute_input_hint")),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-form-divider"}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.data_mapping")),1)])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-ldap-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.field_in_orangehrm")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.field_in_ldap_directory")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.use_this_field_as_the_employee_user_mapping_field")),1)])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"oxd-input-field-required"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.first_name")),1)])),_:1}),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.dataMapping.firstName,"onUpdate:modelValue":t[13]||(t[13]=e=>n.configuration.dataMapping.firstName=e),rules:n.rules.firstNameAttribute,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.middle_name")),1)])),_:1}),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.dataMapping.middleName,"onUpdate:modelValue":t[14]||(t[14]=e=>n.configuration.dataMapping.middleName=e),rules:n.rules.middleNameAttribute},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"oxd-input-field-required"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.last_name")),1)])),_:1}),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.dataMapping.lastName,"onUpdate:modelValue":t[15]||(t[15]=e=>n.configuration.dataMapping.lastName=e),rules:n.rules.lastNameAttribute},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.user_status")),1)])),_:1}),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.dataMapping.userStatus,"onUpdate:modelValue":t[16]||(t[16]=e=>n.configuration.dataMapping.userStatus=e),rules:n.rules.userStatusAttribute},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:(0,a.normalizeClass)(r.workEmailLabelClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.work_email")),1)])),_:1},8,["class"]),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(c,{key:n.configuration.employeeSelectorMapping,modelValue:n.configuration.dataMapping.workEmail,"onUpdate:modelValue":t[17]||(t[17]=e=>n.configuration.dataMapping.workEmail=e),rules:n.rules.workEmailAttribute},null,8,["modelValue","rules"]))])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:n.configuration.employeeSelectorMapping,"onUpdate:modelValue":t[18]||(t[18]=e=>n.configuration.employeeSelectorMapping=e),"true-value":"workEmail"},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-ldap-grid-content"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:(0,a.normalizeClass)(r.employeeIdLabelClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.employee_id")),1)])),_:1},8,["class"]),(0,a.createVNode)(h,{class:"orangehrm-ldap-grid-icon",name:"arrow-left"})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(c,{key:n.configuration.employeeSelectorMapping,modelValue:n.configuration.dataMapping.employeeId,"onUpdate:modelValue":t[19]||(t[19]=e=>n.configuration.dataMapping.employeeId=e),rules:n.rules.employeeIdAttribute},null,8,["modelValue","rules"]))])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:n.configuration.employeeSelectorMapping,"onUpdate:modelValue":t[20]||(t[20]=e=>n.configuration.employeeSelectorMapping=e),"true-value":"employeeId"},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-form-divider"}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.additional_settings")),1)])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-ldap-switch --offset-row-1"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-ldap-switch-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.merge_ldap_users_with_existing_system_users")),1)])),_:1}),(0,a.createVNode)(d,{modelValue:n.configuration.mergeLDAPUsersWithExistingSystemUsers,"onUpdate:modelValue":t[21]||(t[21]=e=>n.configuration.mergeLDAPUsersWithExistingSystemUsers=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.configuration.syncInterval,"onUpdate:modelValue":t[22]||(t[22]=e=>n.configuration.syncInterval=e),label:e.$t("admin.sync_interval"),rules:n.rules.syncInterval,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g,{type:"warn",show:!0,message:e.$t("admin.ldap_configuration_warning_message")},null,8,["message"]),(0,a.createVNode)(s),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("admin.test_connection"),onClick:r.onClickTest},null,8,["label","onClick"]),(0,a.createVNode)(v,{type:"button",class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.save"),onClick:r.onClickSave},null,8,["label","onClick"])])),_:1})])),_:1},8,["loading"])]),n.testModalState?((0,a.openBlock)(),(0,a.createBlock)(C,{key:0,data:n.testModalState,onClose:r.onCloseTestModal},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0),iu,o.showSync?((0,a.openBlock)(),(0,a.createBlock)(V,{key:1})):(0,a.createCommentVNode)("",!0)])}const su={class:"orangehrm-paper-container"},cu={class:"orangehrm-header-container"},mu={class:"orangehrm-ldap-sync"};function uu(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-loading-spinner"),s=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",su,[(0,a.createElementVNode)("div",cu,[(0,a.createElementVNode)("div",mu,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.sync_connection")),1)])),_:1}),(0,a.withDirectives)((0,a.createVNode)(i,{type:"card-body",class:"orangehrm-ldap-sync-time"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" ("+(0,a.toDisplayString)(r.lastSync)+") ",1)])),_:1},512),[[a.vShow,r.lastSync]])]),n.isLoading?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"orangehrm-ldap-sync-loader"})):((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,"display-type":"secondary",class:"orangehrm-ldap-sync-button",label:e.$t("admin.sync_now"),onClick:r.onClickSync},null,8,["label","onClick"]))])])}var pu={name:"LdapSyncConnection",components:{"oxd-loading-spinner":q.OxdSpinner},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/ldap/user-sync"),{jsDateFormat:t}=R();return{http:e,jsDateFormat:t}},data(){return{isLoading:!1,lastSyncDate:null,lastSyncTime:null,lastSyncStatus:null}},computed:{lastSync(){if(2===this.lastSyncStatus)return null;if(this.lastSyncDate&&this.lastSyncTime){const e=ue(`${this.lastSyncDate} ${this.lastSyncTime} +00:00`,"yyyy-MM-dd HH:mm xxx");return this.$t(1===this.lastSyncStatus?"admin.last_synced_on_datetime":"admin.last_sync_failed_on_datetime",{datetime:pe(e,`hh:mm a ${this.jsDateFormat}`)})}return null}},beforeMount(){this.getLastSyncStatus()},methods:{getLastSyncStatus(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.lastSyncStatus=t.syncStatus,this.lastSyncDate=t.syncFinishedAt?.date||t.syncStartedAt?.date,this.lastSyncTime=t.syncFinishedAt?.time||t.syncStartedAt?.time})).finally((()=>{this.isLoading=!1}))},onClickSync(){this.isLoading=!0,this.http.create().then((e=>{const{data:t}=e.data;this.lastSyncStatus=t.syncStatus,this.lastSyncDate=t.syncFinishedAt?.date||t.syncStartedAt?.date,this.lastSyncTime=t.syncFinishedAt?.time||t.syncStartedAt?.time,this.$toast.success({title:this.$t("general.success"),message:this.$t("admin.synchronization_successful")})})).catch((()=>{this.getLastSyncStatus(),this.$toast.error({title:this.$t("general.error"),message:this.$t("admin.synchronization_failed")})})).finally((()=>{this.isLoading=!1}))}}};const hu=(0,r.c)(pu,[["render",uu],["__scopeId","data-v-ae2b7cba"]]);var gu=hu;const vu={class:"orangehrm-modal-header"};function fu(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(s,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",vu,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.connection_status")),1)])),_:1})]),(0,a.createVNode)(d),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.data,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:e,class:"orangehrm-ldap-test"},[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-ldap-test-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.category),1)])),_:2},1024),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.checks,((e,t)=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:t,class:"orangehrm-ldap-test-row"},[(0,a.createVNode)(i,{class:"orangehrm-ldap-test-content"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.label),1)])),_:2},1024),(0,a.createVNode)(i,{class:(0,a.normalizeClass)(r.getClass(e.value.status))},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.value.message),1)])),_:2},1032,["class"])])))),128))])))),128))])),_:1},8,["onUpdate:show"])}var yu={name:"LdapTestConnectionModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Array,default:()=>[]}},emits:["close"],methods:{getClass(e){return 1===e?"orangehrm-ldap-test-value --success":"orangehrm-ldap-test-value --error"},onCancel(){this.$emit("close")}}};const Cu=(0,r.c)(yu,[["render",fu],["__scopeId","data-v-02059404"]]);var Vu=Cu;const bu={enable:!1,hostname:"localhost",port:389,encryption:null,ldapImplementation:null,bindAnonymously:!0,bindUserDN:null,bindUserPassword:null,baseDistinguishedName:null,searchScope:null,userNameAttribute:"cn",userSearchFilter:"objectClass=person",userUniqueIdAttribute:null,mergeLDAPUsersWithExistingSystemUsers:!1,syncInterval:1,employeeSelectorMapping:"",hasBindUserPassword:!1},xu={firstName:"givenName",lastName:"sn",middleName:null,userStatus:null,workEmail:null,employeeId:null};var wu={components:{"oxd-icon":q.OxdIcon,"oxd-alert":q.OxdAlert,"oxd-switch-input":q.OxdSwitchInput,"ldap-sync-connection":gu,"ldap-test-connection-modal":Vu},props:{showSync:{type:Boolean,default:!1}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/ldap-config"),{formRef:t,invalid:o,validate:a}=qc();return{http:e,formRef:t,invalid:o,validate:a}},data(){return{isLoading:!1,configuration:{...bu,dataMapping:{...xu}},encryptionOptions:[{id:"tls",label:this.$t("admin.tls")},{id:"ssl",label:this.$t("admin.ssl")}],searchScopeOptions:[{id:"sub",label:this.$t("admin.subtree")},{id:"one",label:this.$t("admin.one_level")}],ldapImplementationOptions:[{id:"OpenLDAP",label:this.$t("admin.open_ldap_v3")},{id:"ActiveDirectory",label:this.$t("admin.ms_active_directory")}],rules:{hostname:[Ht,$o,Wt(255)],port:[Ht,Do(5,0,65535)],bindUserDN:[Ht,Wt(255)],bindUserPassword:[e=>this.configuration.hasBindUserPassword||Ht(e),Wt(255)],baseDistinguishedName:[Ht,Wt(255)],userNameAttribute:[Ht,Wt(100)],userSearchFilter:[Ht,Wt(100)],userUniqueIdAttribute:[Wt(100)],firstNameAttribute:[Ht,Wt(100)],lastNameAttribute:[Ht,Wt(100)],syncInterval:[Ht,Zt,xo(1,23)],middleNameAttribute:[Wt(100)],userStatusAttribute:[Wt(100)],workEmailAttribute:[e=>"workEmail"!==this.configuration.employeeSelectorMapping||Ht(e),Wt(100)],employeeIdAttribute:[e=>"employeeId"!==this.configuration.employeeSelectorMapping||Ht(e),Wt(100)]},testModalState:null}},computed:{passwordPlaceHolder(){return this.configuration.hasBindUserPassword?"********":null},workEmailLabelClasses(){return{"oxd-input-field-required":"workEmail"===this.configuration.employeeSelectorMapping}},employeeIdLabelClasses(){return{"oxd-input-field-required":"employeeId"===this.configuration.employeeSelectorMapping}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data,{userLookupSettings:o}=t,a=o[0];this.configuration.enable=t.enable,this.configuration.hostname=t.hostname,this.configuration.port=t.port,this.configuration.encryption=this.encryptionOptions.find((e=>e.id===t.encryption)),this.configuration.ldapImplementation=this.ldapImplementationOptions.find((e=>e.id===t.ldapImplementation))||this.ldapImplementationOptions[0],this.configuration.bindAnonymously=t.bindAnonymously,this.configuration.bindUserDN=t.bindUserDN,this.configuration.hasBindUserPassword=t.hasBindUserPassword,a&&(this.configuration.baseDistinguishedName=a?.baseDN,this.configuration.userNameAttribute=a?.userNameAttribute,this.configuration.userSearchFilter=a?.userSearchFilter,this.configuration.userUniqueIdAttribute=a?.userUniqueIdAttribute,Array.isArray(a?.employeeSelectorMapping)&&(0===a.employeeSelectorMapping.length?this.configuration.employeeSelectorMapping="":this.configuration.employeeSelectorMapping=a.employeeSelectorMapping[0]["field"])),this.configuration.searchScope=this.searchScopeOptions.find((e=>e.id===a?.searchScope))||this.searchScopeOptions[0],this.configuration.dataMapping=t.dataMapping,this.configuration.mergeLDAPUsersWithExistingSystemUsers=t.mergeLDAPUsersWithExistingSystemUsers,this.configuration.syncInterval=t.syncInterval})).finally((()=>{this.isLoading=!1}))},methods:{onClickTest(){this.validate().then((()=>{if(!0===this.invalid)return;this.isLoading=!0;const e=this.getRequestBody();delete e.enable,delete e.syncInterval,this.http.request({method:"POST",url:"/api/v2/admin/ldap-test-connection",data:e}).then((e=>{const{data:t}=e.data;this.testModalState=t})).finally((()=>this.isLoading=!1))}))},getRequestBody(){let e;return this.configuration.employeeSelectorMapping&&(e=[{field:this.configuration.employeeSelectorMapping,attributeName:this.configuration.dataMapping[this.configuration.employeeSelectorMapping]}]),{enable:this.configuration.enable,hostname:this.configuration.hostname,port:parseInt(this.configuration.port),encryption:this.configuration.encryption?.id||"none",ldapImplementation:this.configuration.ldapImplementation?.id,bindAnonymously:this.configuration.bindAnonymously,bindUserDN:this.configuration.bindUserDN,bindUserPassword:this.configuration.bindUserPassword,userLookupSettings:[{baseDN:this.configuration.baseDistinguishedName,searchScope:this.configuration.searchScope?.id,userNameAttribute:this.configuration.userNameAttribute,userSearchFilter:this.configuration.userSearchFilter,userUniqueIdAttribute:this.configuration.userUniqueIdAttribute,employeeSelectorMapping:e||[]}],dataMapping:this.configuration.dataMapping,mergeLDAPUsersWithExistingSystemUsers:this.configuration.mergeLDAPUsersWithExistingSystemUsers,syncInterval:parseInt(this.configuration.syncInterval)}},onClickSave(){this.validate().then((()=>{!0!==this.invalid&&(this.isLoading=!0,this.http.request({method:"PUT",data:this.getRequestBody()}).then((()=>this.$toast.updateSuccess())).finally((()=>A())))}))},onCloseTestModal(){this.testModalState=null}}};const Nu=(0,r.c)(wu,[["render",du],["__scopeId","data-v-64d983f6"]]);var _u=Nu;const ku={class:"orangehrm-background-container"},Su={class:"orangehrm-paper-container"},$u={class:"orangehrm-header-container"},Du={class:"orangehrm-container"},Eu={class:"orangehrm-bottom-container"};function Tu(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ku,[(0,a.createElementVNode)("div",Su,[(0,a.createElementVNode)("div",$u,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.provider_list")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Du,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",Eu,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var Iu={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/auth/openid-providers"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"providerName",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/addAuthProvider")},onClickEdit(e){U("/admin/editAuthProvider/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const Bu=(0,r.c)(Iu,[["render",Tu]]);var Lu=Bu;const Uu={class:"orangehrm-background-container"},Au={class:"orangehrm-card-container"};function Pu(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Uu,[(0,a.createElementVNode)("div",Au,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.add_provider")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.authProvider.name=e),rules:n.rules.name,label:e.$t("general.name"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.url,"onUpdate:modelValue":t[1]||(t[1]=e=>n.authProvider.url=e),rules:n.rules.url,label:e.$t("admin.url"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.clientId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.authProvider.clientId=e),rules:n.rules.clientId,label:e.$t("admin.client_id"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.clientSecret,"onUpdate:modelValue":t[3]||(t[3]=e=>n.authProvider.clientSecret=e),rules:n.rules.clientSecret,label:e.$t("admin.client_secret"),type:"password",required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const qu={name:"",url:"",clientId:"",clientSecret:""};var Fu={name:"AddProvider",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/auth/openid-providers"),{createUniqueValidator:t}=qo(e),o=t("OpenIdProvider","providerName",{matchByField:"status",matchByValue:1});return{http:e,providerNameUniqueValidation:o}},data(){return{isLoading:!1,authProvider:{...qu},rules:{name:[Ht,this.providerNameUniqueValidation,Wt(40)],clientId:[Ht,Wt(255)],clientSecret:[Ht,Wt(255)],url:[Ht,Wt(2e3)]}}},methods:{onCancel(){U("/admin/openIdProvider")},onSave(){this.isLoading=!0,this.http.create({...this.authProvider,name:this.authProvider.name.trim()}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const Mu=(0,r.c)(Fu,[["render",Pu]]);var zu=Mu;const ju={class:"orangehrm-background-container"},Ru={class:"orangehrm-card-container"};function Ou(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ju,[(0,a.createElementVNode)("div",Ru,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.edit_provider")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.authProvider.name=e),rules:n.rules.name,label:e.$t("general.name"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.url,"onUpdate:modelValue":t[1]||(t[1]=e=>n.authProvider.url=e),label:e.$t("admin.url"),required:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.clientId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.authProvider.clientId=e),label:e.$t("admin.client_id"),required:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.authProvider.clientSecret,"onUpdate:modelValue":t[3]||(t[3]=e=>n.authProvider.clientSecret=e),label:e.$t("admin.client_secret"),placeholder:n.secretPlaceholder,required:""},null,8,["modelValue","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Gu={name:"EditProvider",props:{id:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/auth/openid-providers"),{createUniqueValidator:o}=qo(t),a=o("OpenIdProvider","providerName",{entityId:e.id,matchByField:"status",matchByValue:1});return{http:t,providerNameUniqueValidation:a}},data(){return{isLoading:!1,secretPlaceholder:"",authProvider:{name:"",url:"",clientId:"",clientSecret:""},rules:{name:[Ht,this.providerNameUniqueValidation,Wt(40)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.id).then((e=>{const{data:t}=e.data;this.authProvider.name=t.providerName,this.authProvider.url=t.providerUrl,this.authProvider.clientId=t.clientId,this.secretPlaceholder=t.clientId?"******":""})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/admin/openIdProvider")},onSave(){this.isLoading=!0,this.http.update(this.id,{name:this.authProvider.name,url:this.authProvider.url,clientId:this.authProvider.clientId,clientSecret:""===this.authProvider.clientSecret?null:this.authProvider.clientSecret}).then((()=>(this.isLoading=!1,this.$toast.updateSuccess()))).then((()=>{this.onCancel()}))}}};const Qu=(0,r.c)(Gu,[["render",Ou]]);var Hu=Qu;const Wu={class:"orangehrm-background-container"},Yu={class:"orangehrm-paper-container"},Ju={class:"orangehrm-header-container"},Xu={class:"orangehrm-bottom-container"},Ku={key:0,class:"loading-spinner"};function Zu(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-alert"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-pagination"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("edit-translations"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wu,[(0,a.createVNode)(i,{show:!l.isLoading&&l.showPaginator&&l.itemsModified,type:"info",message:e.$t("admin.please_save_before_pagination")},null,8,["show","message"]),(0,a.createElementVNode)("div",Yu,[l.total>0?((0,a.openBlock)(),(0,a.createBlock)(h,{key:0,loading:l.isLoading,onSubmitValid:l.onSubmitLangString,onReset:l.onReset},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Ju,[(0,a.createVNode)(d,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.errors_in_import_language_packages")),1)])),_:1}),l.showPaginator&&!l.itemsModified?((0,a.openBlock)(),(0,a.createBlock)(s,{key:l.currentPage,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(c,{loading:l.isLoading,total:l.total,selected:0,"records-found-lang-string":"admin.n_errors_found"},null,8,["loading","total"]),l.items?.data?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,langstrings:l.items.data,"onUpdate:langstrings":[t[1]||(t[1]=e=>l.items.data=e),l.checkItemsModified]},null,8,["langstrings","onUpdate:langstrings"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Xu,[(0,a.createElementVNode)("div",null,[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.save"),type:"submit",disabled:l.isLoading},null,8,["label","disabled"]),l.isLoading?((0,a.openBlock)(),(0,a.createElementBlock)("span",Ku)):(0,a.createCommentVNode)("",!0)])])])),_:1})])),_:1},8,["loading","onSubmitValid","onReset"])):(0,a.createCommentVNode)("",!0)])])}const ep={class:"orangehrm-translation-container"};function tp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("lang-string-target-input"),m=(0,a.resolveComponent)("oxd-grid");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ep,[(0,a.createVNode)(i),(0,a.createVNode)(m,{cols:2,class:"orangehrm-translation-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_text")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.error")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.translated_text")),1)])),_:1})])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.langstrings,((t,o)=>((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:o},[(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-translation-grid-langstring-header",type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.source_text")),1)])),_:1}),(0,a.createVNode)(d,{title:t.source},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.source),1)])),_:2},1032,["title"])])),_:2},1024),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{title:t.error.message,class:"orangehrm-translation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin."+t.error.code)),1)])),_:2},1032,["title"])])),_:2},1024),(0,a.createVNode)(s,{class:"orangehrm-translation-grid-text"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-translation-grid-langstring-header",type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.translated_text")),1)])),_:1}),(0,a.createVNode)(c,{"lang-string-id":t.langStringId,placeholder:t.target,"model-value":t.target,required:!0,"onUpdate:modelValue":e=>l.onUpdateTranslation(e,o)},null,8,["lang-string-id","placeholder","model-value","onUpdate:modelValue"]),(0,a.createVNode)(i,{class:"orangehrm-translation-grid-langstring-header"})])),_:2},1024)],64)))),128))])),_:1}),(0,a.createVNode)(i)])}var op={components:{LangStringTargetInput:$m},props:{langstrings:{type:Array,required:!0}},emits:["update:langstrings"],setup(e,t){const o=(o,a)=>{const l=[...e.langstrings];l[a].target=o,l[a].modified=!0,t.emit("update:langstrings",l)};return{onUpdateTranslation:o}}};const ap=(0,r.c)(op,[["render",tp],["__scopeId","data-v-114fc25f"]]);var lp=ap,np={name:"FixLanguageStringErrors",components:{"oxd-alert":q.OxdAlert,"edit-translations":lp},props:{languageId:{type:Number,required:!0},empNumber:{type:Number,required:!0},languagePackage:{type:String,required:!0},sourceLanguage:{type:String,required:!0}},setup(e){const{saveSuccess:t}=Nt(),o=new P(window.appGlobal.baseUrl,`/api/v2/admin/i18n/languages/${e.languageId}/translations/errors`),{showPaginator:l,currentPage:n,total:r,pages:i,response:d,isLoading:s,execQuery:c}=Dt(o),m=(0,a.ref)(!1),u=()=>{n.value=1,m.value=!1,c()},p=()=>{m.value=d.value.data.reduce(((e,t)=>e||""!==t.target&&!0===t.modified),!1)},h=()=>{s.value=!0,o.request({method:"PUT",url:`/api/v2/admin/i18n/languages/${e.languageId}/translations/bulk`,data:{data:d.value.data.filter((e=>null!==e.target&&!0===e.modified)).map((e=>({langStringId:e.langStringId,translatedValue:e.target})))}}).then((()=>t())).then((()=>{n.value=1,m.value=!1,c()}))};return{showPaginator:l,currentPage:n,isLoading:s,total:r,pages:i,items:d,onReset:u,onSubmitLangString:h,itemsModified:m,checkItemsModified:p}},watch:{total(e){0===e&&U("/admin/languagePackage")}}};const rp=(0,r.c)(np,[["render",Zu],["__scopeId","data-v-61e4b631"]]);var ip=rp,dp={"job-title-list":jt,"job-title-edit":jo,"job-title-save":Yo,"job-category-list":la,"job-category-edit":ca,"job-category-save":va,"qualification-education-list":rn,"qualification-education-edit":pn,"qualification-education-save":Cn,"system-user-list":La,"system-user-edit":al,"system-user-save":Ja,"organization-structure":El,"employment-status-list":Gl,"employment-status-save":Xl,"employment-status-edit":Al,"qualification-skill-list":$n,"qualification-skill-edit":Un,"qualification-skill-save":jn,"license-list":sr,"license-save":er,"license-edit":Wn,"module-configuration-edit":Vs,"qualification-language-list":Er,"qualification-language-edit":gr,"qualification-language-save":br,"qualification-membership-list":Fr,"qualification-membership-edit":Gr,"qualification-membership-save":Xr,"organization-general-information-view":li,"nationality-list":pi,"nationality-edit":Ci,"nationality-save":_i,"location-list":Hi,"location-save":ed,"location-edit":id,"email-configuration-view":Li,"pay-grade-list":fd,"pay-grade-add":wd,"pay-grade-edit":os,"work-shift-list":Ds,"work-shift-save":Ms,"work-shift-edit":Hs,"email-subscription-list":oc,"email-subscription-edit":wc,"localization-configuration":Dc,"corporate-branding":Hc,"language-package-list":gm,"language-translation-edit":Fm,"language-import":ou,"ldap-configuration":_u,"auth-provider-list":Lu,"add-auth-provider":zu,"edit-auth-provider":Hu,"fix-language-errors":ip};const sp={class:"orangehrm-background-container"},cp={class:"orangehrm-card-container"},mp={class:"orangehrm-employee-container"},up={class:"orangehrm-employee-image"},pp={class:"orangehrm-employee-form"};function hp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("profile-image-input"),c=(0,a.resolveComponent)("full-name-input"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("oxd-switch-input"),v=(0,a.resolveComponent)("oxd-input-group"),f=(0,a.resolveComponent)("password-input"),y=(0,a.resolveComponent)("required-text"),C=(0,a.resolveComponent)("oxd-button"),V=(0,a.resolveComponent)("submit-button"),b=(0,a.resolveComponent)("oxd-form-actions"),x=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",sp,[(0,a.createElementVNode)("div",cp,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_employee")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(x,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",mp,[(0,a.createElementVNode)("div",up,[(0,a.createVNode)(s,{modelValue:l.employee.empPicture,"onUpdate:modelValue":t[0]||(t[0]=e=>l.employee.empPicture=e),rules:n.rules.empPicture,"img-src":r.profilePicUrl},null,8,["modelValue","rules","img-src"])]),(0,a.createElementVNode)("div",pp,[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{firstName:l.employee.firstName,"onUpdate:firstName":t[1]||(t[1]=e=>l.employee.firstName=e),middleName:l.employee.middleName,"onUpdate:middleName":t[2]||(t[2]=e=>l.employee.middleName=e),lastName:l.employee.lastName,"onUpdate:lastName":t[3]||(t[3]=e=>l.employee.lastName=e),rules:n.rules},null,8,["firstName","middleName","lastName","rules"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.employee.employeeId,"onUpdate:modelValue":t[4]||(t[4]=e=>l.employee.employeeId=e),label:e.$t("general.employee_id"),rules:n.rules.employeeId},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{class:"user-form-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"user-form-header-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.create_login_details")),1)])),_:1}),(0,a.createVNode)(g,{modelValue:n.createLogin,"onUpdate:modelValue":t[5]||(t[5]=e=>n.createLogin=e)},null,8,["modelValue"])])),_:1}),n.createLogin?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.user.username,"onUpdate:modelValue":t[6]||(t[6]=e=>n.user.username=e),label:e.$t("general.username"),rules:n.rules.username,required:"",autocomplete:"off"},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{label:e.$t("general.status"),classes:{wrapper:"--status-grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.user.status,"onUpdate:modelValue":t[7]||(t[7]=e=>n.user.status=e),type:"radio","option-label":e.$t("general.enabled"),value:"1"},null,8,["modelValue","option-label"]),(0,a.createVNode)(p,{modelValue:n.user.status,"onUpdate:modelValue":t[8]||(t[8]=e=>n.user.status=e),type:"radio","option-label":e.$t("general.disabled"),value:"2"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,{password:n.user.password,"onUpdate:password":t[9]||(t[9]=e=>n.user.password=e),passwordConfirm:n.user.passwordConfirm,"onUpdate:passwordConfirm":t[10]||(t[10]=e=>n.user.passwordConfirm=e),"is-password-required":o.isPasswordRequired},null,8,["password","passwordConfirm","is-password-required"])],64)):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(d),(0,a.createVNode)(b,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y),(0,a.createVNode)(C,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(V)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const gp={class:"employee-image-wrapper"},vp=["src"];function fp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-input-field"),s=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(d,(0,a.mergeProps)({ref:"fileInput"},e.$attrs,{type:"file"}),{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",gp,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:o.imgSrc},null,8,vp)]),(0,a.createVNode)(i,{name:"plus",role:"none","display-type":"solid-main",class:"employee-image-action"})])),_:1},16),(0,a.createVNode)(s,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accept_jpg_png_upto_1mb_recomended_dimentions_200px_x_200px")),1)])),_:1})],64)}var yp={name:"ProfileImageInput",inheritAttrs:!1,props:{imgSrc:{type:String,required:!0}}};const Cp=(0,r.c)(yp,[["render",fp],["__scopeId","data-v-91a700da"]]);var Vp=Cp;function bp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createBlock)(d,{label:r.localizedLabel,classes:r.classes},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-firstname",name:"firstName",placeholder:e.$t("general.first_name"),"model-value":o.firstName,rules:o.rules.firstName,disabled:o.disabled,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:firstName",t))},null,8,["placeholder","model-value","rules","disabled"]),(0,a.createVNode)(i,{class:"orangehrm-middlename",name:"middleName","model-value":o.middleName,rules:o.rules.middleName,disabled:o.disabled,placeholder:o.showMiddleNamePlaceholder?e.$t("general.middle_name"):"","onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:middleName",t))},null,8,["model-value","rules","disabled","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-lastname",name:"lastName",placeholder:e.$t("general.last_name"),"model-value":o.lastName,rules:o.rules.lastName,disabled:o.disabled,"onUpdate:modelValue":t[2]||(t[2]=t=>e.$emit("update:lastName",t))},null,8,["placeholder","model-value","rules","disabled"])])),_:1},8,["label","classes"])}var xp={name:"FullNameInput",inheritAttrs:!1,props:{firstName:{type:String,required:!0},middleName:{type:String,required:!0},lastName:{type:String,required:!0},rules:{type:Object,required:!0},disabled:{type:Boolean,default:!1},showMiddleNamePlaceholder:{type:Boolean,default:!0},label:{type:String,default:null}},emits:["update:firstName","update:middleName","update:lastName"],computed:{classes(){return{label:{"oxd-input-field-required":!0},wrapper:{"--name-grouped-field":!0}}},localizedLabel(){return this.label?this.label:this.$t("general.employee_full_name")}}};const wp=(0,r.c)(xp,[["render",bp],["__scopeId","data-v-221e6023"]]);var Np=wp;const _p=`${window.appGlobal.publicPath}/images/default-photo.png`,kp={firstName:"",middleName:"",lastName:"",empPicture:null,employeeId:""},Sp={username:"",userRoleId:2,empNumber:0,status:"1",password:"",passwordConfirm:""};var $p={components:{"oxd-switch-input":q.OxdSwitchInput,"profile-image-input":Vp,"full-name-input":Np,"password-input":Qa},props:{empId:{type:String,required:!0},allowedImageTypes:{type:Array,required:!0},isPasswordRequired:{type:Boolean,default:!0}},setup(e){const t=(0,a.ref)({...kp,employeeId:e.empId?e.empId:""}),o=new P(window.appGlobal.baseUrl,"/api/v2/pim/employees"),{createUniqueValidator:l}=qo(o),n=l("Employee","employeeId",{translateKey:"pim.employee_id_exists"}),r=l("User","userName",{matchByField:"deleted",matchByValue:"false",translateKey:"pim.username_already_exists"});return{http:o,employee:t,employeeIdUniqueValidation:n,usernameUniqueValidation:r}},data(){return{isLoading:!1,createLogin:!1,user:{...Sp},empNumber:null,rules:{firstName:[Ht,Wt(30)],middleName:[Wt(30)],lastName:[Ht,Wt(30)],employeeId:[this.employeeIdUniqueValidation,Wt(10)],empPicture:[uo(1048576),po(this.allowedImageTypes)],username:[Ht,this.usernameUniqueValidation,Co(5),Wt(40)],status:[Ht]}}},computed:{profilePicUrl(){if(this.employee.empPicture){const e=this.employee.empPicture.base64,t=this.employee.empPicture.type,o=this.allowedImageTypes.findIndex((e=>e===t));return o>-1?`data:${t};base64,${e}`:_p}return _p}},created(){this.isLoading=!0,this.http.getAll().finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/pim/viewEmployeeList")},onSave(){this.isLoading=!0,this.http.create({...this.employee}).then((e=>{const{data:t}=e;return t?.data&&(this.empNumber=t.data.empNumber),this.createLogin&&t?.data?this.http.request({method:"POST",url:"/api/v2/admin/users",data:{username:this.user.username,password:this.user.password,status:"1"==this.user.status,userRoleId:this.user.userRoleId,empNumber:t.data.empNumber}}):void 0})).then((()=>this.$toast.saveSuccess())).then((()=>{this.employee={...kp},this.user={...Sp},this.empNumber?U(`/pim/viewPersonalDetails/empNumber/${this.empNumber}`):this.onCancel()}))}}};const Dp=(0,r.c)($p,[["render",hp],["__scopeId","data-v-304890b0"]]);var Ep=Dp;const Tp=e=>((0,a.pushScopeId)("data-v-7044e35a"),e=e(),(0,a.popScopeId)(),e),Ip={class:"orangehrm-background-container"},Bp=Tp((()=>(0,a.createElementVNode)("br",null,null,-1))),Lp={class:"orangehrm-paper-container"},Up={key:0,class:"orangehrm-header-container"},Ap={class:"orangehrm-container"},Pp={class:"orangehrm-bottom-container"};function qp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("employment-status-dropdown"),m=(0,a.resolveComponent)("include-employee-dropdown"),u=(0,a.resolveComponent)("jobtitle-dropdown"),p=(0,a.resolveComponent)("subunit-dropdown"),h=(0,a.resolveComponent)("oxd-grid"),g=(0,a.resolveComponent)("oxd-form-row"),v=(0,a.resolveComponent)("oxd-divider"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("oxd-table-filter"),b=(0,a.resolveComponent)("table-header"),x=(0,a.resolveComponent)("oxd-card-table"),w=(0,a.resolveComponent)("oxd-pagination"),N=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Ip,[(0,a.createVNode)(V,{"filter-title":e.$t("pim.employee_information")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C,{onSubmitValid:r.filterItems,onReset:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:n.rules.employee,params:{includeEmployees:l.filters.includeEmployees?.param}},null,8,["modelValue","rules","params"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.employeeId,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.employeeId=e),label:e.$t("general.employee_id")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.empStatusId,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.empStatusId=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.includeEmployees,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.includeEmployees=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.supervisor,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.supervisor=e),rules:n.rules.supervisor,label:e.$t("pim.supervisor_name")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.jobTitleId,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.jobTitleId=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.subunitId,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.subunitId=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(f,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),Bp,(0,a.createElementVNode)("div",Lp,[e.$can.create("employee_list")?((0,a.openBlock)(),(0,a.createElementBlock)("div",Up,[(0,a.createVNode)(f,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(b,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Ap,[(0,a.createVNode)(x,{ref:"cardTable",selected:n.checkedItems,"onUpdate:selected":t[7]||(t[7]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[8]||(t[8]=e=>l.sortDefinition=e),headers:r.headers,items:l.items?.data,selectable:e.$can.delete("employee_list"),clickable:!0,loading:l.isLoading,class:"orangehrm-employee-list","row-decorator":"oxd-table-decorator-card",onClick:r.onClickEdit},null,8,["selected","order","headers","items","selectable","loading","onClick"])]),(0,a.createElementVNode)("div",Pp,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(w,{key:0,current:l.currentPage,"onUpdate:current":t[9]||(t[9]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(N,{ref:"deleteDialog"},null,512)])}function Fp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.job_title"),options:l.options},null,8,["label","options"])}var Mp={name:"JobtitleDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/admin/job-titles");return(0,a.onBeforeMount)((()=>{t.getAll({limit:0}).then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.title})))}))})),{options:e}}};const zp=(0,r.c)(Mp,[["render",Fp]]);var jp=zp;function Rp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.sub_unit"),options:l.options},null,8,["label","options"])}var Op={name:"SubunitDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/admin/subunits");return(0,a.onBeforeMount)((()=>{t.getAll().then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.name,_indent:e.level?e.level+1:1})))}))})),{options:e}}};const Gp=(0,r.c)(Op,[["render",Rp]]);var Qp=Gp;function Hp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.employment_status"),options:l.options},null,8,["label","options"])}var Wp={name:"EmploymentStatusDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/admin/employment-statuses");return(0,a.onBeforeMount)((()=>{t.getAll({limit:0}).then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.name})))}))})),{options:e}}};const Yp=(0,r.c)(Wp,[["render",Hp]]);var Jp=Yp;function Xp(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("pim.include"),options:n.includeOpts,"show-empty-selector":!1},null,8,["label","options"])}var Kp={name:"IncludeEmployeeDropdown",data(){return{includeOpts:[{id:1,param:"onlyCurrent",label:this.$t("general.current_employees_only")},{id:2,param:"currentAndPast",label:this.$t("general.current_and_past_employees")},{id:3,param:"onlyPast",label:this.$t("general.past_employees_only")}]}}};const Zp=(0,r.c)(Kp,[["render",Xp]]);var eh=Zp;const th={"employee.employeeId":"DEFAULT","employee.firstName":"ASC","employee.lastName":"DEFAULT","jobTitle.jobTitleName":"DEFAULT","empStatus.name":"DEFAULT","subunit.name":"DEFAULT","supervisor.firstName":"DEFAULT"};var oh={components:{"delete-confirmation":At,"employee-autocomplete":$a,"jobtitle-dropdown":jp,"subunit-dropdown":Qp,"employment-status-dropdown":Jp,"include-employee-dropdown":eh},props:{unselectableEmpNumbers:{type:Array,default:()=>[]}},setup(e){const{$t:t}=Be(),o=o=>o.map((o=>{const a=e.unselectableEmpNumbers.findIndex((e=>e==o.empNumber));return{id:o.empNumber,employeeId:o.employeeId,firstAndMiddleName:`${o.firstName} ${o.middleName}`,lastName:o.lastName+(o.terminationId?` ${t("general.past_employee")}`:""),jobTitle:o.jobTitle?.isDeleted?o.jobTitle.title+t("general.deleted"):o.jobTitle?.title,empStatus:o.empStatus?.name,subunit:o.subunit?.name,supervisor:o.supervisors?o.supervisors.map((e=>`${e.firstName} ${e.lastName}`)).join(","):"",isSelectable:-1===a}})),l=(0,a.ref)({employee:null,employeeId:"",empStatusId:null,supervisor:null,jobTitleId:null,subunitId:null,includeEmployees:{id:1,param:"onlyCurrent",label:t("general.current_employees_only")}}),{sortDefinition:n,sortField:r,sortOrder:i,onSort:d}=Pt({sortDefinition:th}),s=(0,a.computed)((()=>({model:"detailed",nameOrId:"string"===typeof l.value.employee?l.value.employee:void 0,empNumber:l.value.employee?.id,employeeId:l.value.employeeId,empStatusId:l.value.empStatusId?.id,includeEmployees:l.value.includeEmployees?.param,supervisorEmpNumbers:l.value.supervisor?[l.value.supervisor.id]:void 0,jobTitleId:l.value.jobTitleId?.id,subunitId:l.value.subunitId?.id,sortField:r.value,sortOrder:i.value}))),c=new P(window.appGlobal.baseUrl,"/api/v2/pim/employees"),{showPaginator:m,currentPage:u,total:p,pages:h,pageSize:g,response:v,isLoading:f,execQuery:y}=Dt(c,{query:s,normalizer:o});return d(y),{http:c,showPaginator:m,currentPage:u,isLoading:f,total:p,pages:h,pageSize:g,execQuery:y,items:v,filters:l,sortDefinition:n}},data(){return{checkedItems:[],rules:{employee:[Wt(100)],supervisor:[Wt(100),So]}}},computed:{headers(){return[{name:"employeeId",slot:"title",title:this.$t("general.id"),sortField:"employee.employeeId",style:{flex:1}},{name:"firstAndMiddleName",title:this.$t("pim.first_middle_name"),sortField:"employee.firstName",style:{flex:1}},{name:"lastName",title:this.$t("general.last_name"),sortField:"employee.lastName",style:{flex:1}},{name:"jobTitle",title:this.$t("general.job_title"),sortField:"jobTitle.jobTitleName",style:{flex:1}},{name:"empStatus",title:this.$t("general.employment_status"),sortField:"empStatus.name",style:{flex:1}},{name:"subunit",title:this.$t("general.sub_unit"),sortField:"subunit.name",style:{flex:1}},{name:"supervisor",title:this.$t("pim.supervisor"),sortField:"supervisor.firstName",style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer}]}},methods:{onClickAdd(){U("/pim/addEmployee")},onClickEdit(e){const t=e.id?e.id:e.item?.id;U("/pim/viewPersonalDetails/empNumber/{id}",{id:t})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e,t){t.stopImmediatePropagation();const o=this.unselectableEmpNumbers.findIndex((t=>t==e.id));if(o>-1)return this.$toast.cannotDelete();this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},cellRenderer(...[,,,e]){const t={edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}};return this.$can.delete("employee_list")&&!this.unselectableEmpNumbers.includes(e.id)&&(t.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),{props:{header:{cellConfig:t}}}}}};const ah=(0,r.c)(oh,[["render",qp],["__scopeId","data-v-7044e35a"]]);var lh=ah;const nh={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function rh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("full-name-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-input-field"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("oxd-input-group"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(V,{"employee-id":o.empNumber,screen:"personal"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",nh,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.personal_details")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{firstName:n.employee.firstName,"onUpdate:firstName":t[0]||(t[0]=e=>n.employee.firstName=e),middleName:n.employee.middleName,"onUpdate:middleName":t[1]||(t[1]=e=>n.employee.middleName=e),lastName:n.employee.lastName,"onUpdate:lastName":t[2]||(t[2]=e=>n.employee.lastName=e),rules:n.rules},null,8,["firstName","middleName","lastName","rules"])])),_:1})])),_:1}),o.showDeprecatedFields?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.nickname,"onUpdate:modelValue":t[3]||(t[3]=e=>n.employee.nickname=e),label:e.$t("pim.nickname"),rules:n.rules.nickname},null,8,["modelValue","label","rules"])])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.employeeId,"onUpdate:modelValue":t[4]||(t[4]=e=>n.employee.employeeId=e),label:e.$t("general.employee_id"),rules:n.rules.employeeId,disabled:!e.$can.update("personal_sensitive_information")},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.otherId,"onUpdate:modelValue":t[5]||(t[5]=e=>n.employee.otherId=e),label:e.$t("pim.other_id"),rules:n.rules.otherId},null,8,["modelValue","label","rules"])])),_:1})])),_:1}),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.drivingLicenseNo,"onUpdate:modelValue":t[6]||(t[6]=e=>n.employee.drivingLicenseNo=e),label:e.$t("pim.driver_license_number"),rules:n.rules.drivingLicenseNo,disabled:!e.$can.update("personal_sensitive_information")},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.employee.drivingLicenseExpiredDate,"onUpdate:modelValue":t[7]||(t[7]=e=>n.employee.drivingLicenseExpiredDate=e),rules:n.rules.drivingLicenseExpiredDate,label:e.$t("pim.license_expiry_date")},null,8,["modelValue","rules","label"])])),_:1})])),_:1}),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[o.showSsnField?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.ssnNumber,"onUpdate:modelValue":t[8]||(t[8]=e=>n.employee.ssnNumber=e),label:e.$t("pim.ssn_number"),rules:n.rules.ssnNumber,disabled:!e.$can.update("personal_sensitive_information")},null,8,["modelValue","label","rules","disabled"])])),_:1})):(0,a.createCommentVNode)("",!0),o.showSinField?((0,a.openBlock)(),(0,a.createBlock)(c,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.sinNumber,"onUpdate:modelValue":t[9]||(t[9]=e=>n.employee.sinNumber=e),label:e.$t("pim.sin_number"),rules:n.rules.sinNumber,disabled:!e.$can.update("personal_sensitive_information")},null,8,["modelValue","label","rules","disabled"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.nationality,"onUpdate:modelValue":t[10]||(t[10]=e=>n.employee.nationality=e),type:"select",label:e.$t("general.nationality"),clear:!1,options:o.nationalities},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.maritalStatus,"onUpdate:modelValue":t[11]||(t[11]=e=>n.employee.maritalStatus=e),type:"select",label:e.$t("pim.marital_status"),clear:!1,options:n.maritalStatuses},null,8,["modelValue","label","options"])])),_:1})])),_:1}),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.employee.birthday,"onUpdate:modelValue":t[12]||(t[12]=e=>n.employee.birthday=e),label:e.$t("pim.date_of_birth"),rules:n.rules.birthday,disabled:!e.$can.update("personal_sensitive_information")},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{label:e.$t("pim.gender"),classes:{wrapper:"--gender-grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.gender,"onUpdate:modelValue":t[13]||(t[13]=e=>n.employee.gender=e),type:"radio","option-label":e.$t("general.male"),value:"1"},null,8,["modelValue","option-label"]),(0,a.createVNode)(u,{modelValue:n.employee.gender,"onUpdate:modelValue":t[14]||(t[14]=e=>n.employee.gender=e),type:"radio","option-label":e.$t("general.female"),value:"2"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),o.showDeprecatedFields?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0})):(0,a.createCommentVNode)("",!0),o.showDeprecatedFields?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.militaryService,"onUpdate:modelValue":t[15]||(t[15]=e=>n.employee.militaryService=e),label:e.$t("pim.military_service"),rules:n.rules.militaryService},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.employee.smoker,"onUpdate:modelValue":t[16]||(t[16]=e=>n.employee.smoker=e),type:"checkbox",label:e.$t("pim.smoker"),"option-label":e.$t("general.yes")},null,8,["modelValue","label","option-label"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])),_:1},8,["employee-id"])}const ih={class:"orangehrm-background-container"},dh={class:"orangehrm-card-container"},sh={class:"orangehrm-edit-employee"},ch={class:"orangehrm-edit-employee-navigation"},mh={class:"orangehrm-edit-employee-imagesection"},uh={class:"orangehrm-edit-employee-name"},ph={class:"orangehrm-edit-employee-image-wrapper"},hh=["src"],gh={class:"orangehrm-edit-employee-content"};function vh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("tabs-navigation"),s=(0,a.resolveComponent)("profile-custom-fields"),c=(0,a.resolveComponent)("profile-attachments");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ih,[(0,a.createElementVNode)("div",dh,[(0,a.createElementVNode)("div",sh,[(0,a.createElementVNode)("div",ch,[(0,a.createElementVNode)("div",mh,[(0,a.createElementVNode)("div",uh,[(0,a.createVNode)(i,{tag:"h6",class:"--strong"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeName),1)])),_:1}),l.isCurrentEmp?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.past_employee")),1)])),_:1}))]),(0,a.createElementVNode)("div",ph,[(0,a.createElementVNode)("div",{class:"orangehrm-edit-employee-image",onClick:t[0]||(t[0]=(...e)=>l.onClickProfilePic&&l.onClickProfilePic(...e))},[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:l.imgSrc},null,8,hh)])])]),(0,a.createVNode)(d,{tabs:o.tabs},null,8,["tabs"])]),(0,a.createElementVNode)("div",gh,[(0,a.renderSlot)(e.$slots,"default",{},void 0,!0),"default"!==o.screen?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"employee-id":o.employeeId,screen:o.screen},null,8,["employee-id","screen"])):(0,a.createCommentVNode)("",!0),"default"!==o.screen?((0,a.openBlock)(),(0,a.createBlock)(c,{key:1,"employee-id":o.employeeId,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,screen:o.screen},null,8,["employee-id","allowed-file-types","max-file-size","screen"])):(0,a.createCommentVNode)("",!0)])])])])}const fh={role:"tablist",class:"orangehrm-tabs"},yh=["href"];function Ch(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",fh,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.tabs,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:e,role:"tab",class:"orangehrm-tabs-wrapper"},[(0,a.createElementVNode)("a",{class:(0,a.normalizeClass)({"orangehrm-tabs-item":!0,"--active":e.active}),href:e.url},(0,a.toDisplayString)(e.name),11,yh)])))),128))])}var Vh={name:"TabsNavigation",props:{tabs:{type:Array,required:!0}}};const bh=(0,r.c)(Vh,[["render",Ch],["__scopeId","data-v-84c8a174"]]);var xh=bh;const wh={class:"orangehrm-attachment"},Nh={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},_h={class:"orangehrm-container"},kh={key:0,class:"orangehrm-bottom-container"};function Sh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("save-attachment"),s=(0,a.resolveComponent)("edit-attachment"),c=(0,a.resolveComponent)("profile-action-header"),m=(0,a.resolveComponent)("table-header"),u=(0,a.resolveComponent)("oxd-card-table"),p=(0,a.resolveComponent)("oxd-pagination"),h=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",wh,[(0,a.createVNode)(i),n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,http:l.http,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,onClose:r.onSaveModalClose},null,8,["http","allowed-file-types","max-file-size","onClose"])):n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,data:n.editModalState,http:l.http,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,onClose:r.onEditModalClose},null,8,["data","http","allowed-file-types","max-file-size","onClose"])):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:2},[(0,a.createElementVNode)("div",Nh,[(0,a.createVNode)(c,{"action-button-shown":e.$can.create(`${o.screen}_attachment`),onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.attachments")),1)])),_:1},8,["action-button-shown","onClick"])]),(0,a.createVNode)(m,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",_h,[(0,a.createVNode)(u,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:r.tableHeaders,items:l.items?.data,selectable:e.$can.delete(`${o.screen}_attachment`),clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","loading"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",kh,[(0,a.createVNode)(p,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0)],64)),(0,a.createVNode)(h,{ref:"deleteDialog"},null,512)])}const $h=1,Dh=1e3,Eh=1e6,Th=1e9,Ih=function(e,t,o=!0){let a,l=$h,n="B";return a="number"===typeof e?e:parseInt(e,10),a>=Th?(l=Th,n="GB"):a>=Eh?(l=Eh,n="MB"):a>=Dh&&(l=Dh,n="kB"),(a/l).toFixed(t)+(o?" "+n:"")},Bh={class:"orangehrm-card-container"};function Lh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Bh,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected"),required:""},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.description=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const Uh={attachment:null,description:""};var Ah={name:"SaveAttachment",props:{http:{type:Object,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},emits:["close"],data(){return{isLoading:!1,attachment:{...Uh},rules:{description:[Wt(200)],attachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.attachment}).then((()=>this.$toast.saveSuccess())).then((()=>{this.attachment={...Uh},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Ph=(0,r.c)(Ah,[["render",Lh]]);var qh=Ph;const Fh={class:"orangehrm-card-container"};function Mh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Fh,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.current_file")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.currentFile),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.replace_with"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected")},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.description=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const zh={attachment:null,description:""};var jh={name:"EditAttachment",props:{http:{type:Object,required:!0},data:{type:Object,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},emits:["close"],data(){return{isLoading:!1,currentFile:"",attachment:{...zh},rules:{description:[Wt(200)],attachment:[uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.currentFile=t.filename,this.attachment.description=t.description})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.attachment}).then((()=>this.$toast.updateSuccess())).then((()=>{this.attachment={...zh},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Rh=(0,r.c)(jh,[["render",Mh]]);var Oh=Rh;const Gh={class:"orangehrm-action-header"};function Qh(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Gh,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)])),_:3}),o.actionButtonShown?((0,a.openBlock)(),(0,a.createBlock)(d,(0,a.mergeProps)({key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"text"},e.$attrs),null,16,["label"])):(0,a.createCommentVNode)("",!0)])}var Hh={name:"ProfileActionHeader",inheritAttrs:!1,props:{actionButtonShown:{type:Boolean,required:!1,default:!0}}};const Wh=(0,r.c)(Hh,[["render",Qh],["__scopeId","data-v-3dab643a"]]);var Yh=Wh,Jh={name:"ProfileAttachments",components:{"save-attachment":qh,"edit-attachment":Oh,"profile-action-header":Yh,"delete-confirmation":At},props:{employeeId:{type:String,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0},screen:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/screen/${e.screen}/attachments`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>({...e,attachedDate:pe(ue(e.attachedDate),o,{locale:a}),size:Ih(e.size,2)}))),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"filename",slot:"title",title:this.$t("general.file_name"),style:{flex:1}},{name:"description",title:this.$t("general.description"),style:{flex:1}},{name:"size",title:this.$t("general.size"),style:{flex:1}},{name:"fileType",title:this.$t("general.type"),style:{flex:1}},{name:"attachedDate",title:this.$t("pim.date_added"),style:{flex:1}},{name:"attachedByName",title:this.$t("pim.added_by"),style:{flex:1}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{tableHeaders(){const e={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.update(`${this.screen}_attachment`)&&(e.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),this.$can.delete(`${this.screen}_attachment`)&&(e.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),this.$can.read(`${this.screen}_attachment`)&&(e.cellConfig.download={onClick:this.onClickDownload,props:{name:"download"}}),Object.keys(e.cellConfig).length>0?this.headers.concat([e]):this.headers}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onClickDownload(e){const t=`${window.appGlobal.baseUrl}/pim/viewAttachment/empNumber/${this.employeeId}/attachId/${e.id}`;window.open(t,"_blank")},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Xh=(0,r.c)(Jh,[["render",Sh],["__scopeId","data-v-eeb97be0"]]);var Kh=Xh;const Zh={key:0,class:"orangehrm-custom-fields"},eg={class:"orangehrm-card-container"};function tg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return 0!==n.fields.length?((0,a.openBlock)(),(0,a.createElementBlock)("div",Zh,[(0,a.createVNode)(i),(0,a.createElementVNode)("div",eg,[(0,a.createVNode)(d,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.custom_fields")),1)])),_:1}),(0,a.createVNode)(i),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.fields,(t=>((0,a.openBlock)(),(0,a.createBlock)(c,{key:t.id},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customFieldsModel[t.model],"onUpdate:modelValue":e=>n.customFieldsModel[t.model]=e,type:t.type,label:t.label,options:t.extraData,rules:n.rules.default,disabled:!e.$can.update(`${o.screen}_custom_fields`)},null,8,["modelValue","onUpdate:modelValue","type","label","options","rules","disabled"])])),_:2},1024)))),128))])),_:1})])),_:1}),e.$can.update(`${o.screen}_custom_fields`)?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(i),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p)])),_:1})],64)):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","onSubmitValid"])])])):(0,a.createCommentVNode)("",!0)}const og=e=>"string"===typeof e?e.split(",").map(((e,t)=>({id:t,label:e}))).filter((e=>""!=e.label.trim())):[];var ag={name:"ProfileCustomFields",props:{employeeId:{type:String,required:!0},screen:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/custom-fields?screen=${e.screen}`);return{http:t}},data(){return{isLoading:!1,fields:[],customFieldsModel:{},rules:{default:[Wt(250)]}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t,meta:o}=e.data;this.customFieldsModel={...t},o.fields&&o.fields.length>0&&(this.fields=o.fields.map((e=>{const o=og(e.extraData),a=`custom${e.id}`;if(1==e.fieldType&&t[a]){const e=o.find((e=>e.label==t[a]));this.customFieldsModel[a]=e||null}return{id:e.id,label:e.fieldName,type:1==e.fieldType?"select":"input",model:a,extraData:o}})))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",url:`/api/v2/pim/employees/${this.employeeId}/custom-fields`,data:{...this.customFieldsModel},transformRequest:[e=>{for(const t in e)e[t]?.label&&(e[t]=e[t].label);return JSON.stringify(e)}]}).then((()=>{this.isLoading=!1,this.$toast.saveSuccess()}))}}};const lg=(0,r.c)(ag,[["render",tg]]);var ng=lg;const rg=`${window.appGlobal.publicPath}/images/default-photo.png`;var ig={name:"EditEmployeeLayout",components:{"tabs-navigation":xh,"profile-attachments":Kh,"profile-custom-fields":ng},props:{employeeId:{type:String,required:!0},tabs:{type:Array,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0},screen:{type:String,default:"default",validator(e){return["default","personal","contact","emergency","dependents","immigration","qualifications","tax","salary","job","report-to","membership"].includes(e)}}},setup(e){const t=(0,a.ref)(""),o=(0,a.ref)(!0),l=new P(window.appGlobal.baseUrl,"/api/v2/pim/employees");l.get(e.employeeId).then((({data:e})=>{t.value=`${e.data.firstName} ${e.data.lastName}`,o.value=!e.data.terminationId}));const n=(0,a.computed)((()=>e.employeeId?`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.employeeId}`:rg)),r=()=>{U("/pim/viewPhotograph/empNumber/{empNumber}",{empNumber:e.employeeId})};return{imgSrc:n,employeeName:t,isCurrentEmp:o,onClickProfilePic:r}}};const dg=(0,r.c)(ig,[["render",vh],["__scopeId","data-v-af86f9aa"]]);var sg=dg;const cg={firstName:"",middleName:"",lastName:"",employeeId:"",otherId:"",drivingLicenseNo:"",drivingLicenseExpiredDate:"",ssnNumber:"",sinNumber:"",nationality:[],maritalStatus:[],birthday:"",gender:"",nickname:"",smoker:"",militaryService:""};var mg={components:{"edit-employee-layout":sg,"full-name-input":Np},props:{empNumber:{type:String,required:!0},nationalities:{type:Array,default:()=>[]},showDeprecatedFields:{type:Boolean,default:!1},showSsnField:{type:Boolean,default:!1},showSinField:{type:Boolean,default:!1}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/personal-details`),{userDateFormat:o}=R();return{http:t,userDateFormat:o}},data(){return{isLoading:!1,employee:{...cg},rules:{firstName:[Ht,Wt(30)],middleName:[Wt(30)],lastName:[Ht,Wt(30)],employeeId:[Wt(10)],otherId:[Wt(30)],drivingLicenseNo:[Wt(30)],ssnNumber:[Wt(30)],sinNumber:[Wt(30)],nickname:[Wt(30)],militaryService:[Wt(30)],birthday:[Yt(this.userDateFormat)],drivingLicenseExpiredDate:[Yt(this.userDateFormat)]},maritalStatuses:[{id:"Single",label:this.$t("pim.single")},{id:"Married",label:this.$t("pim.married")},{id:"Other",label:this.$t("pim.other")}]}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>(this.updateModel(e),this.http.request({method:"GET",url:"/api/v2/pim/employees"})))).then((e=>{const{data:t}=e.data;this.rules.employeeId.push((e=>{const o=t.findIndex((t=>t.employeeId?.trim()&&String(t.employeeId).toLowerCase()==String(e).toLowerCase()));if(o>-1){const{empNumber:e}=t[o];return e==this.empNumber||this.$t("pim.employee_id_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{lastName:this.employee.lastName,firstName:this.employee.firstName,middleName:this.employee.middleName,employeeId:this.employee.employeeId,otherId:this.employee.otherId,drivingLicenseNo:this.employee.drivingLicenseNo,drivingLicenseExpiredDate:this.employee.drivingLicenseExpiredDate,gender:this.employee.gender,maritalStatus:this.employee.maritalStatus?.id,birthday:this.employee.birthday,nationalityId:this.employee.nationality?.id,ssnNumber:this.showSsnField?this.employee.ssnNumber:void 0,sinNumber:this.showSinField?this.employee.sinNumber:void 0,nickname:this.showDeprecatedFields?this.employee.nickname:void 0,smoker:this.showDeprecatedFields?this.employee.smoker:void 0,militaryService:this.showDeprecatedFields?this.employee.militaryService:void 0}}).then((e=>(this.updateModel(e),this.$toast.updateSuccess()))).then((()=>{this.isLoading=!1}))},updateModel(e){const{data:t}=e.data;this.employee={...cg,...t},this.employee.maritalStatus=this.maritalStatuses.find((e=>e.id===t.maritalStatus)),this.employee.nationality=this.nationalities.find((e=>e.id===t.nationality?.id))}}};const ug=(0,r.c)(mg,[["render",rh],["__scopeId","data-v-6653c066"]]);var pg=ug;const hg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function gg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(f,{"employee-id":o.empNumber,screen:"contact"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",hg,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.contact_details")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.address")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.street1,"onUpdate:modelValue":t[0]||(t[0]=e=>n.contact.street1=e),label:e.$t("pim.street1"),rules:n.rules.street1},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.street2,"onUpdate:modelValue":t[1]||(t[1]=e=>n.contact.street2=e),label:e.$t("pim.street2"),rules:n.rules.street2},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.city,"onUpdate:modelValue":t[2]||(t[2]=e=>n.contact.city=e),label:e.$t("general.city"),rules:n.rules.city},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.province,"onUpdate:modelValue":t[3]||(t[3]=e=>n.contact.province=e),label:e.$t("general.state_province"),rules:n.rules.province},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.zipCode,"onUpdate:modelValue":t[4]||(t[4]=e=>n.contact.zipCode=e),label:e.$t("general.zip_postal_code"),rules:n.rules.zipCode},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.countryCode,"onUpdate:modelValue":t[5]||(t[5]=e=>n.contact.countryCode=e),type:"select",label:e.$t("general.country"),options:o.countries},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.telephone")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.homeTelephone,"onUpdate:modelValue":t[6]||(t[6]=e=>n.contact.homeTelephone=e),modelModifiers:{trim:!0},label:e.$t("pim.home"),rules:n.rules.homeTelephone},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.mobile,"onUpdate:modelValue":t[7]||(t[7]=e=>n.contact.mobile=e),modelModifiers:{trim:!0},label:e.$t("general.mobile"),rules:n.rules.mobile},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.workTelephone,"onUpdate:modelValue":t[8]||(t[8]=e=>n.contact.workTelephone=e),modelModifiers:{trim:!0},label:e.$t("pim.work"),rules:n.rules.workTelephone},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.email")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.workEmail,"onUpdate:modelValue":t[9]||(t[9]=e=>n.contact.workEmail=e),label:e.$t("general.work_email"),rules:n.rules.workEmail},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.otherEmail,"onUpdate:modelValue":t[10]||(t[10]=e=>n.contact.otherEmail=e),label:e.$t("general.other_email"),rules:n.rules.otherEmail},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])),_:1},8,["employee-id"])}const vg={street1:"",street2:"",city:"",province:"",countryCode:[],zipCode:"",homeTelephone:"",workTelephone:"",mobile:"",workEmail:"",otherEmail:""};var fg={components:{"edit-employee-layout":sg},props:{empNumber:{type:String,required:!0},countries:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employee/${e.empNumber}/contact-details`);return t.setIgnorePath("/api/v2/pim/employees/[0-9]+/contact-details/validation/(work-emails|other-emails)"),{http:t}},data(){return{isLoading:!1,contact:{...vg},rules:{street1:[Wt(70)],street2:[Wt(70)],city:[Wt(70)],province:[Wt(70)],zipCode:[Wt(10)],homeTelephone:[Wt(25),go],mobile:[Wt(25),go],workTelephone:[Wt(25),go],workEmail:[Wt(50),ho,(0,q.promiseDebounce)(this.validateWorkEmail,500)],otherEmail:[Wt(50),ho,(0,q.promiseDebounce)(this.validateOtherEmail,500)]}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{this.updateModel(e)})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{...this.contact,countryCode:this.contact.countryCode?.id}}).then((e=>(this.updateModel(e),this.$toast.updateSuccess()))).then((()=>{this.isLoading=!1}))},validateWorkEmail(e){return new Promise((t=>{if(e){const e=this.contact.workEmail===this.contact.otherEmail;this.http.request({method:"GET",url:`/api/v2/pim/employees/${this.empNumber}/contact-details/validation/work-emails`,params:{workEmail:this.contact.workEmail}}).then((o=>{const{data:a}=o.data;return!0===a.valid?t(!e||this.$t("pim.work_email_and_other_email_cannot_be_the_same")):t(this.$t("general.already_exists"))}))}else t(!0)}))},validateOtherEmail(e){return new Promise((t=>{if(e){const e=this.contact.otherEmail===this.contact.workEmail;this.http.request({method:"GET",url:`/api/v2/pim/employees/${this.empNumber}/contact-details/validation/other-emails`,params:{otherEmail:this.contact.otherEmail}}).then((o=>{const{data:a}=o.data;return!0===a.valid?t(!e||this.$t("pim.work_email_and_other_email_cannot_be_the_same")):t(this.$t("general.already_exists"))}))}else t(!0)}))},validateEmailDifferent(e){return t=>{const o=e();return null===o||""===o||(t!==o||this.$t("pim.work_email_and_other_email_cannot_be_the_same"))}},updateModel(e){const{data:t}=e.data;this.contact={...vg,...t},this.contact.countryCode=this.countries.find((e=>e.id===t.countryCode))}}};const yg=(0,r.c)(fg,[["render",gg]]);var Cg=yg;const Vg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},bg={class:"orangehrm-container"},xg={class:"orangehrm-bottom-container"};function wg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-emergency-contact"),d=(0,a.resolveComponent)("edit-emergency-contact"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"emergency"},{default:(0,a.withCtx)((()=>[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,onClose:r.onSaveModalClose},null,8,["http","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Vg,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_emergency_contacts")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",bg,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","disabled","loading"])]),(0,a.createElementVNode)("div",xg,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])),_:1},8,["employee-id"])}const Ng={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function _g(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",Ng,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.save_emergency_contact")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.contact.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.relationship,"onUpdate:modelValue":t[1]||(t[1]=e=>n.contact.relationship=e),label:e.$t("pim.relationship"),rules:n.rules.relationship,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.homePhone,"onUpdate:modelValue":t[2]||(t[2]=e=>n.contact.homePhone=e),modelModifiers:{trim:!0},label:e.$t("pim.home_telephone"),rules:n.rules.homePhone},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.mobilePhone,"onUpdate:modelValue":t[3]||(t[3]=e=>n.contact.mobilePhone=e),modelModifiers:{trim:!0},label:e.$t("general.mobile"),rules:n.rules.mobilePhone},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.officePhone,"onUpdate:modelValue":t[4]||(t[4]=e=>n.contact.officePhone=e),modelModifiers:{trim:!0},label:e.$t("pim.work_telephone"),rules:n.rules.officePhone},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const kg={name:"",relationship:"",homePhone:"",officePhone:"",mobilePhone:""};var Sg={name:"SaveEmergencyContact",props:{http:{type:Object,required:!0}},emits:["close"],data(){return{isLoading:!1,contact:{...kg},rules:{name:[Ht,Wt(100)],relationship:[Ht,Wt(100)],homePhone:[go,Wt(30),e=>""!==e||""!==this.contact.mobilePhone||""!==this.contact.officePhone||this.$t("pim.at_least_one_phone_number_is_required")],mobilePhone:[go,Wt(30)],officePhone:[go,Wt(30)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.contact}).then((()=>this.$toast.saveSuccess())).then((()=>{this.contact={...kg},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const $g=(0,r.c)(Sg,[["render",_g]]);var Dg=$g;const Eg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function Tg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",Eg,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_emergency_contact")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.contact.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.relationship,"onUpdate:modelValue":t[1]||(t[1]=e=>n.contact.relationship=e),label:e.$t("pim.relationship"),rules:n.rules.relationship,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.homePhone,"onUpdate:modelValue":t[2]||(t[2]=e=>n.contact.homePhone=e),modelModifiers:{trim:!0},label:e.$t("pim.home_telephone"),rules:n.rules.homePhone},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.mobilePhone,"onUpdate:modelValue":t[3]||(t[3]=e=>n.contact.mobilePhone=e),modelModifiers:{trim:!0},label:e.$t("general.mobile"),rules:n.rules.mobilePhone},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contact.officePhone,"onUpdate:modelValue":t[4]||(t[4]=e=>n.contact.officePhone=e),modelModifiers:{trim:!0},label:e.$t("pim.work_telephone"),rules:n.rules.officePhone},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const Ig={name:"",relationship:"",homePhone:"",officePhone:"",mobilePhone:""};var Bg={name:"EditEmergencyContact",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],data(){return{isLoading:!1,contact:{...Ig},rules:{name:[Ht,Wt(100)],relationship:[Ht,Wt(100)],homePhone:[go,Wt(30),e=>""!==e||""!==this.contact.mobilePhone||""!==this.contact.officePhone||this.$t("pim.at_least_one_phone_number_is_required")],mobilePhone:[go,Wt(30)],officePhone:[go,Wt(30)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.contact={...Ig,...t}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.contact}).then((()=>this.$toast.updateSuccess())).then((()=>{this.contact={...Ig},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Lg=(0,r.c)(Bg,[["render",Tg]]);var Ug=Lg,Ag={components:{"profile-action-header":Yh,"edit-employee-layout":sg,"save-emergency-contact":Dg,"edit-emergency-contact":Ug,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},countries:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/emergency-contacts`),{showPaginator:o,currentPage:a,total:l,pages:n,pageSize:r,response:i,isLoading:d,execQuery:s}=Dt(t,{toastNoRecords:!1});return{http:t,showPaginator:o,currentPage:a,isLoading:d,total:l,pages:n,pageSize:r,execQuery:s,items:i}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1}},{name:"relationship",title:this.$t("pim.relationship"),style:{flex:1}},{name:"homePhone",title:this.$t("pim.home_telephone"),style:{flex:1}},{name:"mobilePhone",title:this.$t("general.mobile"),style:{flex:1}},{name:"officePhone",title:this.$t("pim.work_telephone"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Pg=(0,r.c)(Ag,[["render",wg],["__scopeId","data-v-8146ff56"]]);var qg=Pg;const Fg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},Mg={class:"orangehrm-container"},zg={class:"orangehrm-bottom-container"};function jg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-dependent"),d=(0,a.resolveComponent)("edit-dependent"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"dependents"},{default:(0,a.withCtx)((()=>[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,onClose:r.onSaveModalClose},null,8,["http","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Fg,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_dependents")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Mg,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","disabled","loading"])]),(0,a.createElementVNode)("div",zg,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])),_:1},8,["employee-id"])}const Rg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function Og(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",Rg,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_dependent")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.dependent.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.relationshipType,"onUpdate:modelValue":t[1]||(t[1]=e=>n.dependent.relationshipType=e),type:"select",label:e.$t("pim.relationship"),rules:n.rules.relationshipType,options:n.relationshipOptions,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),r.showRelationship?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.relationship,"onUpdate:modelValue":t[2]||(t[2]=e=>n.dependent.relationship=e),label:e.$t("pim.please_specify"),rules:n.rules.relationship,required:""},null,8,["modelValue","label","rules"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.dependent.dateOfBirth,"onUpdate:modelValue":t[3]||(t[3]=e=>n.dependent.dateOfBirth=e),label:e.$t("pim.date_of_birth"),rules:n.rules.dateOfBirth},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const Gg={name:"",relationshipType:null,relationship:"",dateOfBirth:""};var Qg={name:"SaveDependent",props:{http:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,dependent:{...Gg},rules:{name:[Ht,Wt(100)],relationshipType:[Ht],relationship:[Ht,Wt(100)],dateOfBirth:[Yt(this.userDateFormat)]},relationshipOptions:[{id:"child",label:this.$t("pim.child")},{id:"other",label:this.$t("pim.other")}]}},computed:{showRelationship(){return"other"==this.dependent.relationshipType?.id}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.dependent,relationshipType:this.dependent.relationshipType?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.dependent={...Gg},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Hg=(0,r.c)(Qg,[["render",Og]]);var Wg=Hg;const Yg={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function Jg(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",Yg,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_dependent")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.dependent.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.relationshipType,"onUpdate:modelValue":t[1]||(t[1]=e=>n.dependent.relationshipType=e),type:"select",label:e.$t("pim.relationship"),rules:n.rules.relationshipType,options:n.relationshipOptions,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),r.showRelationship?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.dependent.relationship,"onUpdate:modelValue":t[2]||(t[2]=e=>n.dependent.relationship=e),label:e.$t("pim.please_specify"),rules:n.rules.relationship,required:""},null,8,["modelValue","label","rules"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.dependent.dateOfBirth,"onUpdate:modelValue":t[3]||(t[3]=e=>n.dependent.dateOfBirth=e),label:e.$t("pim.date_of_birth"),rules:n.rules.dateOfBirth},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const Xg={name:"",relationshipType:null,relationship:"",dateOfBirth:""};var Kg={name:"EditDependent",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,dependent:{...Xg},rules:{name:[Ht,Wt(100)],relationshipType:[Ht],relationship:[Ht,Wt(100)],dateOfBirth:[Yt(this.userDateFormat)]},relationshipOptions:[{id:"child",label:this.$t("pim.child")},{id:"other",label:this.$t("pim.other")}]}},computed:{showRelationship(){return"other"==this.dependent.relationshipType?.id}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.dependent={...Xg,...t},this.dependent.relationshipType=this.relationshipOptions.find((e=>e.id===t.relationshipType))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.dependent,relationshipType:this.dependent.relationshipType?.id}).then((()=>this.$toast.updateSuccess())).then((()=>{this.dependent={...Xg},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Zg=(0,r.c)(Kg,[["render",Jg]]);var ev=Zg,tv={components:{"profile-action-header":Yh,"edit-employee-layout":sg,"save-dependent":Wg,"edit-dependent":ev,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},countries:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/dependents`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>({id:e.id,name:e.name,dateOfBirth:pe(ue(e.dateOfBirth),o,{locale:a}),relationship:"other"==e.relationshipType?e.relationship:"Child"}))),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1}},{name:"relationship",title:this.$t("pim.relationship"),style:{flex:1}},{name:"dateOfBirth",title:this.$t("pim.date_of_birth"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:"0.5"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const ov=(0,r.c)(tv,[["render",jg]]);var av=ov;const lv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},nv={class:"orangehrm-employee-picture"};function rv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("profile-image-input"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("submit-button"),u=(0,a.resolveComponent)("oxd-form-actions"),p=(0,a.resolveComponent)("oxd-form"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",lv,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.change_profile_picture")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",nv,[(0,a.createVNode)(s,{modelValue:n.empPicture,"onUpdate:modelValue":t[0]||(t[0]=e=>n.empPicture=e),rules:n.rules.empPicture,"img-src":r.profilePicUrl},null,8,["modelValue","rules","img-src"])])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])),_:1},8,["employee-id"])}const iv=`${window.appGlobal.publicPath}/images/default-photo.png`;var dv={components:{"profile-image-input":Vp,"edit-employee-layout":sg},props:{empNumber:{type:String,required:!0},allowedImageTypes:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/picture`);return{http:t}},data(){return{isLoading:!1,empPicture:null,rules:{empPicture:[Ht,uo(1048576),po(this.allowedImageTypes)]}}},computed:{profilePicUrl(){if(this.empPicture){const e=this.empPicture.base64,t=this.empPicture.type,o=this.allowedImageTypes.findIndex((e=>e===t));return o>-1?`data:${t};base64,${e}`:iv}return iv}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{empPicture:this.empPicture}}).then((()=>this.$toast.updateSuccess())).then((()=>{location.reload()}))}}};const sv=(0,r.c)(dv,[["render",rv],["__scopeId","data-v-42073826"]]);var cv=sv;const mv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},uv={class:"orangehrm-container"},pv={class:"orangehrm-bottom-container"};function hv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-salary-component"),d=(0,a.resolveComponent)("edit-salary-component"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"salary"},{default:(0,a.withCtx)((()=>[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,paygrades:o.paygrades,"pay-frequencies":o.payFrequencies,currencies:o.currencies,"account-types":o.accountTypes,onClose:r.onSaveModalClose},null,8,["http","paygrades","pay-frequencies","currencies","account-types","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,paygrades:o.paygrades,"pay-frequencies":o.payFrequencies,currencies:o.currencies,"account-types":o.accountTypes,onClose:r.onEditModalClose},null,8,["http","data","paygrades","pay-frequencies","currencies","account-types","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",mv,[(0,a.createVNode)(s,{"action-button-shown":e.$can.update("salary_details"),onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_salary_components")),1)])),_:1},8,["action-button-shown","onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",uv,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:r.tableHeaders,items:l.items?.data,selectable:e.$can.delete("salary_details"),disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","disabled","loading"])]),(0,a.createElementVNode)("div",pv,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])),_:1},8,["employee-id"])}const gv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function vv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-switch-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",gv,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" Add Salary Component ")])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.salaryComponent.name=e),label:e.$t("pim.salary_component"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.payGradeId,"onUpdate:modelValue":t[1]||(t[1]=e=>n.salaryComponent.payGradeId=e),type:"select",label:e.$t("general.pay_grade"),options:o.paygrades},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.payFrequencyId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.salaryComponent.payFrequencyId=e),type:"select",label:e.$t("pim.pay_frequency"),options:o.payFrequencies},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(s,{key:r.currenciesOpts,modelValue:n.salaryComponent.currencyId,"onUpdate:modelValue":t[3]||(t[3]=e=>n.salaryComponent.currencyId=e),type:"select",label:e.$t("general.currency"),options:r.currenciesOpts,rules:n.rules.currencyId,required:""},null,8,["modelValue","label","options","rules"]))])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.salaryAmount,"onUpdate:modelValue":t[4]||(t[4]=e=>n.salaryComponent.salaryAmount=e),label:e.$t("general.amount"),rules:n.rules.salaryAmount,required:""},null,8,["modelValue","label","rules"]),void 0!==r.minAmount||void 0!==r.maxAmount?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" Min: "+(0,a.toDisplayString)(r.minAmount??0)+" - Max: "+(0,a.toDisplayString)(r.maxAmount??0),1)])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.comment,"onUpdate:modelValue":t[5]||(t[5]=e=>n.salaryComponent.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,{class:"directdeposit-form-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"directdeposit-form-header-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.include_direct_deposit_details")),1)])),_:1}),(0,a.createVNode)(p,{modelValue:n.includeDirectDeposit,"onUpdate:modelValue":t[6]||(t[6]=e=>n.includeDirectDeposit=e)},null,8,["modelValue"])])),_:1}),n.includeDirectDeposit?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAccount,"onUpdate:modelValue":t[7]||(t[7]=e=>n.directDeposit.directDepositAccount=e),label:e.$t("pim.account_number"),rules:n.rules.directDepositAccount,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAccountType,"onUpdate:modelValue":t[8]||(t[8]=e=>n.directDeposit.directDepositAccountType=e),type:"select",label:e.$t("pim.account_type"),rules:n.rules.directDepositAccountType,options:o.accountTypes,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),r.showOptionalAccountType?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.accountType,"onUpdate:modelValue":t[9]||(t[9]=e=>n.accountType=e),label:e.$t("pim.please_specify"),rules:n.rules.accountType,required:""},null,8,["modelValue","label","rules"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositRoutingNumber,"onUpdate:modelValue":t[10]||(t[10]=e=>n.directDeposit.directDepositRoutingNumber=e),label:e.$t("pim.routing_number"),rules:n.rules.directDepositRoutingNumber,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAmount,"onUpdate:modelValue":t[11]||(t[11]=e=>n.directDeposit.directDepositAmount=e),label:e.$t("general.amount"),rules:n.rules.directDepositAmount,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const fv={name:"",salaryAmount:"",comment:"",payGradeId:null,payFrequencyId:null,currencyId:null},yv={directDepositAccount:"",directDepositAccountType:null,directDepositRoutingNumber:"",directDepositAmount:""};var Cv={name:"SaveSalaryComponent",components:{"oxd-switch-input":q.OxdSwitchInput},props:{http:{type:Object,required:!0},paygrades:{type:Array,default:()=>[]},payFrequencies:{type:Array,default:()=>[]},currencies:{type:Array,default:()=>[]},accountTypes:{type:Array,default:()=>[]}},emits:["close"],data(){return{isLoading:!1,includeDirectDeposit:!1,salaryComponent:{...fv},directDeposit:{...yv},accountType:"",usableCurrencies:[],rules:{name:[Ht,Wt(100)],salaryAmount:[Ht,to,fo(1e9)],comment:[Wt(250)],currencyId:[Ht],directDepositAccount:[Ht,Wt(100)],directDepositAccountType:[Ht],accountType:[Ht,Wt(20)],directDepositRoutingNumber:[Ht,Wt(9),to],directDepositAmount:[Ht,to,fo(1e9)]}}},computed:{showOptionalAccountType(){return"OTHER"==this.directDeposit.directDepositAccountType?.id},minAmount(){return this.currencyInfo?.minAmount},maxAmount(){return this.currencyInfo?.maxAmount},currenciesOpts(){const e=this.salaryComponent.payGradeId?.id;return e?e&&this.usableCurrencies.length>0?this.currencies.filter((e=>this.usableCurrencies.findIndex((t=>t.id===e.id))>-1)):[]:this.currencies},currencyInfo(){return this.usableCurrencies.find((e=>e.id===this.salaryComponent.currencyId?.id))}},watch:{"salaryComponent.payGradeId":function(e){e?.id?(this.isLoading=!0,this.http.request({url:`/api/v2/admin/pay-grades/${e.id}/currencies`,method:"GET",params:{limit:0}}).then((e=>{const{data:t}=e.data;this.usableCurrencies=t.map((e=>({id:e.currencyType.id,name:e.currencyType.name,minAmount:e.minSalary,maxAmount:e.maxSalary})));const o=this.salaryComponent.currencyId,a=this.usableCurrencies.findIndex((e=>e.id===o?.id));this.salaryComponent.currencyId=-1===a?null:this.salaryComponent.currencyId})).then((()=>{this.isLoading=!1}))):this.usableCurrencies=[]}},mounted(){this.$nextTick((()=>{this.rules.salaryAmount.push((e=>{const t=this.minAmount?this.minAmount:0;return e>=t||this.$t("pim.should_be_within_min_max_values")})),this.rules.salaryAmount.push((e=>{const t=this.maxAmount?this.maxAmount:999999999;return e<=t||this.$t("pim.should_be_within_min_max_values")}))}))},methods:{onSave(){this.isLoading=!0;const e=this.showOptionalAccountType?this.accountType:this.directDeposit.directDepositAccountType?.id;this.http.create({salaryComponent:this.salaryComponent.name,salaryAmount:this.salaryComponent.salaryAmount,payGradeId:this.salaryComponent.payGradeId?.id,currencyId:this.salaryComponent.currencyId?.id,payFrequencyId:this.salaryComponent.payFrequencyId?.id,comment:this.salaryComponent.comment?this.salaryComponent.comment:null,addDirectDeposit:this.includeDirectDeposit,directDepositAccount:this.includeDirectDeposit?this.directDeposit.directDepositAccount:void 0,directDepositAccountType:this.includeDirectDeposit?e:void 0,directDepositAmount:this.includeDirectDeposit?this.directDeposit.directDepositAmount:void 0,directDepositRoutingNumber:this.includeDirectDeposit?this.directDeposit.directDepositRoutingNumber:void 0}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Vv=(0,r.c)(Cv,[["render",vv],["__scopeId","data-v-9e13686c"]]);var bv=Vv;const xv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function wv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-switch-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",xv,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_salary_component")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.salaryComponent.name=e),label:e.$t("pim.salary_component"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.payGradeId,"onUpdate:modelValue":t[1]||(t[1]=e=>n.salaryComponent.payGradeId=e),type:"select",label:e.$t("general.pay_grade"),options:o.paygrades},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.payFrequencyId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.salaryComponent.payFrequencyId=e),type:"select",label:e.$t("pim.pay_frequency"),options:o.payFrequencies},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(s,{key:r.currenciesOpts,modelValue:n.salaryComponent.currencyId,"onUpdate:modelValue":t[3]||(t[3]=e=>n.salaryComponent.currencyId=e),type:"select",label:e.$t("general.currency"),options:r.currenciesOpts,rules:n.rules.currencyId,required:""},null,8,["modelValue","label","options","rules"]))])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.salaryAmount,"onUpdate:modelValue":t[4]||(t[4]=e=>n.salaryComponent.salaryAmount=e),label:e.$t("general.amount"),rules:n.rules.salaryAmount,required:""},null,8,["modelValue","label","rules"]),void 0!==r.minAmount||void 0!==r.maxAmount?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" Min: "+(0,a.toDisplayString)(r.minAmount??0)+" - Max: "+(0,a.toDisplayString)(r.maxAmount??0),1)])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.salaryComponent.comment,"onUpdate:modelValue":t[5]||(t[5]=e=>n.salaryComponent.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,{class:"directdeposit-form-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"directdeposit-form-header-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.include_direct_deposit_details")),1)])),_:1}),(0,a.createVNode)(p,{modelValue:n.includeDirectDeposit,"onUpdate:modelValue":t[6]||(t[6]=e=>n.includeDirectDeposit=e)},null,8,["modelValue"])])),_:1}),n.includeDirectDeposit?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAccount,"onUpdate:modelValue":t[7]||(t[7]=e=>n.directDeposit.directDepositAccount=e),label:e.$t("pim.account_number"),rules:n.rules.directDepositAccount,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAccountType,"onUpdate:modelValue":t[8]||(t[8]=e=>n.directDeposit.directDepositAccountType=e),type:"select",label:e.$t("pim.account_type"),rules:n.rules.directDepositAccountType,options:o.accountTypes,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),r.showOptionalAccountType?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.accountType,"onUpdate:modelValue":t[9]||(t[9]=e=>n.accountType=e),label:e.$t("pim.please_specify"),rules:n.rules.accountType,required:""},null,8,["modelValue","label","rules"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositRoutingNumber,"onUpdate:modelValue":t[10]||(t[10]=e=>n.directDeposit.directDepositRoutingNumber=e),label:e.$t("pim.routing_number"),rules:n.rules.directDepositRoutingNumber,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.directDeposit.directDepositAmount,"onUpdate:modelValue":t[11]||(t[11]=e=>n.directDeposit.directDepositAmount=e),label:e.$t("general.amount"),rules:n.rules.directDepositAmount,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const Nv={name:"",salaryAmount:"",comment:"",payGradeId:null,payFrequencyId:null,currencyId:null},_v={directDepositAccount:"",directDepositAccountType:null,directDepositRoutingNumber:"",directDepositAmount:""};var kv={name:"EditSalaryComponent",components:{"oxd-switch-input":q.OxdSwitchInput},props:{http:{type:Object,required:!0},data:{type:Object,required:!0},paygrades:{type:Array,default:()=>[]},payFrequencies:{type:Array,default:()=>[]},currencies:{type:Array,default:()=>[]},accountTypes:{type:Array,default:()=>[]}},emits:["close"],data(){return{isLoading:!1,includeDirectDeposit:!1,salaryComponent:{...Nv},directDeposit:{..._v},accountType:"",usableCurrencies:[],rules:{name:[Ht,Wt(100)],salaryAmount:[Ht,to,fo(1e9)],comment:[Wt(250)],currencyId:[Ht],directDepositAccount:[Ht,Wt(100)],directDepositAccountType:[Ht],accountType:[Ht,Wt(20)],directDepositRoutingNumber:[Ht,Wt(9),to],directDepositAmount:[Ht,to,fo(1e9)]}}},computed:{showOptionalAccountType(){return"OTHER"==this.directDeposit.directDepositAccountType?.id},minAmount(){return this.currencyInfo?.minAmount},maxAmount(){return this.currencyInfo?.maxAmount},currenciesOpts(){const e=this.salaryComponent.payGradeId?.id;return e?e&&this.usableCurrencies.length>0?this.currencies.filter((e=>this.usableCurrencies.findIndex((t=>t.id===e.id))>-1)):[]:this.currencies},currencyInfo(){return this.usableCurrencies.find((e=>e.id===this.salaryComponent.currencyId?.id))}},watch:{"salaryComponent.payGradeId":function(e){e?.id?(this.isLoading=!0,this.http.request({url:`/api/v2/admin/pay-grades/${e.id}/currencies`,method:"GET",params:{limit:0}}).then((e=>{const{data:t}=e.data;this.usableCurrencies=t.map((e=>({id:e.currencyType.id,name:e.currencyType.name,minAmount:e.minSalary,maxAmount:e.maxSalary})));const o=this.salaryComponent.currencyId,a=this.usableCurrencies.findIndex((e=>e.id===o?.id));this.salaryComponent.currencyId=-1===a?[]:this.salaryComponent.currencyId})).then((()=>{this.isLoading=!1}))):this.usableCurrencies=[]}},mounted(){this.$nextTick((()=>{this.rules.salaryAmount.push((e=>{const t=this.minAmount?this.minAmount:0;return e>=t||this.$t("pim.should_be_within_min_max_values")})),this.rules.salaryAmount.push((e=>{const t=this.maxAmount?this.maxAmount:999999999;return e<=t||this.$t("pim.should_be_within_min_max_values")}))}))},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;if(this.salaryComponent.name=t.salaryName,this.salaryComponent.salaryAmount=t.amount,this.salaryComponent.comment=t.comment?t.comment:"",this.salaryComponent.payGradeId=this.paygrades.find((e=>e.id===t.payGrade?.id)),this.salaryComponent.payFrequencyId=this.payFrequencies.find((e=>e.id===t.payPeriod?.id)),this.salaryComponent.currencyId=this.currencies.find((e=>e.id===t.currencyType?.id)),null!==t.directDebit.id){this.includeDirectDeposit=!0,this.directDeposit.directDepositAccount=t.directDebit.account;const e=this.accountTypes.find((e=>e.id===t.directDebit.accountType));this.directDeposit.directDepositAccountType=e||{id:"OTHER",label:this.$t("pim.other")},this.accountType=0===e.length?t.directDebit.accountType:"",this.directDeposit.directDepositRoutingNumber=t.directDebit.routingNumber,this.directDeposit.directDepositAmount=t.directDebit.amount}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e=this.showOptionalAccountType?this.accountType:this.directDeposit.directDepositAccountType?.id;this.http.update(this.data.id,{salaryComponent:this.salaryComponent.name,salaryAmount:this.salaryComponent.salaryAmount,payGradeId:this.salaryComponent.payGradeId?.id,currencyId:this.salaryComponent.currencyId?.id,payFrequencyId:this.salaryComponent.payFrequencyId?.id,comment:this.salaryComponent.comment?this.salaryComponent.comment:null,addDirectDeposit:this.includeDirectDeposit,directDepositAccount:this.includeDirectDeposit?this.directDeposit.directDepositAccount:void 0,directDepositAccountType:this.includeDirectDeposit?e:void 0,directDepositAmount:this.includeDirectDeposit?this.directDeposit.directDepositAmount:void 0,directDepositRoutingNumber:this.includeDirectDeposit?this.directDeposit.directDepositRoutingNumber:void 0}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Sv=(0,r.c)(kv,[["render",wv],["__scopeId","data-v-1ce8046c"]]);var $v=Sv;const Dv=e=>e.map((e=>({id:e.id,name:e.salaryName,amount:e.amount,currency:e.currencyType?.name,frequency:e.payPeriod?.name,depositAmount:e.directDebit?.amount})));var Ev={components:{"profile-action-header":Yh,"edit-employee-layout":sg,"save-salary-component":bv,"edit-salary-component":$v,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},paygrades:{type:Array,default:()=>[]},payFrequencies:{type:Array,default:()=>[]},currencies:{type:Array,default:()=>[]},accountTypes:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/salary-components`),{showPaginator:o,currentPage:a,total:l,pages:n,pageSize:r,response:i,isLoading:d,execQuery:s}=Dt(t,{normalizer:Dv,toastNoRecords:!1});return{http:t,showPaginator:o,currentPage:a,isLoading:d,total:l,pages:n,pageSize:r,execQuery:s,items:i}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("pim.salary_component"),style:{flex:1}},{name:"amount",title:this.$t("general.amount"),style:{flex:1}},{name:"currency",title:this.$t("general.currency"),style:{flex:1}},{name:"frequency",title:this.$t("pim.pay_frequency"),style:{flex:1}},{name:"depositAmount",title:this.$t("pim.direct_deposit_amount"),style:{flex:1}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal},tableHeaders(){const e={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.delete("salary_details")&&(e.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),this.$can.update("salary_details")&&(e.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),Object.keys(e.cellConfig).length>0?this.headers.concat([e]):this.headers}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Tv=(0,r.c)(Ev,[["render",hv]]);var Iv=Tv;const Bv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},Lv={key:1,class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function Uv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("date-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("job-spec-download"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("oxd-switch-input"),v=(0,a.resolveComponent)("file-upload-input"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("profile-action-header"),b=(0,a.resolveComponent)("terminate-modal"),x=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(x,{screen:"job","employee-id":o.empNumber,"max-file-size":o.maxFileSize,"allowed-file-types":o.allowedFileTypes},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Bv,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.job_details")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.job.joinedDate,"onUpdate:modelValue":t[0]||(t[0]=e=>n.job.joinedDate=e),label:e.$t("general.joined_date"),rules:n.rules.joinedDate,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.job.jobTitleId,"onUpdate:modelValue":t[1]||(t[1]=e=>n.job.jobTitleId=e),type:"select",label:e.$t("general.job_title"),options:r.normalizedJobTitles,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(u,{key:`jobspec-${r.selectedJobTitleId}`,"resource-id":r.selectedJobTitleId},null,8,["resource-id"]))])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.job.jobCategoryId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.job.jobCategoryId=e),type:"select",label:e.$t("general.job_category"),options:o.jobCategories,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.job.subunitId,"onUpdate:modelValue":t[3]||(t[3]=e=>n.job.subunitId=e),type:"select",label:e.$t("general.sub_unit"),options:o.subunits,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.job.locationId,"onUpdate:modelValue":t[4]||(t[4]=e=>n.job.locationId=e),type:"select",label:e.$t("general.location"),options:o.locations,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.job.empStatusId,"onUpdate:modelValue":t[5]||(t[5]=e=>n.job.empStatusId=e),type:"select",label:e.$t("general.employment_status"),options:o.employmentStatuses,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","options","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{class:"user-form-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"user-form-header-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.include_employment_contract_details")),1)])),_:1}),(0,a.createVNode)(g,{modelValue:n.showContractDetails,"onUpdate:modelValue":t[6]||(t[6]=e=>n.showContractDetails=e)},null,8,["modelValue"])])),_:1}),n.showContractDetails?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contract.startDate,"onUpdate:modelValue":t[7]||(t[7]=e=>n.contract.startDate=e),label:e.$t("pim.contract_start_date"),rules:n.rules.startDate,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.contract.endDate,"onUpdate:modelValue":t[8]||(t[8]=e=>n.contract.endDate=e),label:e.$t("pim.contract_end_date"),rules:n.rules.endDate,disabled:!r.hasUpdatePermissions},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{newFile:n.contract.newAttachment,"onUpdate:newFile":t[9]||(t[9]=e=>n.contract.newAttachment=e),method:n.contract.method,"onUpdate:method":t[10]||(t[10]=e=>n.contract.method=e),label:e.$t("pim.contract_details"),"button-label":e.$t("general.browse"),file:n.contract.oldAttachment,rules:n.rules.contractAttachment,url:`pim/viewAttachment/empNumber/${o.empNumber}/attachId`,hint:e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize}),disabled:!r.hasUpdatePermissions},null,8,["newFile","method","label","button-label","file","rules","url","hint","disabled"])])),_:1})])),_:1})])),_:1})],64)):(0,a.createCommentVNode)("",!0),r.hasUpdatePermissions?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:1},[(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f)])),_:1})],64)):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","onSubmitValid"])]),r.hasUpdatePermissions&&!n.isLoading?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0})):(0,a.createCommentVNode)("",!0),r.hasUpdatePermissions&&!n.isLoading?((0,a.openBlock)(),(0,a.createElementBlock)("div",Lv,[(0,a.createVNode)(V,{"icon-name":"","display-type":r.terminationActionType,label:r.terminationActionLabel,title:r.terminationActionLabel,class:"--termination-button",onClick:r.onClickTerminate},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.employee_termination_activation"))+" ",1),n.termination&&n.termination.id?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,tag:"p",class:"orangehrm-terminate-date",onClick:r.openTerminateModal},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.terminated_on"))+": "+(0,a.toDisplayString)(r.terminationDate),1)])),_:1},8,["onClick"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["display-type","label","title","onClick"])])):(0,a.createCommentVNode)("",!0),n.showTerminateModal?((0,a.openBlock)(),(0,a.createBlock)(b,{key:2,"employee-id":o.empNumber,"termination-reasons":o.terminationReasons,"termination-id":n.termination.id,onClose:r.closeTerminateModal},null,8,["employee-id","termination-reasons","termination-id","onClose"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["employee-id","max-file-size","allowed-file-types"])}function Av(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("oxd-loading-spinner"),c=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createBlock)(c,{label:e.$t("general.job_specification")},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",{class:(0,a.normalizeClass)({"input-container":!0,"--disabled":!e.file.id})},[(0,a.createVNode)(i,{class:"input-container-filename",tag:"p",title:e.file.filename,onClick:l.downloadFile},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.file.id?e.file.filename:"Not Defined"),1)])),_:1},8,["title","onClick"]),!e.isLoading&&e.file.id?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"input-container-icon",name:"download",onClick:l.downloadFile},null,8,["onClick"])):(0,a.createCommentVNode)("",!0),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,class:"input-container-loader","with-container":!1})):(0,a.createCommentVNode)("",!0)],2)])),_:1},8,["label"])}var Pv={name:"JobSpecDownload",components:{"oxd-loading-spinner":q.OxdSpinner},props:{resourceId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/admin/job-titles/${e.resourceId}/specification`),o=(0,a.reactive)({isLoading:!1,file:{id:"",filename:"",fileType:"",fileSize:0}}),l=async()=>{o.isLoading=!0,t.request({method:"GET",validateStatus:e=>e>=200&&e<300||404==e}).then((({data:e})=>{o.file={...e.data}})).finally((()=>{o.isLoading=!1}))},n=()=>{if(!o.file.id)return;const e=`${window.appGlobal.baseUrl}/admin/viewJobSpecification/attachId/${o.file.id}`;window.open(e,"_blank")};return e.resourceId&&(0,a.onBeforeMount)(l),{...(0,a.toRefs)(o),downloadFile:n}}};const qv=(0,r.c)(Pv,[["render",Av],["__scopeId","data-v-18de38e2"]]);var Fv=qv;const Mv={class:"orangehrm-modal-header"};function zv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("date-input"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(f,{class:"orangehrm-dialog-modal","onUpdate:show":t[4]||(t[4]=e=>r.onCancel(!1))},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Mv,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.terminate_employment")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.termination.date,"onUpdate:modelValue":t[0]||(t[0]=e=>n.termination.date=e),label:e.$t("pim.termination_date"),rules:n.rules.date,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.termination.terminationReason,"onUpdate:modelValue":t[1]||(t[1]=e=>n.termination.terminationReason=e),type:"select",label:e.$t("pim.termination_reason"),rules:n.rules.terminationReason,options:o.terminationReasons,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.termination.note,"onUpdate:modelValue":t[2]||(t[2]=e=>n.termination.note=e),type:"textarea",label:e.$t("general.note"),placeholder:e.$t("general.type_here"),rules:n.rules.note},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:t[3]||(t[3]=e=>r.onCancel(!1))},null,8,["label"]),(0,a.createVNode)(h)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1})}const jv={terminationReason:null,date:"",note:null};var Rv={name:"TerminateModal",components:{"oxd-dialog":q.OxdDialog},props:{employeeId:{type:String,required:!0},terminationReasons:{type:Array,required:!0},terminationId:{type:Number,required:!1,default:null}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/terminations`),{userDateFormat:o}=R();return{http:t,userDateFormat:o}},data(){return{isLoading:!1,termination:{...jv},rules:{terminationReason:[Ht],date:[Ht,Yt(this.userDateFormat)],note:[Wt(250)]}}},beforeMount(){this.terminationId&&(this.isLoading=!0,this.http.get(this.terminationId).then((e=>{const{data:t}=e.data;this.termination.terminationReason=this.terminationReasons.find((e=>e.id===t.terminationReason?.id)),this.termination.date=t.date,this.termination.note=t.note})).finally((()=>{this.isLoading=!1})))},methods:{onSave(){this.isLoading=!0;const e={date:this.termination.date,note:this.termination.note,terminationReasonId:this.termination.terminationReason?.id};this.submitData(e,this.terminationId).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel(!0)}))},async submitData(e,t){return t?this.http.update(t,e):this.http.create(e)},onCancel(e){this.$emit("close",e)}}};const Ov=(0,r.c)(Rv,[["render",zv]]);var Gv=Ov;const Qv={joinedDate:"",jobTitleId:[],empStatusId:[],jobCategoryId:[],subunitId:[],locationId:[]},Hv={startDate:"",endDate:"",oldAttachment:null,newAttachment:null,method:"keepCurrent"};var Wv={components:{"edit-employee-layout":sg,"oxd-switch-input":q.OxdSwitchInput,"job-spec-download":Fv,"file-upload-input":Po,"profile-action-header":Yh,"terminate-modal":Gv},props:{empNumber:{type:String,required:!0},locations:{type:Array,default:()=>[]},jobTitles:{type:Array,default:()=>[]},jobCategories:{type:Array,default:()=>[]},subunits:{type:Array,default:()=>[]},employmentStatuses:{type:Array,default:()=>[]},terminationReasons:{type:Array,default:()=>[]},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/job-details`),{jsDateFormat:o,userDateFormat:a}=R(),{locale:l}=Le();return{http:t,locale:l,jsDateFormat:o,userDateFormat:a}},data(){return{isLoading:!1,showContractDetails:!1,job:{...Qv},contract:{...Hv},termination:null,showTerminateModal:!1,rules:{joinedDate:[Yt(this.userDateFormat)],startDate:[Yt(this.userDateFormat)],endDate:[Yt(this.userDateFormat),ro((()=>this.contract.startDate))],contractAttachment:[e=>"replaceCurrent"!=this.contract.method||Ht(e),po(this.allowedFileTypes),uo(this.maxFileSize)]}}},computed:{selectedJobTitleId(){const e=this.job.jobTitleId?.id;return e||0},terminationActionLabel(){return this.termination?.id?this.$t("pim.activate_employment"):this.$t("pim.terminate_employment")},terminationActionType(){return this.termination?.id?"ghost-success":"label-danger"},hasUpdatePermissions(){return this.$can.update("job_details")},normalizedJobTitles(){return this.jobTitles.map((e=>({id:e.id,label:e?.deleted?e.label+this.$t("general.deleted"):e.label})))},terminationDate(){return this.termination?.date?pe(ue(this.termination.date),this.jsDateFormat,{locale:this.locale}):null},formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{this.updateJobModel(e)})).then((()=>this.http.request({method:"GET",url:`/api/v2/pim/employees/${this.empNumber}/employment-contract`}))).then((e=>{this.updateContractModel(e)})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{...this.job,jobTitleId:this.job.jobTitleId?.id,jobCategoryId:this.job.jobCategoryId?.id,subunitId:this.job.subunitId?.id,empStatusId:this.job.empStatusId?.id,locationId:this.job.locationId?.id}}).then((e=>(this.updateJobModel(e),this.http.request({method:"PUT",url:`/api/v2/pim/employees/${this.empNumber}/employment-contract`,data:{startDate:this.contract.startDate,endDate:this.contract.endDate,currentContractAttachment:this.contract.oldAttachment?this.contract.method:void 0,contractAttachment:this.contract.newAttachment?this.contract.newAttachment:void 0}})))).then((e=>(e&&this.updateContractModel(e),this.$toast.updateSuccess()))).then((()=>{this.isLoading=!1}))},onClickTerminate(){this.termination?.id?(this.isLoading=!0,this.http.request({method:"DELETE",url:`/api/v2/pim/employees/${this.empNumber}/terminations`}).then((()=>this.$toast.updateSuccess())).then((()=>{location.reload()}))):this.openTerminateModal()},openTerminateModal(){this.showTerminateModal=!0},closeTerminateModal(e){this.showTerminateModal=!1,e&&location.reload()},updateContractModel(e){const{data:t}=e.data;this.contract.startDate=t.startDate,this.contract.endDate=t.endDate,this.contract.oldAttachment=t.contractAttachment?.id?t.contractAttachment:null,this.contract.newAttachment=null,this.contract.method="keepCurrent",t.startDate||t.endDate||t.contractAttachment?.id?this.showContractDetails=!0:this.showContractDetails=!1},updateJobModel(e){const{data:t}=e.data;this.job.joinedDate=t.joinedDate,this.job.jobTitleId=this.normalizedJobTitles.find((e=>e.id===t.jobTitle?.id)),this.job.jobCategoryId=this.jobCategories.find((e=>e.id===t.jobCategory?.id)),this.job.subunitId=this.subunits.find((e=>e.id===t.subunit?.id)),this.job.empStatusId=this.employmentStatuses.find((e=>e.id===t.empStatus?.id)),this.job.locationId=this.locations.find((e=>e.id===t.location?.id)),this.termination=t.employeeTerminationRecord}}};const Yv=(0,r.c)(Wv,[["render",Uv],["__scopeId","data-v-4fbf300e"]]);var Jv=Yv;const Xv={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function Kv(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-work-experience"),c=(0,a.resolveComponent)("employee-education"),m=(0,a.resolveComponent)("employee-skills"),u=(0,a.resolveComponent)("employee-languages"),p=(0,a.resolveComponent)("employee-license"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"qualifications"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Xv,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.qualifications")),1)])),_:1}),(0,a.createVNode)(d)]),(0,a.createVNode)(s,{"employee-id":o.empNumber},null,8,["employee-id"]),(0,a.createVNode)(c,{"employee-id":o.empNumber},null,8,["employee-id"]),(0,a.createVNode)(m,{"employee-id":o.empNumber},null,8,["employee-id"]),(0,a.createVNode)(u,{"employee-id":o.empNumber,fluencies:o.fluencies,competencies:o.competencies},null,8,["employee-id","fluencies","competencies"]),(0,a.createVNode)(p,{"employee-id":o.empNumber},null,8,["employee-id"])])),_:1},8,["employee-id"])}const Zv={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},ef={class:"orangehrm-container"},tf={key:2,class:"orangehrm-bottom-container"};function of(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-skill"),d=(0,a.resolveComponent)("edit-skill"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,api:l.skillsEndpoint,onClose:r.onSaveModalClose},null,8,["http","api","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Zv,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.skills")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",ef,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,disabled:r.isDisabled,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading","disabled"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",tf,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const af={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function lf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("qualification-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",af,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_skill")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.skillId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.skill.skillId=e),label:e.$t("pim.skill"),rules:n.rules.skillId,api:o.api,required:""},null,8,["modelValue","label","rules","api"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.skill.yearsOfExperience,"onUpdate:modelValue":t[1]||(t[1]=e=>n.skill.yearsOfExperience=e),label:e.$t("pim.years_of_experience"),rules:n.rules.yearsOfExperience},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.skill.comments,"onUpdate:modelValue":t[2]||(t[2]=e=>n.skill.comments=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comments},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}function nf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",options:l.options},null,8,["options"])}var rf={name:"QualificationDropdown",props:{api:{type:String,required:!0}},setup(e){const t=(0,a.ref)([]),o=new P(window.appGlobal.baseUrl,e.api);return(0,a.onBeforeMount)((()=>{o.getAll({limit:0}).then((({data:e})=>{t.value=e.data.map((e=>({id:e.id,label:e.name})))}))})),{options:t}}};const df=(0,r.c)(rf,[["render",nf]]);var sf=df;const cf={yearsOfExperience:"",comments:"",skillId:null};var mf={name:"SaveSkill",components:{"qualification-dropdown":sf},props:{http:{type:Object,required:!0},api:{type:String,required:!0}},emits:["close"],data(){return{isLoading:!1,skill:{...cf},rules:{skillId:[Ht],yearsOfExperience:[Zt,Kt(100)],comments:[Wt(100)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({skillId:this.skill.skillId?.id,yearsOfExperience:parseInt(this.skill.yearsOfExperience),comments:""!==this.skill.comments?this.skill.comments:""}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const uf=(0,r.c)(mf,[["render",lf]]);var pf=uf;const hf={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function gf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hf,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_skill")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.skill.name=e),label:e.$t("pim.skill"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.yearsOfExperience,"onUpdate:modelValue":t[1]||(t[1]=e=>n.skill.yearsOfExperience=e),label:e.$t("pim.years_of_experience"),rules:n.rules.yearsOfExperience},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.skill.comments,"onUpdate:modelValue":t[2]||(t[2]=e=>n.skill.comments=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comments},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const vf={yearsOfExperience:0,comments:"",name:""};var ff={name:"EditSkill",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],data(){return{isLoading:!1,skill:{...vf},rules:{yearsOfExperience:[Zt,Kt(100)],comments:[Wt(100)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.skill.name=t.skill.name,this.skill.comments=t.comments,this.skill.yearsOfExperience=t.yearsOfExperience})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{yearsOfExperience:parseInt(this.skill.yearsOfExperience),comments:""!==this.skill.comments?this.skill.comments:""}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const yf=(0,r.c)(ff,[["render",gf]]);var Cf=yf;const Vf=e=>e.map((e=>({id:e.skill.id,name:e.skill.name,yearsOfExperience:e.yearsOfExperience,comments:e.comments})));var bf={name:"EmployeeSkills",components:{"profile-action-header":Yh,"save-skill":pf,"edit-skill":Cf,"delete-confirmation":At},props:{employeeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/skills`),o=`/api/v2/pim/employees/${e.employeeId}/skills/allowed`,{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(t,{normalizer:Vf,toastNoRecords:!1});return{http:t,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d,skillsEndpoint:o}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("pim.skill"),style:{flex:1}},{name:"yearsOfExperience",title:this.$t("pim.years_of_experience"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-basis":"10em"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const xf=(0,r.c)(bf,[["render",of]]);var wf=xf;const Nf={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},_f={class:"orangehrm-container"},kf={key:2,class:"orangehrm-bottom-container"};function Sf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-education"),d=(0,a.resolveComponent)("edit-education"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,api:l.educationEndpoint,onClose:r.onSaveModalClose},null,8,["http","api","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Nf,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.education")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",_f,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,disabled:r.isDisabled,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading","disabled"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",kf,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const $f={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function Df(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("qualification-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",$f,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_education")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.educationId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.education.educationId=e),label:e.$t("general.level"),rules:n.rules.educationId,api:o.api,required:""},null,8,["modelValue","label","rules","api"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.education.institute,"onUpdate:modelValue":t[1]||(t[1]=e=>n.education.institute=e),label:e.$t("pim.institute"),rules:n.rules.institute},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.education.major,"onUpdate:modelValue":t[2]||(t[2]=e=>n.education.major=e),label:e.$t("pim.major_specialization"),rules:n.rules.major},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.education.year,"onUpdate:modelValue":t[3]||(t[3]=e=>n.education.year=e),label:e.$t("general.year"),rules:n.rules.year},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.education.score,"onUpdate:modelValue":t[4]||(t[4]=e=>n.education.score=e),label:e.$t("pim.gpa_score"),rules:n.rules.score},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.education.startDate,"onUpdate:modelValue":t[5]||(t[5]=e=>n.education.startDate=e),label:e.$t("general.start_date"),rules:n.rules.startDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.education.endDate,"onUpdate:modelValue":t[6]||(t[6]=e=>n.education.endDate=e),label:e.$t("general.end_date"),rules:n.rules.endDate},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const Ef={educationId:null,institute:"",major:"",year:"",score:"",startDate:"",endDate:""};var Tf={name:"SaveEducation",components:{"qualification-dropdown":sf},props:{http:{type:Object,required:!0},api:{type:String,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,education:{...Ef},rules:{educationId:[Ht],institute:[Wt(100)],major:[Wt(100)],score:[Wt(25)],year:[Wt(4),Zt],startDate:[Yt(this.userDateFormat)],endDate:[Yt(this.userDateFormat),ro((()=>this.education.startDate))]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.education,educationId:this.education.educationId?.id,year:parseInt(this.education.year)}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const If=(0,r.c)(Tf,[["render",Df]]);var Bf=If;const Lf={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function Uf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Lf,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_education")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.education.name=e),label:e.$t("general.level"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.institute,"onUpdate:modelValue":t[1]||(t[1]=e=>n.education.institute=e),label:e.$t("pim.institute"),rules:n.rules.institute},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.major,"onUpdate:modelValue":t[2]||(t[2]=e=>n.education.major=e),label:e.$t("pim.major_specialization"),rules:n.rules.major},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.year,"onUpdate:modelValue":t[3]||(t[3]=e=>n.education.year=e),label:e.$t("general.year"),rules:n.rules.year},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.education.score,"onUpdate:modelValue":t[4]||(t[4]=e=>n.education.score=e),label:e.$t("pim.gpa_score"),rules:n.rules.score},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.education.startDate,"onUpdate:modelValue":t[5]||(t[5]=e=>n.education.startDate=e),label:e.$t("general.start_date"),rules:n.rules.startDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.education.endDate,"onUpdate:modelValue":t[6]||(t[6]=e=>n.education.endDate=e),label:e.$t("general.end_date"),rules:n.rules.endDate},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const Af={name:"",institute:"",major:"",year:"",score:"",startDate:"",endDate:""};var Pf={name:"EditEducation",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,education:{...Af},rules:{institute:[Wt(100)],major:[Wt(100)],score:[Wt(25)],year:[Wt(4),Zt],startDate:[Yt(this.userDateFormat)],endDate:[Yt(this.userDateFormat),ro((()=>this.education.startDate))]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.education.name=t.education.name,this.education.institute=t.institute,this.education.major=t.major,this.education.year=t.year?t.year:"",this.education.score=t.score,this.education.startDate=t.startDate?t.startDate:"",this.education.endDate=t.endDate?t.endDate:""})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{institute:this.education.institute,major:this.education.major,year:parseInt(this.education.year),score:this.education.score,startDate:this.education.startDate,endDate:this.education.endDate}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const qf=(0,r.c)(Pf,[["render",Uf]]);var Ff=qf;const Mf=e=>e.map((e=>({id:e.id,level:e.education.name,year:e.year,score:e.score})));var zf={name:"EmployeeEducation",components:{"profile-action-header":Yh,"save-education":Bf,"edit-education":Ff,"delete-confirmation":At},props:{employeeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/educations`),o="/api/v2/admin/educations",{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(t,{normalizer:Mf,toastNoRecords:!1});return{http:t,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d,educationEndpoint:o}},data(){return{headers:[{name:"level",slot:"title",title:this.$t("general.level"),style:{flex:1}},{name:"year",title:this.$t("general.year"),style:{flex:1}},{name:"score",title:this.$t("pim.gpa_score"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-basis":"10em"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const jf=(0,r.c)(zf,[["render",Sf]]);var Rf=jf;const Of={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},Gf={class:"orangehrm-container"},Qf={key:2,class:"orangehrm-bottom-container"};function Hf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-language"),d=(0,a.resolveComponent)("edit-language"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,api:l.languagesEndpoint,fluencies:o.fluencies,competencies:o.competencies,onClose:r.onSaveModalClose},null,8,["http","api","fluencies","competencies","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,"employee-id":o.employeeId,competencies:o.competencies,onClose:r.onEditModalClose},null,8,["http","data","employee-id","competencies","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Of,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.languages")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Gf,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,disabled:r.isDisabled,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","disabled","loading"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",Qf,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const Wf={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function Yf(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wf,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_language")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(s,{key:r.allowedLanguages,modelValue:n.language.languageId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.language.languageId=e),type:"select",label:e.$t("general.language"),options:r.allowedLanguages,rules:n.rules.languageId,clear:!1,required:""},null,8,["modelValue","label","options","rules"]))])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(s,{key:r.allowedFluencies,modelValue:n.language.fluencyId,"onUpdate:modelValue":t[1]||(t[1]=e=>n.language.fluencyId=e),type:"select",label:e.$t("pim.fluency"),options:r.allowedFluencies,rules:n.rules.fluencyId,clear:!1,required:""},null,8,["modelValue","label","options","rules"]))])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.competencyId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.language.competencyId=e),type:"select",label:e.$t("pim.competency"),options:o.competencies,rules:n.rules.competencyId,clear:!1,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.comment,"onUpdate:modelValue":t[3]||(t[3]=e=>n.language.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const Jf={languageId:null,fluencyId:null,competencyId:null,comment:""};var Xf={name:"SaveLanguage",props:{http:{type:Object,required:!0},fluencies:{type:Array,required:!0},competencies:{type:Array,required:!0},api:{type:String,required:!0}},emits:["close"],data(){return{isLoading:!1,language:{...Jf},languages:[],rules:{languageId:[Ht],fluencyId:[Ht],competencyId:[Ht],comment:[Wt(100)]}}},computed:{allowedLanguages(){return this.languages},allowedFluencies(){const e=this.languages.findIndex((e=>e.id===this.language.languageId?.id));if(e>-1){const t=this.languages[e];return this.fluencies.filter((e=>t.allowedFluencyIds.includes(e.id)))}return[]}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:this.api,params:{limit:0}}).then((e=>{const{data:t}=e.data;Array.isArray(t)&&(this.languages=t.map((e=>({id:e.id,label:e.name,allowedFluencyIds:e.allowedFluencyIds?e.allowedFluencyIds:[]}))))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({languageId:this.language.languageId?.id,fluencyId:this.language.fluencyId?.id,competencyId:this.language.competencyId?.id,comment:this.language.comment}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Kf=(0,r.c)(Xf,[["render",Yf]]);var Zf=Kf;const ey={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function ty(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ey,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_language")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.language.name=e),label:e.$t("general.language"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.fluency,"onUpdate:modelValue":t[1]||(t[1]=e=>n.language.fluency=e),label:e.$t("pim.fluency"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.competencyId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.language.competencyId=e),type:"select",label:e.$t("pim.competency"),options:o.competencies,rules:n.rules.competencyId,clear:!1,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.language.comment,"onUpdate:modelValue":t[3]||(t[3]=e=>n.language.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const oy={name:"",fluency:"",competencyId:null,comment:""};var ay={name:"EditLanguage",props:{http:{type:Object,required:!0},employeeId:{type:String,required:!0},data:{type:Object,required:!0},competencies:{type:Array,required:!0}},emits:["close"],data(){return{isLoading:!1,language:{...oy},rules:{competencyId:[Ht],comment:[Wt(100)]}}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:`/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`}).then((e=>{const{data:t}=e.data;this.language.name=t.language.name,this.language.fluency=t.fluency.name,this.language.comment=t.comment?t.comment:"",this.language.competencyId=this.competencies.find((e=>e.id===t.competency?.id))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",url:`/api/v2/pim/employees/${this.employeeId}/languages/${this.data.languageId}/fluencies/${this.data.fluencyId}`,data:{competencyId:this.language.competencyId.id,comment:this.language.comment}}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const ly=(0,r.c)(ay,[["render",ty]]);var ny=ly;const ry=e=>e.map((e=>({language:e.language.name,languageId:e.language.id,fluency:e.fluency.name,fluencyId:e.fluency.id,competency:e.competency.name,comments:e.comment})));var iy={name:"EmployeeLanguages",components:{"profile-action-header":Yh,"save-language":Zf,"edit-language":ny,"delete-confirmation":At},props:{employeeId:{type:String,required:!0},fluencies:{type:Array,required:!0},competencies:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/languages`),o=`/api/v2/pim/employees/${e.employeeId}/languages/allowed`,{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(t,{normalizer:ry,toastNoRecords:!1});return{http:t,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d,languagesEndpoint:o}},data(){return{headers:[{name:"language",slot:"title",title:this.$t("general.language"),style:{flex:1}},{name:"fluency",title:this.$t("pim.fluency"),style:{flex:1}},{name:"competency",title:this.$t("pim.competency"),style:{flex:1}},{name:"comments",title:this.$t("general.comments"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-basis":"10em"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>({languageId:this.items?.data[e].languageId,fluencyId:this.items?.data[e].fluencyId})));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([{languageId:e.languageId,fluencyId:e.fluencyId}])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const dy=(0,r.c)(iy,[["render",Hf]]);var sy=dy;const cy={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},my={class:"orangehrm-container"},uy={key:2,class:"orangehrm-bottom-container"};function py(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-work-experience"),d=(0,a.resolveComponent)("edit-work-experience"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,onClose:r.onSaveModalClose},null,8,["http","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",cy,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.work_experience")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",my,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,disabled:r.isDisabled,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading","disabled"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",uy,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const hy={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function gy(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hy,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_work_experience")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.company,"onUpdate:modelValue":t[0]||(t[0]=e=>n.workExperience.company=e),label:e.$t("pim.company"),rules:n.rules.company,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.workExperience.jobTitle=e),label:e.$t("general.job_title"),rules:n.rules.jobTitle,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workExperience.fromDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.workExperience.fromDate=e),label:e.$t("general.from"),rules:n.rules.fromDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workExperience.toDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.workExperience.toDate=e),label:e.$t("general.to"),rules:n.rules.toDate},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.comment,"onUpdate:modelValue":t[4]||(t[4]=e=>n.workExperience.comment=e),type:"textarea",label:e.$t("general.comment"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const vy={company:"",jobTitle:"",fromDate:"",toDate:"",comment:""};var fy={name:"SaveWorkExperience",props:{http:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,workExperience:{...vy},rules:{company:[Ht,Wt(100)],jobTitle:[Ht,Wt(100)],fromDate:[Yt(this.userDateFormat)],toDate:[Yt(this.userDateFormat),ro((()=>this.workExperience.fromDate),this.$t("general.to_date_should_be_after_from_date"))],comment:[Wt(200)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.workExperience}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const yy=(0,r.c)(fy,[["render",gy]]);var Cy=yy;const Vy={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function by(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Vy,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" Edit Work Experience ")])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.company,"onUpdate:modelValue":t[0]||(t[0]=e=>n.workExperience.company=e),label:e.$t("pim.company"),rules:n.rules.company,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.workExperience.jobTitle=e),label:e.$t("general.job_title"),rules:n.rules.jobTitle,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workExperience.fromDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.workExperience.fromDate=e),label:e.$t("general.from"),rules:n.rules.fromDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.workExperience.toDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.workExperience.toDate=e),label:e.$t("general.to"),rules:n.rules.toDate},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workExperience.comment,"onUpdate:modelValue":t[4]||(t[4]=e=>n.workExperience.comment=e),type:"textarea",label:e.$t("general.comment"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const xy={company:"",jobTitle:"",fromDate:"",toDate:"",comment:""};var wy={name:"EditWorkExperience",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,workExperience:{...xy},rules:{company:[Ht,Wt(100)],jobTitle:[Ht,Wt(100)],fromDate:[Yt(this.userDateFormat)],toDate:[Yt(this.userDateFormat),ro((()=>this.workExperience.fromDate),this.$t("general.to_date_should_be_after_from_date"))],comment:[Wt(200)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.workExperience={...t}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.workExperience}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Ny=(0,r.c)(wy,[["render",by]]);var _y=Ny,ky={name:"EmployeeWorkExperience",components:{"profile-action-header":Yh,"save-work-experience":Cy,"edit-work-experience":_y,"delete-confirmation":At},props:{employeeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/work-experiences`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>({...e,fromDate:pe(ue(e.fromDate),o,{locale:a}),toDate:pe(ue(e.toDate),o,{locale:a})}))),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(t,{toastNoRecords:!1,normalizer:l});return{http:t,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"company",slot:"title",title:this.$t("pim.company"),style:{flex:1}},{name:"jobTitle",title:this.$t("general.job_title"),style:{flex:1}},{name:"fromDate",title:this.$t("general.from"),style:{flex:1}},{name:"toDate",title:this.$t("general.to"),style:{flex:1}},{name:"comment",title:this.$t("general.comment"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-basis":"10em"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Sy=(0,r.c)(ky,[["render",py]]);var $y=Sy;const Dy={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},Ey={class:"orangehrm-container"},Ty={key:2,class:"orangehrm-bottom-container"};function Iy(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-license"),d=(0,a.resolveComponent)("edit-license"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,api:l.licenceEndpoint,onClose:r.onSaveModalClose},null,8,["http","api","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Dy,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.license")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Ey,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,disabled:r.isDisabled,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading","disabled"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",Ty,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const By={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function Ly(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("qualification-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",By,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_license")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.license.licenseId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.license.licenseId=e),label:e.$t("pim.license_type"),rules:n.rules.licenseId,api:o.api,required:""},null,8,["modelValue","label","rules","api"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.license.licenseNo,"onUpdate:modelValue":t[1]||(t[1]=e=>n.license.licenseNo=e),label:e.$t("pim.license_number"),rules:n.rules.licenseNo},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.license.issuedDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.license.issuedDate=e),label:e.$t("pim.issued_date"),rules:n.rules.issuedDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.license.expiryDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.license.expiryDate=e),label:e.$t("general.expiry_date"),rules:n.rules.expiryDate,years:n.yearArray},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const Uy=function(e=100,t=(new Date).getFullYear()){const o=new Array(e);for(let a=0;a<o.length;a++)o[a]=t-Math.floor(e/2)+a;return o},Ay={licenseId:null,licenseNo:"",issuedDate:"",expiryDate:""};var Py={name:"SaveLicense",components:{"qualification-dropdown":sf},props:{http:{type:Object,required:!0},api:{type:String,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,license:{...Ay},yearArray:[...Uy()],rules:{licenseId:[Ht],licenseNo:[Wt(50)],issuedDate:[Yt(this.userDateFormat)],expiryDate:[Yt(this.userDateFormat),ro((()=>this.license.issuedDate),this.$t("pim.expiry_date_should_be_after_issued_date"))]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.license,licenseId:this.license.licenseId?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const qy=(0,r.c)(Py,[["render",Ly]]);var Fy=qy;const My={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function zy(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",My,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_license")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.license.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.license.name=e),label:e.$t("pim.license_type"),required:"",readonly:"",disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.license.licenseNo,"onUpdate:modelValue":t[1]||(t[1]=e=>n.license.licenseNo=e),label:e.$t("pim.license_number"),rules:n.rules.licenseNo},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.license.issuedDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.license.issuedDate=e),label:e.$t("pim.issued_date"),rules:n.rules.issuedDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.license.expiryDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.license.expiryDate=e),label:e.$t("general.expiry_date"),rules:n.rules.expiryDate,years:n.yearArray},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const jy={name:"",licenseNo:"",issuedDate:"",expiryDate:""};var Ry={name:"EditLicense",props:{http:{type:Object,required:!0},data:{type:Object,required:!0}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,license:{...jy},yearArray:[...Uy()],rules:{licenseNo:[Wt(50)],issuedDate:[Yt(this.userDateFormat)],expiryDate:[Yt(this.userDateFormat),ro((()=>this.license.issuedDate),this.$t("pim.expiry_date_should_be_after_issued_date"))]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.license.name=t.license.name,this.license.licenseNo=t.licenseNo?t.licenseNo:"",this.license.issuedDate=t.issuedDate,this.license.expiryDate=t.expiryDate})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{licenseNo:this.license.licenseNo,issuedDate:this.license.issuedDate,expiryDate:this.license.expiryDate}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Oy=(0,r.c)(Ry,[["render",zy]]);var Gy=Oy,Qy={name:"EmployeeLicense",components:{"profile-action-header":Yh,"save-license":Fy,"edit-license":Gy,"delete-confirmation":At},props:{employeeId:{type:String,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.employeeId}/licenses`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=`/api/v2/pim/employees/${e.employeeId}/licenses/allowed`,n=e=>e.map((e=>({id:e.license.id,type:e.license.name,licenseNo:e.licenseNo,issuedDate:pe(ue(e.issuedDate),o,{locale:a}),expiryDate:pe(ue(e.expiryDate),o,{locale:a})}))),{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(t,{normalizer:n,toastNoRecords:!1});return{http:t,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m,licenceEndpoint:l}},data(){return{headers:[{name:"type",slot:"title",title:this.$t("pim.license_type"),style:{flex:1}},{name:"issuedDate",title:this.$t("pim.issued_date"),style:{flex:1}},{name:"expiryDate",title:this.$t("general.expiry_date"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-basis":"10em"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const Hy=(0,r.c)(Qy,[["render",Iy]]);var Wy=Hy,Yy={components:{"edit-employee-layout":sg,"employee-skills":wf,"employee-education":Rf,"employee-languages":sy,"employee-work-experience":$y,"employee-license":Wy},props:{empNumber:{type:String,required:!0},fluencies:{type:Array,required:!0},competencies:{type:Array,required:!0}}};const Jy=(0,r.c)(Yy,[["render",Kv]]);var Xy=Jy;const Ky={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},Zy={class:"orangehrm-container"},eC={class:"orangehrm-bottom-container"};function tC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-immigration"),d=(0,a.resolveComponent)("edit-immigration"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"immigration"},{default:(0,a.withCtx)((()=>[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,countries:o.countries,onClose:r.onSaveModalClose},null,8,["http","countries","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,countries:o.countries,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","countries","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",Ky,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_immigration_records")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Zy,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","disabled","loading"])]),(0,a.createElementVNode)("div",eC,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])),_:1},8,["employee-id"])}const oC={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function aC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-input-group"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",oC,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_immigration")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{label:e.$t("pim.document"),classes:{wrapper:"--gender-grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.type,"onUpdate:modelValue":t[0]||(t[0]=e=>n.immigration.type=e),type:"radio","option-label":e.$t("pim.passport"),value:"1"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.immigration.type,"onUpdate:modelValue":t[1]||(t[1]=e=>n.immigration.type=e),type:"radio","option-label":e.$t("pim.visa"),value:"2"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.number,"onUpdate:modelValue":t[2]||(t[2]=e=>n.immigration.number=e),label:e.$t("pim.number"),rules:n.rules.number,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.issuedDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.immigration.issuedDate=e),label:e.$t("pim.issued_date"),rules:n.rules.issuedDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.expiryDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.immigration.expiryDate=e),label:e.$t("general.expiry_date"),years:n.yearArray,rules:n.rules.expiryDate},null,8,["modelValue","label","years","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.status,"onUpdate:modelValue":t[5]||(t[5]=e=>n.immigration.status=e),label:e.$t("pim.eligible_status"),rules:n.rules.status},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.countryCode,"onUpdate:modelValue":t[6]||(t[6]=e=>n.immigration.countryCode=e),type:"select",label:e.$t("pim.issued_by"),options:o.countries},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.reviewDate,"onUpdate:modelValue":t[7]||(t[7]=e=>n.immigration.reviewDate=e),label:e.$t("pim.eligible_review_date"),rules:n.rules.reviewDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.comment,"onUpdate:modelValue":t[8]||(t[8]=e=>n.immigration.comment=e),type:"textarea",label:e.$t("general.comments"),placeholder:e.$t("general.type_comments_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const lC={number:"",issuedDate:"",expiryDate:"",type:1,status:"",reviewDate:"",countryCode:null,comment:""};var nC={name:"SaveImmigration",props:{http:{type:Object,required:!0},countries:{type:Array,default:()=>[]}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,immigration:{...lC},yearArray:[...Uy()],rules:{number:[Ht,Wt(30)],expiryDate:[Yt(this.userDateFormat),ro((()=>this.immigration.issuedDate),this.$t("pim.expiry_date_should_be_after_issued_date"))],status:[Wt(30)],issuedDate:[Yt(this.userDateFormat)],reviewDate:[Yt(this.userDateFormat)],comment:[Wt(250)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.immigration,countryCode:this.immigration.countryCode?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.immigration={...lC},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const rC=(0,r.c)(nC,[["render",aC]]);var iC=rC;const dC={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function sC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-input-group"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",dC,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_immigration")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{label:"Document",classes:n.immigrationTypeClasses},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.type,"onUpdate:modelValue":t[0]||(t[0]=e=>n.immigration.type=e),type:"radio","option-label":e.$t("pim.passport"),value:"1"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.immigration.type,"onUpdate:modelValue":t[1]||(t[1]=e=>n.immigration.type=e),type:"radio","option-label":e.$t("pim.visa"),value:"2"},null,8,["modelValue","option-label"])])),_:1},8,["classes"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.number,"onUpdate:modelValue":t[2]||(t[2]=e=>n.immigration.number=e),label:e.$t("pim.number"),rules:n.rules.number,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.issuedDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.immigration.issuedDate=e),label:e.$t("pim.issued_date"),rules:n.rules.issuedDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.expiryDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.immigration.expiryDate=e),label:e.$t("general.expiry_date"),years:n.yearArray,rules:n.rules.expiryDate},null,8,["modelValue","label","years","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.status,"onUpdate:modelValue":t[5]||(t[5]=e=>n.immigration.status=e),label:e.$t("pim.eligible_status"),rules:n.rules.status},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.countryCode,"onUpdate:modelValue":t[6]||(t[6]=e=>n.immigration.countryCode=e),type:"select",label:e.$t("pim.issued_by"),options:o.countries},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.immigration.reviewDate,"onUpdate:modelValue":t[7]||(t[7]=e=>n.immigration.reviewDate=e),label:e.$t("pim.eligible_review_date"),rules:n.rules.reviewDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.immigration.comment,"onUpdate:modelValue":t[8]||(t[8]=e=>n.immigration.comment=e),type:"textarea",label:e.$t("general.comments"),placeholder:e.$t("general.type_comments_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const cC={number:"",issuedDate:"",expiryDate:"",type:1,status:"",reviewDate:"",countryCode:null,comment:""};var mC={name:"EditImmigration",props:{http:{type:Object,required:!0},data:{type:Object,required:!0},countries:{type:Array,default:()=>[]}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,immigration:{...cC},yearArray:[...Uy()],rules:{number:[Ht,Wt(30)],expiryDate:[Yt(this.userDateFormat),ro((()=>this.immigration.issuedDate),this.$t("pim.expiry_date_should_be_after_issued_date"))],status:[Wt(30)],issuedDate:[Yt(this.userDateFormat)],reviewDate:[Yt(this.userDateFormat)],comment:[Wt(250)]},immigrationTypeClasses:{wrapper:"--gender-grouped-field",label:{"oxd-input-field-required":!0}}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.immigration={...cC,...t},this.immigration.countryCode=this.countries.find((e=>e.id===t.country?.code))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{number:this.immigration.number,issuedDate:this.immigration.issuedDate,expiryDate:this.immigration.expiryDate,type:this.immigration.type,status:this.immigration.status,reviewDate:this.immigration.reviewDate,comment:this.immigration.comment,countryCode:this.immigration.countryCode?.id}).then((()=>this.$toast.updateSuccess())).then((()=>{this.immigration={...cC},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const uC=(0,r.c)(mC,[["render",sC]]);var pC=uC,hC={components:{"profile-action-header":Yh,"edit-employee-layout":sg,"save-immigration":iC,"edit-immigration":pC,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},countries:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/immigrations`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>({id:e.id,type:1==e.type?"Passport":"VISA",number:e.number,countryCode:e.country.code,countryName:e.country.name,issuedDate:pe(ue(e.issuedDate),o,{locale:a}),expiryDate:pe(ue(e.expiryDate),o,{locale:a})}))),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"type",slot:"title",title:this.$t("pim.document"),style:{flex:1}},{name:"number",title:this.$t("pim.number"),style:{flex:1}},{name:"countryName",title:this.$t("pim.issued_by"),style:{flex:1}},{name:"issuedDate",title:this.$t("pim.issued_date"),style:{flex:1}},{name:"expiryDate",title:this.$t("general.expiry_date"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const gC=(0,r.c)(hC,[["render",tC],["__scopeId","data-v-2747b3a5"]]);var vC=gC;const fC={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function yC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-supervisors"),c=(0,a.resolveComponent)("employee-subordinates"),m=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(m,{"employee-id":o.empNumber,screen:"report-to"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",fC,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.report_to")),1)])),_:1}),(0,a.createVNode)(d)]),(0,a.createVNode)(s,{"emp-number":o.empNumber,"reporting-methods":o.reportingMethods},null,8,["emp-number","reporting-methods"]),(0,a.createVNode)(c,{"emp-number":o.empNumber,"reporting-methods":o.reportingMethods},null,8,["emp-number","reporting-methods"])])),_:1},8,["employee-id"])}const CC={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},VC={class:"orangehrm-container"},bC={key:2,class:"orangehrm-bottom-container"};function xC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-employee-report-to"),d=(0,a.resolveComponent)("edit-employee-report-to"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,"reporting-methods":o.reportingMethods,type:"Supervisor","emp-number":o.empNumber,onClose:r.onSaveModalClose},null,8,["http","reporting-methods","emp-number","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,"emp-number":o.empNumber,data:n.editModalState,type:"Supervisor",api:l.supervisorEndpoint,"reporting-methods":o.reportingMethods,onClose:r.onEditModalClose},null,8,["http","emp-number","data","api","reporting-methods","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",CC,[(0,a.createVNode)(s,{"action-button-shown":e.$can.create("supervisor"),onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_supervisors")),1)])),_:1},8,["action-button-shown","onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",VC,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:r.tableHeaders,items:l.items?.data,selectable:e.$can.delete("supervisor"),disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","disabled","loading"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",bC,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}const wC={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function NC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("report-to-employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",wC,["Supervisor"===o.type?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_supervisor")),1)])),_:1})):(0,a.createCommentVNode)("",!0),"Subordinate"===o.type?((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_subordinate")),1)])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.reportTo.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.reportTo.employee=e),rules:n.rules.employee,api:l.api,required:""},null,8,["modelValue","rules","api"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.reportTo.reportingMethod,"onUpdate:modelValue":t[1]||(t[1]=e=>n.reportTo.reportingMethod=e),type:"select",label:e.$t("pim.reporting_method"),rules:n.rules.reportingMethod,options:o.reportingMethods,required:""},null,8,["modelValue","label","rules","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:"Cancel",onClick:r.onCancel},null,8,["onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const _C={key:0,class:"past-employee-tag"};function kC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("general.name"),clear:!1,"create-options":r.loadEmployees},{afterSelected:(0,a.withCtx)((({data:t})=>[t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.past_employee")),1)],64)):(0,a.createCommentVNode)("",!0)])),option:(0,a.withCtx)((({data:t})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(t.label),1),t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)("div",_C,(0,a.toDisplayString)(e.$t("general.past_employee")),1)):(0,a.createCommentVNode)("",!0)])),_:1},8,["label","create-options"])}var SC={name:"ReportToEmployeeAutocomplete",props:{api:{type:String,required:!0},params:{type:Object,default:()=>({})}},setup(e){const t=new P(window.appGlobal.baseUrl,e.api);return{http:t}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()&&e.length<100?this.http.getAll({nameOrId:e.trim(),...this.params}).then((({data:e})=>{t(e.data.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const $C=(0,r.c)(SC,[["render",kC]]);var DC=$C;const EC={employee:null,reportingMethod:null};var TC={name:"SaveEmployeeReportTo",components:{"report-to-employee-autocomplete":DC},props:{http:{type:Object,required:!0},reportingMethods:{type:Array,required:!0},type:{type:String,required:!0},empNumber:{type:String,required:!0}},emits:["close"],setup(e){const t=`/api/v2/pim/employees/${e.empNumber}/report-to/allowed`;return{api:t}},data(){return{isLoading:!1,reportTo:{...EC},rules:{employee:[Ht,Wt(100),So],reportingMethod:[Ht]}}},methods:{onSave(){this.isLoading=!0,this.http.create({empNumber:this.reportTo.employee?.id,reportingMethodId:this.reportTo.reportingMethod?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const IC=(0,r.c)(TC,[["render",NC]]);var BC=IC;const LC={class:"orangehrm-horizontal-padding orangehrm-top-padding"};function UC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("report-to-employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",LC,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit"))+" "+(0,a.toDisplayString)(o.type),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.reportTo.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.reportTo.employee=e),required:"",disabled:"",api:l.allowedEmployeesApi,rules:n.rules.employee,clear:!1},null,8,["modelValue","api","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.reportTo.reportingMethod,"onUpdate:modelValue":t[1]||(t[1]=e=>n.reportTo.reportingMethod=e),type:"select",label:e.$t("pim.reporting_method"),rules:n.rules.reportingMethod,options:o.reportingMethods,required:""},null,8,["modelValue","label","rules","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"]),(0,a.createVNode)(d)])}const AC={employee:null,reportingMethod:null};var PC={name:"EditEmployeeReportTo",components:{"report-to-employee-autocomplete":DC},props:{http:{type:Object,required:!0},data:{type:Object,required:!0},reportingMethods:{type:Array,required:!0},type:{type:String,required:!0},empNumber:{type:String,required:!0},api:{type:String,required:!0}},emits:["close"],setup(e){const t=`/api/v2/pim/employees/${e.empNumber}/report-to/allowed`;return{allowedEmployeesApi:t}},data(){return{isLoading:!1,reportTo:{...AC},rules:{employee:[Ht,Wt(100),So],reportingMethod:[Ht]}}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:"Supervisor"===this.type?`${this.api}${this.data.supervisorEmpNumber}`:`${this.api}${this.data.subordinateEmpNumber}`}).then((e=>{const{data:t}=e.data;this.reportTo.employee={id:"Supervisor"===this.type?t.supervisor.empNumber:t.subordinate.empNumber,label:"Supervisor"===this.type?`${t.supervisor.firstName} ${t.supervisor.middleName} ${t.supervisor.lastName}`:`${t.subordinate.firstName} ${t.subordinate.middleName} ${t.subordinate.lastName}`,isPastEmployee:"Supervisor"===this.type?t.supervisor.terminationId:t.subordinate.terminationId},this.reportTo.reportingMethod=this.reportingMethods.find((e=>e.id===t.reportingMethod.id))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e="Supervisor"===this.type?this.data.supervisorEmpNumber:this.data.subordinateEmpNumber;this.http.update(e,{reportingMethodId:this.reportTo.reportingMethod?.id}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const qC=(0,r.c)(PC,[["render",UC]]);var FC=qC,MC={name:"EmployeeSupervisors",components:{"edit-employee-report-to":FC,"profile-action-header":Yh,"save-employee-report-to":BC,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},reportingMethods:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/supervisors`),{$t:o}=Be(),a=["Direct","Indirect"],l=e=>e.map((e=>{let t=e.reportingMethod.name;return{name:`${e.supervisor?.firstName} ${e.supervisor?.lastName} ${e.supervisor.terminationId?o("general.past_employee"):""}`,reportingMethod:a.includes(t)?o("pim."+t.toLowerCase()):t,supervisorEmpNumber:e.supervisor.empNumber}})),n=`/api/v2/pim/employees/${e.empNumber}/supervisors/`,{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m,supervisorEndpoint:n}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1}},{name:"reportingMethod",title:this.$t("pim.reporting_method"),style:{flex:1}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal},tableHeaders(){const e={name:"actions",slot:"action",title:"Actions",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.delete("supervisor")&&(e.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),this.$can.update("supervisor")&&(e.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),Object.keys(e.cellConfig).length>0?this.headers.concat([e]):this.headers}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].supervisorEmpNumber));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.supervisorEmpNumber])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const zC=(0,r.c)(MC,[["render",xC]]);var jC=zC;const RC={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},OC={class:"orangehrm-container"},GC={key:2,class:"orangehrm-bottom-container"};function QC(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-employee-report-to"),d=(0,a.resolveComponent)("edit-employee-report-to"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,type:"Subordinate","emp-number":o.empNumber,"reporting-methods":o.reportingMethods,onClose:r.onSaveModalClose},null,8,["http","emp-number","reporting-methods","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,"emp-number":o.empNumber,data:n.editModalState,type:"Subordinate",api:l.subordinateEndpoint,"reporting-methods":o.reportingMethods,onClose:r.onEditModalClose},null,8,["http","emp-number","data","api","reporting-methods","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",RC,[(0,a.createVNode)(s,{"action-button-shown":e.$can.create("subordinates"),onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_subordinates")),1)])),_:1},8,["action-button-shown","onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",OC,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:r.tableHeaders,items:l.items?.data,selectable:e.$can.delete("subordinates"),disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","disabled","loading"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",GC,[(0,a.createVNode)(u,{current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])}var HC={name:"EmployeeSubordinates",components:{"edit-employee-report-to":FC,"save-employee-report-to":BC,"profile-action-header":Yh,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},reportingMethods:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/subordinates`),{$t:o}=Be(),a=["Direct","Indirect"],l=e=>e.map((e=>{let t=e.reportingMethod.name;return{name:`${e.subordinate?.firstName} ${e.subordinate?.lastName} ${e.subordinate.terminationId?o("general.past_employee"):""}`,reportingMethod:a.includes(t)?o("pim."+t.toLowerCase()):t,subordinateEmpNumber:e.subordinate.empNumber}})),n=`/api/v2/pim/employees/${e.empNumber}/subordinates/`,{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m,subordinateEndpoint:n}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:1}},{name:"reportingMethod",title:this.$t("pim.reporting_method"),style:{flex:1}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal},tableHeaders(){const e={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.delete("subordinates")&&(e.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),this.$can.update("subordinates")&&(e.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),Object.keys(e.cellConfig).length>0?this.headers.concat([e]):this.headers}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].subordinateEmpNumber));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.subordinateEmpNumber])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const WC=(0,r.c)(HC,[["render",QC]]);var YC=WC,JC={components:{"edit-employee-layout":sg,"employee-supervisors":jC,"employee-subordinates":YC},props:{empNumber:{type:String,required:!0},reportingMethods:{type:Array,required:!0}}};const XC=(0,r.c)(JC,[["render",yC]]);var KC=XC;const ZC={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},eV={class:"orangehrm-container"},tV={class:"orangehrm-bottom-container"};function oV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-membership"),d=(0,a.resolveComponent)("edit-membership"),s=(0,a.resolveComponent)("profile-action-header"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("oxd-pagination"),p=(0,a.resolveComponent)("delete-confirmation"),h=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(h,{"employee-id":o.empNumber,screen:"membership"},{default:(0,a.withCtx)((()=>[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,currencies:o.currencies,"paid-by":o.paidBy,memberships:o.memberships,onClose:r.onSaveModalClose},null,8,["http","currencies","paid-by","memberships","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,currencies:o.currencies,"paid-by":o.paidBy,memberships:o.memberships,data:n.editModalState,onClose:r.onEditModalClose},null,8,["http","currencies","paid-by","memberships","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",ZC,[(0,a.createVNode)(s,{onClick:r.onClickAdd},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.assigned_memberships")),1)])),_:1},8,["onClick"])]),(0,a.createVNode)(c,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",eV,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,disabled:r.isDisabled,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","disabled","loading"])]),(0,a.createElementVNode)("div",tV,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(p,{ref:"deleteDialog"},null,512)])),_:1},8,["employee-id"])}const aV={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function lV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",aV,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_membership")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.membership,"onUpdate:modelValue":t[0]||(t[0]=e=>n.membership.membership=e),type:"select",label:e.$t("pim.membership"),options:o.memberships,rules:n.rules.membership,required:""},null,8,["modelValue","label","options","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.subscriptionPaidBy,"onUpdate:modelValue":t[1]||(t[1]=e=>n.membership.subscriptionPaidBy=e),type:"select",label:e.$t("pim.subscription_paid_by"),options:o.paidBy},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.subscriptionFee,"onUpdate:modelValue":t[2]||(t[2]=e=>n.membership.subscriptionFee=e),label:e.$t("pim.subscription_amount"),rules:n.rules.subscriptionFee},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.currencyType,"onUpdate:modelValue":t[3]||(t[3]=e=>n.membership.currencyType=e),type:"select",label:e.$t("general.currency"),options:o.currencies},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.membership.subscriptionCommenceDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.membership.subscriptionCommenceDate=e),label:e.$t("pim.subscription_commence_date"),rules:n.rules.subscriptionCommenceDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.membership.subscriptionRenewalDate,"onUpdate:modelValue":t[5]||(t[5]=e=>n.membership.subscriptionRenewalDate=e),label:e.$t("pim.subscription_renewal_date"),years:n.yearArray,rules:n.rules.subscriptionRenewalDate},null,8,["modelValue","label","years","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const nV={membershipId:[],subscriptionFee:"",subscriptionPaidBy:null,currencyTypeId:[],subscriptionCommenceDate:"",subscriptionRenewalDate:""};var rV={name:"SaveMembership",props:{http:{type:Object,required:!0},currencies:{type:Array,default:()=>[]},paidBy:{type:Array,default:()=>[]},memberships:{type:Array,default:()=>[]}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,membership:{...nV},yearArray:[...Uy()],rules:{membership:[Ht],subscriptionCommenceDate:[Yt(this.userDateFormat)],subscriptionRenewalDate:[Yt(this.userDateFormat),ro((()=>this.membership.subscriptionCommenceDate),this.$t("pim.renewal_date_should_be_after_the_commencing_date"))],subscriptionFee:[to,fo(1e9)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({subscriptionFee:this.membership.subscriptionFee,subscriptionCommenceDate:this.membership.subscriptionCommenceDate,subscriptionRenewalDate:this.membership.subscriptionRenewalDate,membershipId:this.membership.membership.id,subscriptionPaidBy:this.membership.subscriptionPaidBy?.id,currencyTypeId:this.membership.currencyType?.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.membership={...nV},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const iV=(0,r.c)(rV,[["render",lV]]);var dV=iV;const sV={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function cV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",sV,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_membership")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.membership,"onUpdate:modelValue":t[0]||(t[0]=e=>n.membership.membership=e),type:"select",label:e.$t("pim.membership"),options:o.memberships,rules:n.rules.membership,required:""},null,8,["modelValue","label","options","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.subscriptionPaidBy,"onUpdate:modelValue":t[1]||(t[1]=e=>n.membership.subscriptionPaidBy=e),type:"select",label:e.$t("pim.subscription_paid_by"),options:o.paidBy},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.subscriptionFee,"onUpdate:modelValue":t[2]||(t[2]=e=>n.membership.subscriptionFee=e),label:e.$t("pim.subscription_amount"),rules:n.rules.subscriptionFee},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.membership.currencyType,"onUpdate:modelValue":t[3]||(t[3]=e=>n.membership.currencyType=e),type:"select",label:e.$t("general.currency"),options:o.currencies},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.membership.subscriptionCommenceDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.membership.subscriptionCommenceDate=e),label:e.$t("pim.subscription_commence_date"),rules:n.rules.subscriptionCommenceDate},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.membership.subscriptionRenewalDate,"onUpdate:modelValue":t[5]||(t[5]=e=>n.membership.subscriptionRenewalDate=e),label:e.$t("pim.subscription_renewal_date"),years:n.yearArray,rules:n.rules.subscriptionRenewalDate},null,8,["modelValue","label","years","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(d)],64)}const mV={membership:[],subscriptionFee:"",subscriptionPaidBy:null,currencyType:[],subscriptionCommenceDate:"",subscriptionRenewalDate:""};var uV={name:"EditMembership",props:{http:{type:Object,required:!0},data:{type:Object,required:!0},currencies:{type:Array,default:()=>[]},paidBy:{type:Array,default:()=>[]},memberships:{type:Array,default:()=>[]}},emits:["close"],setup(){const{userDateFormat:e}=R();return{userDateFormat:e}},data(){return{isLoading:!1,membership:{...mV},yearArray:[...Uy()],rules:{membership:[Ht],subscriptionCommenceDate:[Yt(this.userDateFormat)],subscriptionRenewalDate:[Yt(this.userDateFormat),ro((()=>this.membership.subscriptionCommenceDate),this.$t("pim.renewal_date_should_be_after_the_commencing_date"))],subscriptionFee:[to,fo(1e9)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.membership.subscriptionFee=t.subscriptionFee,this.membership.subscriptionCommenceDate=t.subscriptionCommenceDate,this.membership.subscriptionRenewalDate=t.subscriptionRenewalDate,this.membership.membership=this.memberships.find((e=>e.id===t.membership.id)),this.membership.subscriptionPaidBy=this.paidBy.find((e=>e.id===t.subscriptionPaidBy)),this.membership.currencyType=this.currencies.find((e=>e.id===t.currencyType?.id))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{subscriptionFee:this.membership.subscriptionFee,subscriptionCommenceDate:this.membership.subscriptionCommenceDate,subscriptionRenewalDate:this.membership.subscriptionRenewalDate,membershipId:this.membership.membership.id,subscriptionPaidBy:this.membership.subscriptionPaidBy?.id,currencyTypeId:this.membership.currencyType?.id}).then((()=>this.$toast.updateSuccess())).then((()=>{this.membership={...mV},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const pV=(0,r.c)(uV,[["render",cV]]);var hV=pV,gV={components:{"profile-action-header":Yh,"edit-employee-layout":sg,"save-membership":dV,"edit-membership":hV,"delete-confirmation":At},props:{empNumber:{type:String,required:!0},currencies:{type:Array,default:()=>[]},paidBy:{type:Array,default:()=>[]},memberships:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/memberships`),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>({id:e.id,membershipId:e.membership.id,membershipName:e.membership.name,subscriptionPaidBy:e.subscriptionPaidBy,subscriptionFee:e.subscriptionFee,subscriptionTypeId:e.currencyType.id,subscriptionCurrencyName:e.currencyType.name,subscriptionCommenceDate:pe(ue(e.subscriptionCommenceDate),o,{locale:a}),subscriptionRenewalDate:pe(ue(e.subscriptionRenewalDate),o,{locale:a})}))),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(t,{normalizer:l,toastNoRecords:!1});return{http:t,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"membershipName",slot:"title",title:this.$t("pim.membership"),style:{flex:1}},{name:"subscriptionPaidBy",title:this.$t("pim.subscription_paid_by"),style:{flex:1}},{name:"subscriptionFee",title:this.$t("pim.subscription_amount"),style:{flex:1}},{name:"subscriptionCurrencyName",title:this.$t("general.currency"),style:{flex:1}},{name:"subscriptionCommenceDate",title:this.$t("pim.subscription_commence_date"),style:{flex:1}},{name:"subscriptionRenewalDate",title:this.$t("pim.subscription_renewal_date"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},computed:{isDisabled(){return this.showSaveModal||this.showEditModal}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showEditModal=!1,this.editModalState=null,this.showSaveModal=!0},onClickEdit(e){this.showSaveModal=!1,this.editModalState=e,this.showEditModal=!0},onSaveModalClose(){this.showSaveModal=!1,this.resetDataTable()},onEditModalClose(){this.showEditModal=!1,this.editModalState=null,this.resetDataTable()}}};const vV=(0,r.c)(gV,[["render",oV],["__scopeId","data-v-23886996"]]);var fV=vV;const yV={class:"orangehrm-background-container"},CV={class:"orangehrm-paper-container"},VV={class:"orangehrm-header-container"},bV={class:"orangehrm-container"},xV={class:"orangehrm-bottom-container"};function wV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yV,[(0,a.createElementVNode)("div",CV,[(0,a.createElementVNode)("div",VV,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.termination_reasons")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",bV,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",xV,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var NV={components:{"delete-confirmation":At},props:{unselectableIds:{type:Array,default:()=>[]}},setup(e){const t=t=>t.map((t=>{const o=e.unselectableIds.findIndex((e=>e==t.id));return{id:t.id,name:t.name,isSelectable:-1===o}})),o=new P(window.appGlobal.baseUrl,"/api/v2/pim/termination-reasons"),{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(o,{normalizer:t});return{http:o,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/pim/saveTerminationReasons")},onClickEdit(e){U("/pim/saveTerminationReasons/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("pim.termination_reasons_in_use")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const _V=(0,r.c)(NV,[["render",wV]]);var kV=_V;const SV={class:"orangehrm-background-container"},$V={class:"orangehrm-card-container"};function DV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",SV,[(0,a.createElementVNode)("div",$V,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_termination_reason")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.termination.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.termination.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var EV={props:{terminationReasonId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/pim/termination-reasons"),{createUniqueValidator:o}=qo(t),a=o("TerminationReason","name",{entityId:e.terminationReasonId});return{http:t,terminationReasonUniqueValidation:a}},data(){return{isLoading:!1,termination:{id:"",name:""},rules:{name:[Ht,this.terminationReasonUniqueValidation,Wt(100)]}}},created(){this.isLoading=!0,this.http.get(this.terminationReasonId).then((e=>{const{data:t}=e.data;this.termination.id=t.id,this.termination.name=t.name})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.terminationReasonId,{name:this.termination.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/viewTerminationReasons")}}};const TV=(0,r.c)(EV,[["render",DV]]);var IV=TV;const BV={class:"orangehrm-background-container"},LV={class:"orangehrm-card-container"};function UV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",BV,[(0,a.createElementVNode)("div",LV,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_termination_reason")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.termination.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.termination.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var AV={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/termination-reasons"),{createUniqueValidator:t}=qo(e),o=t("TerminationReason","name");return{http:e,terminationReasonUniqueValidation:o}},data(){return{isLoading:!1,termination:{id:"",name:""},rules:{name:[Ht,this.terminationReasonUniqueValidation,Wt(100)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.termination.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/viewTerminationReasons")}}};const PV=(0,r.c)(AV,[["render",UV]]);var qV=PV;const FV={class:"orangehrm-background-container"},MV={class:"orangehrm-paper-container"},zV={class:"orangehrm-header-container"},jV={class:"orangehrm-container"},RV={class:"orangehrm-bottom-container"};function OV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",FV,[(0,a.createElementVNode)("div",MV,[(0,a.createElementVNode)("div",zV,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.reporting_methods")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",jV,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",RV,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var GV={components:{"delete-confirmation":At},props:{unselectableIds:{type:Array,default:()=>[]}},setup(e){const t=t=>t.map((t=>{const o=e.unselectableIds.findIndex((e=>e==t.id));return{id:t.id,name:t.name,isSelectable:-1===o}})),o=new P(window.appGlobal.baseUrl,"/api/v2/pim/reporting-methods"),{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(o,{normalizer:t});return{http:o,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{"flex-basis":"80%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/pim/saveReportingMethod")},onClickEdit(e){U("/pim/saveReportingMethod/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("pim.reporting_methods_in_use")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const QV=(0,r.c)(GV,[["render",OV]]);var HV=QV;const WV={class:"orangehrm-background-container"},YV={class:"orangehrm-card-container"};function JV(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",WV,[(0,a.createElementVNode)("div",YV,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_reporting_method")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.reportingMethod.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.reportingMethod.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var XV={props:{reportingMethodId:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/reporting-methods");return{http:e}},data(){return{isLoading:!1,reportingMethod:{id:"",name:""},rules:{name:[Ht,Wt(100)]}}},created(){this.isLoading=!0,this.http.get(this.reportingMethodId).then((e=>{const{data:t}=e.data;return this.reportingMethod.id=t.id,this.reportingMethod.name=t.name,this.http.getAll({limit:0})})).then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>t.name===e));if(o>-1){const{id:e}=t[o];return e===this.reportingMethod.id||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.reportingMethodId,{name:this.reportingMethod.name}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/viewReportingMethods")}}};const KV=(0,r.c)(XV,[["render",JV]]);var ZV=KV;const eb={class:"orangehrm-background-container"},tb={class:"orangehrm-card-container"};function ob(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",eb,[(0,a.createElementVNode)("div",tb,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_reporting_method")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.reportingMethod.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.reportingMethod.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var ab={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/reporting-methods");return{http:e}},data(){return{isLoading:!1,reportingMethod:{id:"",name:""},rules:{name:[Ht,Wt(100)]}}},created(){this.isLoading=!0,this.http.getAll({limit:0}).then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>t.name===e));return-1===o||this.$t("general.already_exists")}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.reportingMethod.name}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/viewReportingMethods")}}};const lb=(0,r.c)(ab,[["render",ob]]);var nb=lb;const rb={class:"orangehrm-background-container"},ib={class:"orangehrm-paper-container"},db={class:"orangehrm-header-container"},sb={class:"orangehrm-custom-field-title"},cb={class:"orangehrm-container"},mb={class:"orangehrm-bottom-container"};function ub(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",rb,[(0,a.createElementVNode)("div",ib,[(0,a.createElementVNode)("div",db,[(0,a.createElementVNode)("div",sb,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.custom_fields")),1)])),_:1}),l.isLoading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[r.remainingFields>0?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"--infotext",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.remaining_no_of_custom_fields"))+" "+(0,a.toDisplayString)(r.remainingFields),1)])),_:1})):((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,class:"--infotext",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.all_custom_fields_in_use")),1)])),_:1}))],64))]),r.remainingFields>0?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",cb,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",mb,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var pb={components:{"delete-confirmation":At},props:{customFieldLimit:{type:Number,required:!0},screenList:{type:Array,required:!0},fieldTypeList:{type:Array,required:!0},unselectableIds:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/pim/custom-fields"),o=t=>t.map((t=>{const o=e.unselectableIds.findIndex((e=>e==t.id));return{id:t.id,fieldName:t.fieldName,screen:e.screenList.filter((e=>t.screen===e.id))[0].label,fieldType:e.fieldTypeList.filter((e=>t.fieldType===e.id))[0].label,extraData:t.extraData,isSelectable:-1===o}})),{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(t,{normalizer:o});return{http:t,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d}},data(){return{screenWidth:screen.width,headers:[{name:"fieldName",slot:"title",title:this.$t("pim.custom_field_name"),style:{flex:2}},{name:"screen",title:this.$t("pim.screen"),style:{flex:2}},{name:"fieldType",title:this.$t("pim.field_type"),style:{flex:2}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},computed:{isLoaded(){return!this.isLoading},remainingFields(){return this.customFieldLimit-this.items?.data?.length}},methods:{onClickAdd(){U("/pim/saveCustomFields")},onClickEdit(e){U("/pim/saveCustomFields/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("pim.custom_fields_in_use")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const hb=(0,r.c)(pb,[["render",ub],["__scopeId","data-v-15a86f04"]]);var gb=hb;const vb={class:"orangehrm-background-container"},fb={class:"orangehrm-card-container"};function yb(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",vb,[(0,a.createElementVNode)("div",fb,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_custom_field")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.fieldName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.customField.fieldName=e),label:e.$t("pim.field_name"),rules:n.rules.fieldName,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.screen,"onUpdate:modelValue":t[1]||(t[1]=e=>n.customField.screen=e),type:"select",label:e.$t("pim.screen"),rules:n.rules.screen,options:o.screenList,required:""},null,8,["modelValue","label","rules","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.fieldType,"onUpdate:modelValue":t[2]||(t[2]=e=>n.customField.fieldType=e),type:"select",label:e.$t("general.type"),rules:n.rules.fieldType,options:o.fieldTypeList,required:"",disabled:o.fieldInUse},null,8,["modelValue","label","rules","options","disabled"])])),_:1}),r.isDropDownField?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.extraData,"onUpdate:modelValue":t[3]||(t[3]=e=>n.customField.extraData=e),label:e.$t("pim.select_options"),rules:n.rules.extraData,required:r.isDropDownField},null,8,["modelValue","label","rules","required"]),(0,a.createVNode)(i,{tag:"p",class:"select-options-hint"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.enter_allowed_options_separated_by_commas")),1)])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Cb={id:null,fieldName:"",screen:"",fieldType:"",extraData:""};var Vb={props:{customFieldId:{type:Number,required:!0},screenList:{type:Array,required:!0},fieldTypeList:{type:Array,required:!0},fieldInUse:{type:Boolean,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/custom-fields");return{http:e}},data(){return{isLoading:!1,customField:{...Cb},rules:{fieldName:[Ht,Wt(250)],screen:[Ht,Wt(100)],fieldType:[Ht,Wt(15)],extraData:[Ht,Wt(250)]}}},computed:{isDropDownField(){return 1===this.customField.fieldType?.id}},created(){this.isLoading=!0,this.http.get(this.customFieldId).then((e=>{const{data:t}=e.data;return this.customField.fieldName=t.fieldName,""!==t.screen&&null!==t.screen&&(this.customField.screen=this.screenList.find((e=>e.id===t.screen))),""!==t.fieldType&&null!==t.fieldType&&(this.customField.fieldType=this.fieldTypeList.find((e=>e.id===t.fieldType))),this.customField.extraData=t.extraData,this.http.getAll()})).then((e=>{const{data:t}=e.data;this.rules.fieldName.push((e=>{const o=t.findIndex((t=>t.fieldName===e));if(o>-1){const e=t[o].id;return e==this.customFieldId||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.customFieldId,{fieldName:this.customField.fieldName,screen:this.customField.screen.id,fieldType:this.customField.fieldType.id,extraData:this.customField.extraData}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/listCustomFields")}}};const bb=(0,r.c)(Vb,[["render",yb],["__scopeId","data-v-c4b50a18"]]);var xb=bb;const wb={class:"orangehrm-background-container"},Nb={class:"orangehrm-card-container"};function _b(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",wb,[(0,a.createElementVNode)("div",Nb,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_custom_field")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.fieldName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.customField.fieldName=e),label:e.$t("pim.field_name"),rules:n.rules.fieldName,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.screen,"onUpdate:modelValue":t[1]||(t[1]=e=>n.customField.screen=e),type:"select",label:e.$t("pim.screen"),rules:n.rules.screen,options:o.screenList,required:""},null,8,["modelValue","label","rules","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"organization-name-container"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.fieldType,"onUpdate:modelValue":t[2]||(t[2]=e=>n.customField.fieldType=e),type:"select",label:e.$t("general.type"),rules:n.rules.fieldType,options:o.fieldTypeList,required:""},null,8,["modelValue","label","rules","options"])])),_:1}),r.isDropDownField?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customField.extraData,"onUpdate:modelValue":t[3]||(t[3]=e=>n.customField.extraData=e),label:e.$t("pim.select_options"),rules:n.rules.extraData,required:r.isDropDownField},null,8,["modelValue","label","rules","required"]),(0,a.createVNode)(i,{tag:"p",class:"select-options-hint"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.enter_allowed_options_separated_by_commas")),1)])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const kb={fieldName:"",screen:"",fieldType:"",extraData:""};var Sb={props:{screenList:{type:Array,required:!0},fieldTypeList:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/custom-fields");return{http:e}},data(){return{isLoading:!1,customField:{...kb},rules:{fieldName:[Ht,Wt(250)],screen:[Ht,Wt(100)],fieldType:[Ht,Wt(15)],extraData:[Ht,Wt(250)]}}},computed:{isDropDownField(){return 1===this.customField.fieldType?.id}},created(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.rules.fieldName.push((e=>{const o=t.findIndex((t=>t.fieldName==e));return-1===o||this.$t("general.already_exists")}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e=this.customField.fieldType.id;this.http.create({fieldName:this.customField.fieldName,screen:this.customField.screen.id,fieldType:e,extraData:1===e?this.customField.extraData:null}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/pim/listCustomFields")}}};const $b=(0,r.c)(Sb,[["render",_b],["__scopeId","data-v-30bb16ec"]]);var Db=$b;const Eb={class:"orangehrm-background-container"},Tb={class:"orangehrm-card-container"},Ib={class:"orangehrm-optional-field-row"},Bb={class:"orangehrm-optional-field-row"},Lb={class:"orangehrm-optional-field-row"},Ub={class:"orangehrm-optional-field-row"};function Ab(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-switch-input"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("submit-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Eb,[(0,a.createElementVNode)("div",Tb,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.optional_fields")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.show_deprecated_fields")),1)])),_:1}),(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Ib,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.show_nick_name_smoker_and_military_service_in_personal_details")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.optionalField.pimShowDeprecatedFields,"onUpdate:modelValue":t[0]||(t[0]=e=>n.optionalField.pimShowDeprecatedFields=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.country_specific_information")),1)])),_:1}),(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Bb,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.show_ssn_field_in_personal_details")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.optionalField.showSSN,"onUpdate:modelValue":t[1]||(t[1]=e=>n.optionalField.showSSN=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",Lb,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.show_sin_field_in_personal_details")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.optionalField.showSIN,"onUpdate:modelValue":t[2]||(t[2]=e=>n.optionalField.showSIN=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",Ub,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-optional-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.show_us_tax_exemptions_menu")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.optionalField.showTaxExemptions,"onUpdate:modelValue":t[3]||(t[3]=e=>n.optionalField.showTaxExemptions=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Pb={pimShowDeprecatedFields:!1,showSSN:!1,showSIN:!1,showTaxExemptions:!1};var qb={components:{"oxd-switch-input":q.OxdSwitchInput},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/optional-field");return{http:e}},data(){return{isLoading:!1,optionalField:{...Pb}}},created(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.optionalField={...t}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{...this.optionalField}}).then((e=>{const{data:t}=e.data;this.optionalField={...t},this.$toast.saveSuccess(),this.isLoading=!1}))}}};const Fb=(0,r.c)(qb,[["render",Ab],["__scopeId","data-v-6508f168"]]);var Mb=Fb;const zb={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function jb(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("edit-employee-layout");return(0,a.openBlock)(),(0,a.createBlock)(v,{"employee-id":o.empNumber,screen:"tax"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",zb,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.tax_exemptions")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.federal_income_tax")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.federalStatus,"onUpdate:modelValue":t[0]||(t[0]=e=>n.taxExemption.federalStatus=e),type:"select",label:e.$t("general.status"),options:o.statuses,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.federalExemptions,"onUpdate:modelValue":t[1]||(t[1]=e=>n.taxExemption.federalExemptions=e),label:e.$t("pim.exemptions"),rules:n.rules.federalExemptions,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.state_income_tax")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.taxState,"onUpdate:modelValue":t[2]||(t[2]=e=>n.taxExemption.taxState=e),type:"select",label:e.$t("general.state"),options:o.provinces,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.stateStatus,"onUpdate:modelValue":t[3]||(t[3]=e=>n.taxExemption.stateStatus=e),type:"select",label:e.$t("general.status"),options:o.statuses,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.stateExemptions,"onUpdate:modelValue":t[4]||(t[4]=e=>n.taxExemption.stateExemptions=e),label:e.$t("pim.exemptions"),rules:n.rules.stateExemptions,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.unemploymentState,"onUpdate:modelValue":t[5]||(t[5]=e=>n.taxExemption.unemploymentState=e),type:"select",label:e.$t("pim.unemployment_state"),options:o.provinces,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","options","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.taxExemption.workState,"onUpdate:modelValue":t[6]||(t[6]=e=>n.taxExemption.workState=e),type:"select",label:e.$t("pim.work_state"),options:o.provinces,disabled:!e.$can.update("tax_exemptions")},null,8,["modelValue","label","options","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[e.$can.update("tax_exemptions")?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])),_:1},8,["employee-id"])}const Rb={federalStatus:null,federalExemptions:null,taxStateCode:[],stateStatus:null,stateExemptions:null,unemploymentStateCode:[],workStateCode:[]};var Ob={components:{"edit-employee-layout":sg},props:{empNumber:{type:String,required:!0},provinces:{type:Array,default:()=>[]},statuses:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/pim/employees/${e.empNumber}/tax-exemption`);return{http:t}},data(){return{isLoading:!1,taxExemption:{...Rb},rules:{federalExemptions:[e=>null!==e.match(/^\d*\.?\d*$/)||this.$t("general.should_be_a_positive_number"),Wt(2)],stateExemptions:[e=>null!==e.match(/^\d*\.?\d*$/)||this.$t("general.should_be_a_positive_number"),Wt(2)]}}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{this.updateModel(e)})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{federalStatus:this.taxExemption.federalStatus?.id,federalExemptions:this.taxExemption.federalExemptions,taxStateCode:this.taxExemption.taxState?.id,stateStatus:this.taxExemption.stateStatus?.id,stateExemptions:this.taxExemption.stateExemptions,unemploymentStateCode:this.taxExemption.unemploymentState?.id,workStateCode:this.taxExemption.workState?.id}}).then((e=>(this.updateModel(e),this.$toast.updateSuccess()))).then((()=>{this.isLoading=!1}))},updateModel(e){const{data:t}=e.data;this.taxExemption.federalExemptions=t.federalExemptions,this.taxExemption.stateExemptions=t.stateExemptions,this.taxExemption.taxState=this.provinces.find((e=>e.id===t.taxState.code)),this.taxExemption.unemploymentState=this.provinces.find((e=>e.id===t.unemploymentState.code)),this.taxExemption.workState=this.provinces.find((e=>e.id===t.workState.code)),this.taxExemption.federalStatus=this.statuses.find((e=>e.id===t.federalStatus)),this.taxExemption.stateStatus=this.statuses.find((e=>e.id===t.stateStatus))}}};const Gb=(0,r.c)(Ob,[["render",jb]]);var Qb=Gb;const Hb=e=>((0,a.pushScopeId)("data-v-83d312d2"),e=e(),(0,a.popScopeId)(),e),Wb={class:"orangehrm-background-container"},Yb={class:"orangehrm-card-container"},Jb={class:"orangehrm-information-card-container"},Xb=Hb((()=>(0,a.createElementVNode)("br",null,null,-1)));function Kb(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("employee-data-import-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wb,[(0,a.createElementVNode)("div",Yb,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.data_import")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",Jb,[(0,a.createVNode)(i,{class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.note"))+": ",1)])),_:1}),(0,a.createElementVNode)("ul",null,[(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.column_order_should_not_be_changed")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.first_name_and_last_name_are_compulsory")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.all_date_fields_should_be_in_yyyy_mm_dd_format")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.gender_specified_value_should_be_either_m_or_f")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.each_import_file_should_be_configured_for_100_records_or_less")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.multiple_import_files_may_be_required")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(i,{class:"orangehrm-information-card-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.sample_csv_file"))+" : ",1),(0,a.createElementVNode)("a",{href:"#",class:"download-link",onClick:t[0]||(t[0]=(0,a.withModifiers)(((...e)=>r.onClickDownload&&r.onClickDownload(...e)),["prevent"]))},(0,a.toDisplayString)(e.$t("general.download")),1)])),_:1})])])]),Xb,(0,a.createVNode)(v,{ref:"formRef",loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.attachment=e),type:"file",rules:n.rules.attachment,label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),placeholder:e.$t("general.no_file_selected"),required:""},null,8,["modelValue","rules","label","button-label","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{label:e.$t("general.upload")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])]),n.importModalState?((0,a.openBlock)(),(0,a.createBlock)(f,{key:0,data:n.importModalState,onClose:r.onImportModalClose},null,8,["data","onClose"])):(0,a.createCommentVNode)("",!0)])}const Zb={class:"orangehrm-modal-header"},ex={class:"orangehrm-text-center-align"},tx={class:"orangehrm-modal-footer"};function ox(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(s,{class:"orangehrm-dialog-popup","onUpdate:show":r.onClose},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Zb,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.import_details")),1)])),_:1})]),(0,a.createElementVNode)("div",ex,[(0,a.createVNode)(i,{type:"card-body",class:(0,a.normalizeClass)({"orangehrm-success-message":o.data.success>0})},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.n_records_successfully_imported",{count:o.data.success})),1)])),_:1},8,["class"]),o.data.failed>0?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(i,{type:"card-body",class:"orangehrm-error-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.n_records_failed_to_import",{count:o.data.failed})),1)])),_:1}),(0,a.createVNode)(i,{type:"card-body",class:"orangehrm-error-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.failed_rows")),1)])),_:1}),(0,a.createVNode)(i,{type:"card-body",class:"orangehrm-error-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.data.failedRows.toString()),1)])),_:1})],64)):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",tx,[(0,a.createVNode)(d,{"display-type":"secondary",label:e.$t("general.ok"),onClick:r.onClose},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])}var ax={name:"EmployeeDataImportModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0}},emits:["close"],methods:{onClose(){this.$emit("close",!0)}}};const lx=(0,r.c)(ax,[["render",ox],["__scopeId","data-v-03a36a65"]]);var nx=lx;const rx={attachment:null};var ix={components:{"employee-data-import-modal":nx},props:{allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/csv-import"),{formRef:t,reset:o}=qc();return{http:e,reset:o,formRef:t}},data(){return{isLoading:!1,attachment:{...rx},rules:{attachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)]},importModalState:null}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.attachment}).then((e=>{const{meta:t}=e.data;this.importModalState=t})).finally((()=>{this.reset(),this.isLoading=!1}))},onClickDownload(){const e=`${window.appGlobal.baseUrl}/pim/sampleCsvDownload`;window.open(e,"_blank")},onImportModalClose(){this.importModalState=null}}};const dx=(0,r.c)(ix,[["render",Kb],["__scopeId","data-v-83d312d2"]]);var sx=dx;const cx={class:"orangehrm-background-container"},mx=(0,a.createElementVNode)("br",null,null,-1),ux={class:"orangehrm-paper-container"},px={class:"orangehrm-header-container"},hx={class:"orangehrm-container"},gx={class:"orangehrm-bottom-container"};function vx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("report-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-table-filter"),v=(0,a.resolveComponent)("table-header"),f=(0,a.resolveComponent)("oxd-card-table"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",cx,[(0,a.createVNode)(g,{"filter-title":e.$t("general.employee_reports")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.report,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.report=e),rules:n.rules.report},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),mx,(0,a.createElementVNode)("div",ux,[(0,a.createElementVNode)("div",px,[(0,a.createVNode)(u,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(v,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",hx,[(0,a.createVNode)(f,{selected:n.checkedItems,"onUpdate:selected":t[1]||(t[1]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[2]||(t[2]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",gx,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(C,{ref:"deleteDialog"},null,512)])}function fx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("general.report_name"),clear:!1,"create-options":r.loadReports},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var yx={name:"ReportAutocomplete",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/pim/reports/defined");return{http:e}},methods:{async loadReports(e){return new Promise((t=>{e.trim()?this.http.getAll({name:e}).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:e.name}))))})):t([])}))}}};const Cx=(0,r.c)(yx,[["render",fx]]);var Vx=Cx;const bx={report:null},xx={"report.name":"ASC"};var wx={components:{"delete-confirmation":At,"report-autocomplete":Vx},setup(){const{sortDefinition:e,sortField:t,sortOrder:o,onSort:l}=Pt({sortDefinition:xx}),n=(0,a.ref)({...bx}),r=(0,a.computed)((()=>({reportId:n.value.report?.id,sortField:t.value,sortOrder:o.value}))),i=new P(window.appGlobal.baseUrl,"/api/v2/pim/reports/defined"),{showPaginator:d,currentPage:s,total:c,pages:m,pageSize:u,response:p,isLoading:h,execQuery:g}=Dt(i,{query:r});return l(g),{http:i,showPaginator:d,currentPage:s,isLoading:h,total:c,pages:m,pageSize:u,execQuery:g,items:p,filters:n,sortDefinition:e}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:"85%"},sortField:"report.name"},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:"15%"},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}},view:{onClick:this.onClickView,props:{name:"file-text-fill"}}}}],checkedItems:[],rules:{report:[So]}}},methods:{onClickAdd(){U("/pim/definePredefinedReport")},onClickEdit(e){U("/pim/definePredefinedReport/{id}",{id:e.id})},onClickView(e){U("/pim/displayPredefinedReport/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...bx},this.filterItems()}}};const Nx=(0,r.c)(wx,[["render",vx]]);var _x=Nx;const kx={class:"orangehrm-background-container"},Sx={class:"orangehrm-card-container"};function $x(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-icon-button"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("report-criterion"),v=(0,a.resolveComponent)("report-display-field"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",kx,[(0,a.createElementVNode)("div",Sx,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.add_report")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(b,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.name,"onUpdate:modelValue":t[0]||(t[0]=e=>l.report.name=e),label:e.$t("general.report_name"),placeholder:e.$t("general.type_here_message"),rules:n.rules.name,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.selection_criteria")),1)])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-report-criteria --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.criterion,"onUpdate:modelValue":t[1]||(t[1]=e=>l.report.criterion=e),type:"select",label:e.$t("pim.selection_criteria"),options:l.availableCriteria},null,8,["modelValue","label","options"]),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-report-icon",name:"plus",onClick:l.addCriterion},null,8,["onClick"])])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.includeEmployees,"onUpdate:modelValue":t[2]||(t[2]=e=>l.report.includeEmployees=e),type:"select",label:e.$t("pim.include"),options:n.includeOpts,"show-empty-selector":!1},null,8,["modelValue","label","options"])])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.report.criteriaSelected,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(g,{key:e,operator:l.report.criteriaFieldValues[e.id].operator,"onUpdate:operator":t=>l.report.criteriaFieldValues[e.id].operator=t,valueX:l.report.criteriaFieldValues[e.id].valueX,"onUpdate:valueX":t=>l.report.criteriaFieldValues[e.id].valueX=t,valueY:l.report.criteriaFieldValues[e.id].valueY,"onUpdate:valueY":t=>l.report.criteriaFieldValues[e.id].valueY=t,criterion:e,onDelete:e=>l.removeCriterion(t)},null,8,["operator","onUpdate:operator","valueX","onUpdate:valueX","valueY","onUpdate:valueY","criterion","onDelete"])))),128))])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.display_fields")),1)])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.fieldGroup,"onUpdate:modelValue":t[3]||(t[3]=e=>l.report.fieldGroup=e),type:"select",label:e.$t("pim.select_display_field_group"),options:l.availableFieldGroups},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,{class:"orangehrm-report-criteria --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.displayField,"onUpdate:modelValue":t[4]||(t[4]=e=>l.report.displayField=e),type:"select",label:e.$t("pim.select_display_field"),options:l.availableDisplyFields},null,8,["modelValue","label","options"]),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-report-icon",name:"plus",onClick:l.addDisplayField},null,8,["onClick"])])),_:1})])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.report.fieldGroupSelected,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(v,{key:e,includeHeader:l.report.displayFieldSelected[e.id].includeHeader,"onUpdate:includeHeader":t=>l.report.displayFieldSelected[e.id].includeHeader=t,"field-group":e,"selected-fields":l.report.displayFieldSelected[e.id].fields,onDelete:e=>l.removeDisplayFieldGroup(t),onDeleteChip:e=>l.removeDisplayField(e,t)},null,8,["includeHeader","onUpdate:includeHeader","field-group","selected-fields","onDelete","onDeleteChip"])))),128))])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(C)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function Dx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-grid-item");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(s,{class:"orangehrm-report-criteria --offset-column-1"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{name:"trash-fill",onClick:l.onClickDelete},null,8,["onClick"]),(0,a.createVNode)(d,{class:"orangehrm-report-criteria-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.criterion.label),1)])),_:1})])),_:1}),((0,a.openBlock)(),(0,a.createBlock)((0,a.resolveDynamicComponent)(l.field.component),(0,a.mergeProps)(e.$attrs,{api:l.field.api,label:l.field.name,options:l.field.options}),null,16,["api","label","options"]))],64)}function Ex(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item");return(0,a.openBlock)(),(0,a.createBlock)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,(0,a.mergeProps)(e.$attrs,{params:{includeEmployees:"currentAndPast"},rules:l.rules,"model-value":o.valueX,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:valueX",t))}),null,16,["rules","model-value"])])),_:1})}var Tx={name:"ReportCriterionAutocomplete",components:{"employee-autocomplete":$a},inheritAttrs:!1,props:{operator:{type:Object,required:!1,default:()=>null},valueX:{type:Object,required:!1,default:()=>null}},emits:["update:valueX","update:operator"],setup(e,t){const o=[Ht,So];return t.emit("update:operator",{id:"eq",label:"Equal"}),{rules:o}}};const Ix=(0,r.c)(Tx,[["render",Ex],["__scopeId","data-v-6a30a316"]]);var Bx=Ix;function Lx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item");return(0,a.openBlock)(),(0,a.createBlock)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,(0,a.mergeProps)(e.$attrs,{type:"select",rules:l.rules,options:l.opts,"model-value":o.valueX,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:valueX",t))}),null,16,["rules","options","model-value"])])),_:1})}var Ux={name:"ReportCriterionSelect",inheritAttrs:!1,props:{api:{type:String,required:!1,default:null},options:{type:Array,default:()=>[]},valueX:{type:Object,required:!1,default:()=>null}},emits:["update:valueX","update:operator"],setup(e,t){const o=(0,a.ref)(e.options),l=[Ht];if(e.api){const t=new P(window.appGlobal.baseUrl,e.api);(0,a.onBeforeMount)((()=>{t.getAll({..."/api/v2/admin/subunits"!==e.api&&{limit:0}}).then((({data:e})=>{o.value=e.data.map((e=>({id:e.id,label:e.name?e.name:e.title,_indent:e.level?e.level+1:1})))}))}))}return"/api/v2/admin/locations"===e.api||"/api/v2/admin/subunits"===e.api?t.emit("update:operator",{id:"in",label:"Equal"}):t.emit("update:operator",{id:"eq",label:"Equal"}),{opts:o,rules:l}}};const Ax=(0,r.c)(Ux,[["render",Lx],["__scopeId","data-v-74d5baa9"]]);var Px=Ax;function qx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"select",rules:l.rules.operator,options:l.operators,"model-value":o.operator,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:operator",t))},null,8,["rules","options","model-value"])])),_:1}),o.operator&&"between"===o.operator.id?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"orangehrm-report-range"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{rules:l.rules.valueX,"model-value":o.valueX,"onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:valueX",t))},null,8,["rules","model-value"]),(0,a.createVNode)(s,{class:"orangehrm-report-range-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("to")])),_:1}),(0,a.createVNode)(i,{rules:l.rules.valueY,"model-value":o.valueY,"onUpdate:modelValue":t[2]||(t[2]=t=>e.$emit("update:valueY",t))},null,8,["rules","model-value"])])),_:1})):o.operator?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{rules:l.rules.valueXOnly,"model-value":o.valueX,"onUpdate:modelValue":t[3]||(t[3]=t=>e.$emit("update:valueX",t))},null,8,["rules","model-value"])])),_:1})):(0,a.createCommentVNode)("",!0)],64)}var Fx={name:"ReportCriterionRange",inheritAttrs:!1,props:{operator:{type:Object,required:!1,default:()=>null},valueX:{type:String,required:!1,default:null},valueY:{type:String,required:!1,default:null}},emits:["update:valueX","update:valueY","update:operator"],setup(e){const{$t:t}=Be(),o=(0,a.ref)([{id:"lt",label:t("general.less_than")},{id:"gt",label:t("general.greater_than")},{id:"between",label:t("general.range")}]),l={operator:[Ht],valueXOnly:[Ht,Zt,Kt(100)],valueX:[Ht,Zt,Kt(100),o=>!parseInt(e.valueY)||(parseInt(o)<parseInt(e.valueY)||t("general.should_be_less_than_upper_bound"))],valueY:[Ht,Zt,Kt(100),o=>!parseInt(e.valueX)||(parseInt(o)>parseInt(e.valueX)||t("general.should_be_greater_than_lower_bound"))]};return{rules:l,operators:o}}};const Mx=(0,r.c)(Fx,[["render",qx],["__scopeId","data-v-20c1de0a"]]);var zx=Mx;function jx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"select",rules:l.rules.operator,options:l.operators,"model-value":o.operator,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:operator",t))},null,8,["rules","options","model-value"])])),_:1}),o.operator&&"between"===o.operator.id?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"orangehrm-report-daterange --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"date",rules:l.rules.valueX,"model-value":o.valueX,placeholder:l.userDateFormat,"display-format":l.jsDateFormat,"onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:valueX",t))},null,8,["rules","model-value","placeholder","display-format"]),(0,a.createVNode)(s,{class:"orangehrm-report-range-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("to")])),_:1}),(0,a.createVNode)(i,{type:"date",rules:l.rules.valueY,"model-value":o.valueY,placeholder:l.userDateFormat,"display-format":l.jsDateFormat,"onUpdate:modelValue":t[2]||(t[2]=t=>e.$emit("update:valueY",t))},null,8,["rules","model-value","placeholder","display-format"])])),_:1})):o.operator?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"date",rules:l.rules.valueXOnly,"model-value":o.valueX,placeholder:l.userDateFormat,"display-format":l.jsDateFormat,"onUpdate:modelValue":t[3]||(t[3]=t=>e.$emit("update:valueX",t))},null,8,["rules","model-value","placeholder","display-format"])])),_:1})):(0,a.createCommentVNode)("",!0)],64)}var Rx={name:"ReportCriterionDateRange",inheritAttrs:!1,props:{operator:{type:Object,required:!1,default:()=>null},valueX:{type:String,required:!1,default:null},valueY:{type:String,required:!1,default:null}},emits:["update:valueX","update:valueY","update:operator"],setup(e){const{$t:t}=Be(),{jsDateFormat:o,userDateFormat:l}=R(),n=(0,a.ref)([{id:"lt",label:"Joined before"},{id:"gt",label:"Joined after"},{id:"between",label:"Joined in between"}]),r={operator:[Ht],valueXOnly:[Ht,Yt(l)],valueX:[Ht,Yt(l),vo((()=>e.valueY),t("general.from_date_should_be_before_to_date"))],valueY:[Ht,Yt(l),ro((()=>e.valueX),t("general.to_date_should_be_after_from_date"))]};return{rules:r,operators:n,jsDateFormat:o,userDateFormat:l}}};const Ox=(0,r.c)(Rx,[["render",jx],["__scopeId","data-v-66cb5fdb"]]);var Gx=Ox,Qx={name:"ReportCriterion",components:{"report-criterion-autocomplete":Bx,"report-criterion-select":Px,"report-criterion-range":zx,"report-criterion-date-range":Gx},inheritAttrs:!1,props:{criterion:{type:Object,required:!0}},emits:["delete"],setup(e,t){const o=(0,a.ref)(null);switch(e.criterion.key){case"employee_name":o.value={name:e.criterion.label,component:"report-criterion-autocomplete",api:null,options:[]};break;case"pay_grade":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/pay-grades",options:[]};break;case"education":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/educations",options:[]};break;case"employment_status":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/employment-statuses",options:[]};break;case"service_period":o.value={name:e.criterion.label,component:"report-criterion-range",api:null,options:[]};break;case"joined_date":o.value={name:e.criterion.label,component:"report-criterion-date-range",api:null,options:[]};break;case"job_title":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/job-titles",options:[]};break;case"language":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/languages",options:[]};break;case"skill":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/skills",options:[]};break;case"age_group":o.value={name:e.criterion.label,component:"report-criterion-range",api:null,options:[]};break;case"sub_unit":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/subunits",options:[]};break;case"location":o.value={name:e.criterion.label,component:"report-criterion-select",api:"/api/v2/admin/locations",options:[]};break;default:o.value={name:e.criterion.label,component:"report-criterion-select",api:null,options:[{id:1,label:"Male"},{id:2,label:"Female"}]}}const l=e=>{t.emit("delete",e)};return{field:o,onClickDelete:l}}};const Hx=(0,r.c)(Qx,[["render",Dx],["__scopeId","data-v-720e3e96"]]);var Wx=Hx;function Yx(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("oxd-multiselect-chips"),m=(0,a.resolveComponent)("oxd-switch-input");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(s,{class:"orangehrm-report-field --offset-column-1"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{name:"trash-fill",onClick:l.onClickDelete},null,8,["onClick"]),(0,a.createVNode)(d,{class:"orangehrm-report-field-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.fieldGroup.label),1)])),_:1})])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{selected:o.selectedFields,onChipRemoved:l.onRemoveSelected},null,8,["selected","onChipRemoved"])])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-report-field"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-report-field-header",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.include_header")),1)])),_:1}),(0,a.createVNode)(m,{"model-value":o.includeHeader,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:includeHeader",t))},null,8,["model-value"])])),_:1})],64)}var Jx={name:"ReportDisplayField",components:{"oxd-switch-input":q.OxdSwitchInput,"oxd-multiselect-chips":q.OxdMultiSelectChips},props:{fieldGroup:{type:Object,required:!0},selectedFields:{type:Array,default:()=>[]},includeHeader:{type:Boolean,required:!0}},emits:["delete","deleteChip","update:includeHeader"],setup(e,t){const o=e=>{t.emit("delete",e)},a=e=>{t.emit("deleteChip",e)};return{onClickDelete:o,onRemoveSelected:a}}};const Xx=(0,r.c)(Jx,[["render",Yx],["__scopeId","data-v-09a99578"]]);var Kx=Xx;const Zx={name:"",includeEmployees:{id:1,key:"onlyCurrent",label:"Current Employees Only"},criterion:null,criteriaSelected:[],criteriaFieldValues:{},fieldGroup:null,fieldGroupSelected:[],displayField:null,displayFieldSelected:{}};function ew(e,t,o){const l=(0,a.reactive)({report:{...Zx}}),n=e=>{const o=t.find((t=>t.field_group_id===e));return o?o.fields:[]},r=e=>{const t=l.report.displayFieldSelected[e],o=t?t.fields:[];return n(e).filter((e=>!o.find((t=>t.id===e.id))))},i=()=>{const e=l.report.criterion;e&&(l.report.criteriaSelected.push(e),l.report.criteriaFieldValues[e.id]={valueX:null,valueY:null,operator:null},l.report.criterion=null)},d=e=>{const t=l.report.criteriaSelected.splice(e,1);delete l.report.criteriaFieldValues[t[0].id]},s=()=>{const e=l.report.fieldGroup,t=l.report.displayField;if(e){const o=l.report.fieldGroupSelected.findIndex((t=>t.id===e.id));-1===o&&(l.report.fieldGroupSelected.push(e),l.report.displayFieldSelected[e.id]={fields:[],includeHeader:!1}),t?(l.report.displayFieldSelected[e.id].fields.push(t),l.report.displayField=null):r(e.id).forEach((t=>{l.report.displayFieldSelected[e.id].fields.push(t)})),0===r(e.id).length&&(l.report.fieldGroup=null)}},c=e=>{const t=l.report.fieldGroupSelected[e];l.report.fieldGroupSelected.splice(e,1),delete l.report.displayFieldSelected[t.id]},m=(e,t)=>{const o=l.report.fieldGroupSelected[t],a=l.report.displayFieldSelected[o.id].fields;l.report.displayFieldSelected[o.id].fields=a.filter((t=>t.id!==e.id)),0===l.report.displayFieldSelected[o.id].fields.length&&c(t)},u=e=>{const t={name:e.name,include:e.includeEmployees.key,criteria:{},fieldGroup:{}};return e.fieldGroupSelected.forEach((o=>{const a=e.displayFieldSelected[o.id].fields,l=e.displayFieldSelected[o.id].includeHeader;t.fieldGroup[o.id]={fields:a.map((e=>e.id)),includeHeader:l}})),e.criteriaSelected.forEach((o=>{const a=e.criteriaFieldValues[o.id];t.criteria[o.id]={operator:a.operator?a.operator.id:"",x:"object"===typeof a.valueX?String(a.valueX?.id):a.valueX,y:"object"===typeof a.valueY?String(a.valueY?.id):a.valueY}})),t},p=(0,a.computed)((()=>e.filter((e=>!l.report.criteriaSelected.find((t=>t.id===e.id)))))),h=(0,a.computed)((()=>o.filter((e=>0!==r(e.id).length)))),g=(0,a.computed)((()=>{const e=l.report.fieldGroup?.id;return e?r(e):[]}));return{...(0,a.toRefs)(l),addCriterion:i,serializeBody:u,addDisplayField:s,removeCriterion:d,removeDisplayField:m,removeDisplayFieldGroup:c,availableCriteria:p,availableFieldGroups:h,availableDisplyFields:g}}var tw={components:{"report-criterion":Wx,"report-display-field":Kx},props:{selectionCriteria:{type:Array,required:!0},displayFieldGroups:{type:Array,required:!0},displayFields:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/pim/reports/defined"),{report:o,addCriterion:a,serializeBody:l,addDisplayField:n,removeCriterion:r,removeDisplayField:i,removeDisplayFieldGroup:d,availableCriteria:s,availableFieldGroups:c,availableDisplyFields:m}=ew(e.selectionCriteria,e.displayFields,e.displayFieldGroups);return{http:t,report:o,addCriterion:a,serializeBody:l,addDisplayField:n,removeCriterion:r,removeDisplayField:i,removeDisplayFieldGroup:d,availableCriteria:s,availableFieldGroups:c,availableDisplyFields:m}},data(){return{isLoading:!1,rules:{name:[Ht,Wt(250)],includeEmployees:[Ht]},includeOpts:[{id:1,key:"onlyCurrent",label:this.$t("general.current_employees_only")},{id:2,key:"currentAndPast",label:this.$t("general.current_and_past_employees")},{id:3,key:"onlyPast",label:this.$t("general.past_employees_only")}]}},beforeMount(){this.isLoading=!0,this.http.getAll({limit:0}).then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>t.name==e));return-1===o||this.$t("general.already_exists")}))})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/pim/viewDefinedPredefinedReports")},onSave(){if(0===Object.keys(this.report.displayFieldSelected).length)return this.$toast.warn({title:this.$t("general.warning"),message:this.$t("pim.at_least_one_display_field_should_be_added")});this.isLoading=!0;let e=null;const t=this.serializeBody(this.report);this.http.create(t).then((t=>{const{data:o}=t.data;return e=o.id,this.$toast.saveSuccess()})).then((()=>{e&&U("/pim/displayPredefinedReport/{id}",{id:e})}))}}};const ow=(0,r.c)(tw,[["render",$x],["__scopeId","data-v-53049f02"]]);var aw=ow;const lw={class:"orangehrm-card-container"},nw=(0,a.createElementVNode)("br",null,null,-1);function rw(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(d,{module:"pim",name:"pim_defined",prefetch:!0,filters:l.filters,"can-focus":!0,range:!0},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",lw,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.reportName),1)])),_:1})]),nw])),_:1},8,["filters"])}const iw={class:"orangehrm-background-container"},dw={key:0,class:"orangehrm-paper-container"};function sw(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-pagination"),s=(0,a.resolveComponent)("oxd-report-table");return(0,a.openBlock)(),(0,a.createElementBlock)("div",iw,[(0,a.renderSlot)(e.$slots,"default",{generateReport:l.generateReport},void 0,!0),0!==l.headers.length?((0,a.openBlock)(),(0,a.createElementBlock)("div",dw,[(0,a.createVNode)(s,{items:l.items,headers:l.headers,loading:l.isLoading,"column-count":l.colCount,"can-focus":o.canFocus,range:o.range},{pagination:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"oxd-text--count",tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.n_records_found",{count:l.total})),1)])),_:1}),l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])),footer:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"oxd-text--footer",tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.renderSlot)(e.$slots,"footer",{data:l.response},void 0,!0)])),_:3})])),_:3},8,["items","headers","loading","column-count","can-focus","range"])])):(0,a.createCommentVNode)("",!0)])}var cw={name:"ReportsTable",components:{"oxd-report-table":q.OxdReportTable},props:{name:{type:String,required:!0},module:{type:String,required:!0},prefetch:{type:Boolean,default:!1},filters:{type:Object,default:()=>({})},columnCount:{type:Number,default:null,required:!1},canFocus:{type:Boolean,default:!1,required:!1},range:{type:Boolean,default:!1,required:!1}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/${e.module}/reports/data`),o=(0,a.ref)([]),l=(0,a.ref)(e.columnCount?e.columnCount:0),n=(0,a.computed)((()=>({...e.filters,name:e.name,_dateFormattingEnabled:!0}))),{total:r,pages:i,response:d,isLoading:s,currentPage:c,showPaginator:m,execQuery:u}=Dt(t,{query:n,prefetch:!1}),p=(0,a.computed)((()=>{const e=Array.isArray(d.value.data)?d.value.data:[];return e.map((e=>{let t=0;for(const o in e){const a=e[o];Array.isArray(a)&&a.length>t&&(t=a.length)}return{...e,_rows:t}}))})),h=e=>{delete e["size"];const{type:t,...o}=e.cellProperties??{},a=function({prop:e,model:t}){const a=t?._url?t?._url[e]:void 0;return{...o,onClick:a?()=>U(a):void 0}};return{...e,cellProperties:a,cellTemplate:"list"===t?(0,q.CellAdapter)(q.OxdMultilineCell):void 0}},g=async()=>{s.value=!0,t.request({method:"GET",url:`/api/v2/${e.module}/reports`,params:{name:n.value.name,reportId:n.value?.reportId}}).then((e=>{const{data:t,meta:a}=e.data;o.value=t.headers.map((e=>e?.children&&Array.isArray(e.children)?(e.children=e.children.map((e=>h(e))),e):h(e))),a.headers?.columnCount&&(l.value=a.headers.columnCount),s.value=!1}))},v=async()=>{0===o.value.length&&await g(),await u()};return(0,a.watch)((()=>e.name),(()=>{o.value=[]})),e.prefetch&&(0,a.onBeforeMount)((()=>v())),{total:r,pages:i,items:p,headers:o,colCount:l,response:d,isLoading:s,currentPage:c,showPaginator:m,generateReport:v}}};const mw=(0,r.c)(cw,[["render",sw],["__scopeId","data-v-e48ae654"]]);var uw=mw,pw={components:{"reports-table":uw},props:{reportId:{type:String,required:!0},reportName:{type:String,required:!0}},setup(e){const t=(0,a.ref)({reportId:e.reportId});return{filters:t}}};const hw=(0,r.c)(pw,[["render",rw]]);var gw=hw;const vw={class:"orangehrm-background-container"},fw={class:"orangehrm-card-container"};function yw(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-icon-button"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("report-criterion"),v=(0,a.resolveComponent)("report-display-field"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",vw,[(0,a.createElementVNode)("div",fw,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.edit_report")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(b,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.name,"onUpdate:modelValue":t[0]||(t[0]=e=>l.report.name=e),label:e.$t("general.report_name"),placeholder:e.$t("general.type_here_message"),rules:n.rules.name,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.selection_criteria")),1)])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-report-criteria --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.criterion,"onUpdate:modelValue":t[1]||(t[1]=e=>l.report.criterion=e),type:"select",label:e.$t("pim.selection_criteria"),options:l.availableCriteria},null,8,["modelValue","label","options"]),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-report-icon",name:"plus",onClick:l.addCriterion},null,8,["onClick"])])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.includeEmployees,"onUpdate:modelValue":t[2]||(t[2]=e=>l.report.includeEmployees=e),type:"select",label:e.$t("pim.include"),options:n.includeOpts,"show-empty-selector":!1},null,8,["modelValue","label","options"])])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.report.criteriaSelected,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(g,{key:e,operator:l.report.criteriaFieldValues[e.id].operator,"onUpdate:operator":t=>l.report.criteriaFieldValues[e.id].operator=t,valueX:l.report.criteriaFieldValues[e.id].valueX,"onUpdate:valueX":t=>l.report.criteriaFieldValues[e.id].valueX=t,valueY:l.report.criteriaFieldValues[e.id].valueY,"onUpdate:valueY":t=>l.report.criteriaFieldValues[e.id].valueY=t,criterion:e,onDelete:e=>l.removeCriterion(t)},null,8,["operator","onUpdate:operator","valueX","onUpdate:valueX","valueY","onUpdate:valueY","criterion","onDelete"])))),128))])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.display_fields")),1)])),_:1}),(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.fieldGroup,"onUpdate:modelValue":t[3]||(t[3]=e=>l.report.fieldGroup=e),type:"select",label:e.$t("pim.select_display_field_group"),options:l.availableFieldGroups},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(c,{class:"orangehrm-report-criteria --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.report.displayField,"onUpdate:modelValue":t[4]||(t[4]=e=>l.report.displayField=e),type:"select",label:e.$t("pim.select_display_field"),options:l.availableDisplyFields},null,8,["modelValue","label","options"]),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-report-icon",name:"plus",onClick:l.addDisplayField},null,8,["onClick"])])),_:1})])),_:1}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.report.fieldGroupSelected,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(v,{key:e,includeHeader:l.report.displayFieldSelected[e.id].includeHeader,"onUpdate:includeHeader":t=>l.report.displayFieldSelected[e.id].includeHeader=t,"field-group":e,"selected-fields":l.report.displayFieldSelected[e.id].fields,onDelete:e=>l.removeDisplayFieldGroup(t),onDeleteChip:e=>l.removeDisplayField(e,t)},null,8,["includeHeader","onUpdate:includeHeader","field-group","selected-fields","onDelete","onDeleteChip"])))),128))])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(C)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Cw={components:{"report-criterion":Wx,"report-display-field":Kx},props:{selectionCriteria:{type:Array,required:!0},displayFieldGroups:{type:Array,required:!0},displayFields:{type:Array,required:!0},reportId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/pim/reports/defined"),{report:o,addCriterion:a,serializeBody:l,addDisplayField:n,removeCriterion:r,removeDisplayField:i,removeDisplayFieldGroup:d,availableCriteria:s,availableFieldGroups:c,availableDisplyFields:m}=ew(e.selectionCriteria,e.displayFields,e.displayFieldGroups);return{http:t,report:o,addCriterion:a,serializeBody:l,addDisplayField:n,removeCriterion:r,removeDisplayField:i,removeDisplayFieldGroup:d,availableCriteria:s,availableFieldGroups:c,availableDisplyFields:m}},data(){return{isLoading:!1,rules:{name:[Ht,Wt(250)],includeEmployees:[Ht]},includeOpts:[{id:1,key:"onlyCurrent",label:this.$t("general.current_employees_only")},{id:2,key:"currentAndPast",label:this.$t("general.current_and_past_employees")},{id:3,key:"onlyPast",label:this.$t("general.past_employees_only")}]}},beforeMount(){this.isLoading=!0,this.http.get(this.reportId).then((e=>{const{data:t}=e.data;this.report.name=t.name,this.report.includeEmployees=this.includeOpts.find((e=>e.key===t.include));const o=[{id:"eq",label:"Equal"},{id:"lt",label:"Less Than"},{id:"gt",label:"Greater Than"},{id:"between",label:"Range"}];for(const a in t.fieldGroup){const e=this.displayFields.find((e=>e.field_group_id==a));this.report.fieldGroupSelected.push(this.displayFieldGroups.find((e=>e.id==a))),this.report.displayFieldSelected[a]={fields:t.fieldGroup[a].fields.map((t=>e.fields.find((e=>e.id===t)))),includeHeader:t.fieldGroup[a].includeHeader}}for(const a in t.criteria){const e=this.selectionCriteria.find((e=>e.id==a));this.report.criteriaSelected.push(e),this.report.criteriaFieldValues[a]={valueX:t.criteria[a].x,valueY:"undefined"===t.criteria[a].y?null:t.criteria[a].y,operator:o.find((e=>e.id===t.criteria[a].operator))}}return this.http.getAll({limit:0})})).then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>t.name==e));if(o>-1){const{id:e}=t[o];return e==this.reportId||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/pim/viewDefinedPredefinedReports")},onSave(){if(0===Object.keys(this.report.displayFieldSelected).length)return this.$toast.warn({title:this.$t("general.warning"),message:this.$t("pim.at_least_one_display_field_should_be_added")});this.isLoading=!0;const e=this.serializeBody(this.report);this.http.update(this.reportId,e).then((()=>this.$toast.updateSuccess())).then((()=>{U("/pim/displayPredefinedReport/{id}",{id:this.reportId})}))}}};const Vw=(0,r.c)(Cw,[["render",yw],["__scopeId","data-v-2df7cd8e"]]);var bw=Vw;const xw={class:"orangehrm-background-container"},ww={class:"orangehrm-card-container"};function Nw(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("password-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",xw,[(0,a.createElementVNode)("div",ww,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.update_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{ref:"formRef",loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.username")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-user-name",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.userName),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.user.currentPassword,"onUpdate:modelValue":t[0]||(t[0]=e=>n.user.currentPassword=e),type:"password",label:e.$t("pim.current_password"),rules:n.rules.currentPassword,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,{password:n.user.password,"onUpdate:password":t[1]||(t[1]=e=>n.user.password=e),passwordConfirm:n.user.passwordConfirm,"onUpdate:passwordConfirm":t[2]||(t[2]=e=>n.user.passwordConfirm=e)},null,8,["password","passwordConfirm"]),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const _w={currentPassword:"",password:"",passwordConfirm:""};var kw={components:{"password-input":Qa},props:{userName:{type:String,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/core/update-password"),{formRef:t,reset:o}=qc();return{http:e,formRef:t,reset:o}},data(){return{isLoading:!1,user:{..._w},rules:{currentPassword:[Ht,Wt(64)]}}},methods:{onCancel(){window.history.back()},onSave(){this.isLoading=!0,this.http.request({method:"PUT",url:"/api/v2/pim/update-password",data:{newPassword:this.user.password,currentPassword:this.user.currentPassword},validateStatus:e=>e>=200&&e<300||422===e}).then((e=>200===e.status?(this.reset(),this.$toast.saveSuccess()):this.$toast.error({title:this.$t("general.error"),message:this.$t("pim.current_password_is_incorrect")}))).finally((()=>this.isLoading=!1))}}};const Sw=(0,r.c)(kw,[["render",Nw],["__scopeId","data-v-1c01b456"]]);var $w=Sw,Dw={"employee-save":Ep,"employee-list":lh,"employee-personal-details":pg,"employee-contact-details":Cg,"employee-emergency-contacts":qg,"employee-dependents":av,"employee-profile-picture":cv,"employee-salary":Iv,"employee-job":Jv,"employee-qualifications":Xy,"employee-immigration":vC,"employee-membership":fV,"termination-reason-list":kV,"termination-reason-edit":IV,"termination-reason-save":qV,"reporting-method-list":HV,"reporting-method-edit":ZV,"reporting-method-save":nb,"employee-report-to":KC,"custom-field-list":gb,"custom-field-edit":xb,"custom-field-save":Db,"optional-field-list":Mb,"employee-tax-exemption":Qb,"employee-data-import":sx,"employee-report-list":_x,"employee-report-save":aw,"employee-report-view":gw,"employee-report-edit":bw,"update-password":$w};const Ew=e=>((0,a.pushScopeId)("data-v-21cf064a"),e=e(),(0,a.popScopeId)(),e),Tw={class:"orangehrm-background-container"},Iw={class:"orangehrm-card-container"},Bw=Ew((()=>(0,a.createElementVNode)("br",null,null,-1))),Lw={class:"orangehrm-support"},Uw=["src"],Aw=Ew((()=>(0,a.createElementVNode)("a",{class:"orangehrm-support-link",href:"mailto:ossupport@orangehrm.com"}," ossupport@orangehrm.com ",-1)));function Pw(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("oxd-grid");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Tw,[(0,a.createElementVNode)("div",Iw,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("help.getting_started_with_orangehrm")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-support-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("help.getting_started_with_orangehrm_message_1")),1)])),_:1}),Bw,(0,a.createVNode)(i,{tag:"p",class:"orangehrm-support-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("help.getting_started_with_orangehrm_message_2")),1)])),_:1}),(0,a.createElementVNode)("div",Lw,[(0,a.createVNode)(c,{cols:2,class:"orangehrm-support-channel --mail"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("img",{src:n.helpImgSrc,alt:"help image"},null,8,Uw)])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-sub-title",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("help.customer_support")),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-support-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("help.contact_us_on_message"))+" ",1),Aw,(0,a.createTextVNode)(" "+(0,a.toDisplayString)(e.$t("help.we_will_be_delighted_to_help")),1)])),_:1})])),_:1})])),_:1})])])])}var qw={data(){return{helpImgSrc:`${window.appGlobal.publicPath}/images/help.png`}}};const Fw=(0,r.c)(qw,[["render",Pw],["__scopeId","data-v-21cf064a"]]);var Mw=Fw,zw={"view-support":Mw};const jw={class:"orangehrm-background-container"},Rw={class:"orangehrm-card-container"};function Ow(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",jw,[(0,a.createElementVNode)("div",Rw,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.timesheet_period_config")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.timeSheetPeriod.startDay,"onUpdate:modelValue":t[0]||(t[0]=e=>n.timeSheetPeriod.startDay=e),type:"select",label:e.$t("time.add_timesheet_period_config"),options:r.days,rules:n.rules.startDay,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Gw={startDay:null};var Qw={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/time-sheet-period"),{locale:t}=Le();return{http:e,locale:t}},data(){return{isLoading:!1,timeSheetPeriod:{...Gw},rules:{startDay:[Ht]}}},computed:{days(){return Array(7).fill("").map(((...[,e])=>({id:0===e?7:e,label:this.locale.localize.day(e,{width:"wide"})})))}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET"}).then((e=>{const{data:t}=e.data;this.updateTimeSheetPeriodModel(parseInt(t.startDay))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{startDay:this.timeSheetPeriod.startDay?.id}}).then((()=>this.$toast.saveSuccess())).then((()=>{U("/time/viewEmployeeTimesheet")}))},updateTimeSheetPeriodModel(e){this.timeSheetPeriod.startDay=this.days.find((t=>t.id===e))}}};const Hw=(0,r.c)(Qw,[["render",Ow]]);var Ww=Hw;const Yw={class:"orangehrm-background-container"},Jw={class:"orangehrm-paper-container"},Xw={class:"orangehrm-header-container"},Kw={class:"orangehrm-container"},Zw={class:"orangehrm-bottom-container"};function eN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Yw,[(0,a.createElementVNode)("div",Jw,[(0,a.createElementVNode)("div",Xw,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.customers")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Kw,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[1]||(t[1]=e=>l.sortDefinition=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","loading","headers","items"])]),(0,a.createElementVNode)("div",Zw,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[2]||(t[2]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}const tN={"customer.name":"ASC"};var oN={components:{"delete-confirmation":At},props:{unselectableIds:{type:Array,default:()=>[]}},setup(e){const t=t=>t.map((t=>{const o=e.unselectableIds.findIndex((e=>e==t.id));return{id:t.id,name:t.name,description:t.description,isSelectable:-1===o}})),{sortDefinition:o,sortField:l,sortOrder:n,onSort:r}=Pt({sortDefinition:tN}),i=(0,a.computed)((()=>({sortField:l.value,sortOrder:n.value}))),d=new P(window.appGlobal.baseUrl,"/api/v2/time/customers"),{showPaginator:s,currentPage:c,total:m,pages:u,pageSize:p,response:h,isLoading:g,execQuery:v}=Dt(d,{query:i,normalizer:t});return r(v),{http:d,showPaginator:s,currentPage:c,isLoading:g,total:m,pages:u,pageSize:p,execQuery:v,items:h,sortDefinition:o}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),sortField:"customer.name",style:{flex:2}},{name:"description",title:this.$t("general.description"),style:{flex:4}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/time/addCustomer")},onClickEdit(e){U("/time/addCustomer/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("time.not_allowed_to_delete_customer_who_have_time_logged_against")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const aN=(0,r.c)(oN,[["render",eN]]);var lN=aN;const nN={class:"orangehrm-background-container"},rN={class:"orangehrm-card-container"};function iN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",nN,[(0,a.createElementVNode)("div",rN,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.add_customer")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.customer.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.customer.description=e),type:"textarea",label:e.$t("general.description"),placeholder:"Type description here",rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const dN={id:"",name:"",description:""};var sN={setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/customers");return e.setIgnorePath("/api/v2/time/validation/customer-name"),{http:e}},data(){return{isLoading:!1,customer:{...dN},rules:{name:[Ht,Wt(50),(0,q.promiseDebounce)(this.validateCustomerName,500)],description:[Wt(255)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.customer.name,description:this.customer.description}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/time/viewCustomers")},validateCustomerName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/time/validation/customer-name",params:{customerName:this.customer.name.trim()}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const cN=(0,r.c)(sN,[["render",iN]]);var mN=cN;const uN={class:"orangehrm-background-container"},pN={class:"orangehrm-card-container"};function hN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",uN,[(0,a.createElementVNode)("div",pN,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.edit_customer")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.customer.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.customer.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const gN={id:"",name:"",description:""};var vN={props:{customerId:{type:String,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/customers");return e.setIgnorePath("/api/v2/time/validation/customer-name"),{http:e}},data(){return{isLoading:!1,customer:{...gN},rules:{name:[Ht,Wt(50),(0,q.promiseDebounce)(this.validateCustomerName,500)],description:[Wt(255)]}}},created(){this.isLoading=!0,this.http.get(this.customerId).then((e=>{const{data:t}=e.data;this.customer.id=t.id,this.customer.name=t.name,this.customer.description=t.description})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.customerId,{name:this.customer.name,description:this.customer.description}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/time/viewCustomers")},validateCustomerName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/time/validation/customer-name",params:{customerName:this.customer.name.trim(),customerId:this.customerId}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const fN=(0,r.c)(vN,[["render",hN]]);var yN=fN;const CN={class:"orangehrm-background-container"},VN=(0,a.createElementVNode)("br",null,null,-1);function bN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("timesheet-period"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("timesheet"),m=(0,a.resolveComponent)("timesheet-actions");return(0,a.openBlock)(),(0,a.createElementBlock)("div",CN,[(0,a.createVNode)(c,{loading:e.isLoading,columns:e.timesheetColumns,records:e.timesheetRecords,"timesheet-id":e.timesheetId,subtotal:e.timesheetSubtotal},{"header-title":(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.my_timesheet")),1)])),_:1})])),"header-options":(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:e.date,"onUpdate:modelValue":t[0]||(t[0]=t=>e.date=t),value:l.timesheetPeriod,onPrevious:l.onClickPrevious,onNext:l.onClickNext},null,8,["modelValue","value","onPrevious","onNext"])])),"footer-title":(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.status"))+": "+(0,a.toDisplayString)(r.myTimesheetStatus),1)])),_:1},512),[[a.vShow,e.timesheetStatus]])])),"footer-options":(0,a.withCtx)((()=>[l.showCreateTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"display-type":"secondary",disabled:l.canCreateTimesheet,label:e.$t("time.create_timesheet"),onClick:l.onClickCreateTimesheet},null,8,["disabled","label","onClick"])):(0,a.createCommentVNode)("",!0),l.canEditTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,"display-type":"ghost",label:e.$t("general.edit"),onClick:l.onClickEdit},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),l.canSubmitTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:2,"display-type":"secondary",label:e.$t("general.submit"),onClick:l.onClickSubmit},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","columns","records","timesheet-id","subtotal"]),VN,e.timesheetId?((0,a.openBlock)(),(0,a.createBlock)(m,{key:e.timesheetId,"timesheet-id":e.timesheetId},null,8,["timesheet-id"])):(0,a.createCommentVNode)("",!0)])}const xN=e=>((0,a.pushScopeId)("data-v-11ac24dc"),e=e(),(0,a.popScopeId)(),e),wN={class:"orangehrm-timesheet-header"},NN={class:"orangehrm-timesheet-header--title"},_N={class:"orangehrm-timesheet-header--options"},kN={key:0,class:"orangehrm-timesheet-loader"},SN={key:1,class:"orangehrm-timesheet-body-message"},$N={key:2,class:"orangehrm-timesheet-body"},DN={class:"orangehrm-timesheet-table-header"},EN={class:"orangehrm-timesheet-table-header-row"},TN={class:"orangehrm-timesheet-table-header-cell"},IN={class:"--day"},BN={key:0,class:"orangehrm-timesheet-table-header-cell --center --freeze-right"},LN={class:"orangehrm-timesheet-table-body"},UN={key:1},AN={class:"orangehrm-timesheet-table-body-cell"},PN={key:1},qN={key:1},FN={key:0,class:"orangehrm-timesheet-table-body-cell --center --freeze-right --highlight"},MN={key:1,class:"orangehrm-timesheet-table-body-cell --flex"},zN={key:0,class:"orangehrm-timesheet-table-body-row --total"},jN={class:"orangehrm-timesheet-table-body-cell --freeze-left --highlight"},RN=xN((()=>(0,a.createElementVNode)("td",null,null,-1))),ON={class:"orangehrm-timesheet-table-body-cell --center --freeze-right --highlight-2"},GN={key:1,class:"orangehrm-timesheet-table-body-row"},QN={class:"orangehrm-timesheet-table-body-cell --flex"},HN={key:2,class:"orangehrm-timesheet-table-body-row"},WN={colspan:"9",class:"orangehrm-timesheet-table-body-cell"},YN={class:"orangehrm-timesheet-footer"},JN={class:"orangehrm-timesheet-footer--title"},XN={class:"orangehrm-timesheet-footer--options"};function KN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-loading-spinner"),d=(0,a.resolveComponent)("oxd-alert"),s=(0,a.resolveComponent)("project-autocomplete"),c=(0,a.resolveComponent)("activity-dropdown"),m=(0,a.resolveComponent)("oxd-icon-button"),u=(0,a.resolveComponent)("oxd-input-field"),p=(0,a.resolveComponent)("oxd-text"),h=(0,a.resolveComponent)("timesheet-comment-modal"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createBlock)(g,{class:"orangehrm-paper-container"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",wN,[(0,a.createElementVNode)("div",NN,[(0,a.renderSlot)(e.$slots,"header-title",{},void 0,!0)]),(0,a.createElementVNode)("div",_N,[(0,a.renderSlot)(e.$slots,"header-options",{},void 0,!0)])]),o.loading?((0,a.openBlock)(),(0,a.createElementBlock)("div",kN,[(0,a.createVNode)(i)])):o.loading||o.columns?((0,a.openBlock)(),(0,a.createElementBlock)("div",$N,[(0,a.createElementVNode)("table",{class:(0,a.normalizeClass)(r.tableClasses)},[(0,a.createElementVNode)("thead",DN,[(0,a.createElementVNode)("tr",EN,[(0,a.createElementVNode)("th",{class:(0,a.normalizeClass)(r.fixedColumnClasses)},(0,a.toDisplayString)(e.$t("time.project")),3),(0,a.createElementVNode)("th",TN,(0,a.toDisplayString)(e.$t("time.activity")),1),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(r.daysOfWeek,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("th",{key:e.id,class:"orangehrm-timesheet-table-header-cell --center"},[(0,a.createElementVNode)("span",IN,(0,a.toDisplayString)(e.day),1),(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.title),1)])))),128)),o.editable?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("th",BN,(0,a.toDisplayString)(e.$t("general.total")),1))])]),(0,a.createElementVNode)("tbody",LN,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.records,((e,t)=>((0,a.openBlock)(),(0,a.createElementBlock)("tr",{key:e,class:"orangehrm-timesheet-table-body-row"},[(0,a.createElementVNode)("td",{class:(0,a.normalizeClass)(r.fixedCellClasses)},[o.editable?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"only-allowed":!1,rules:n.rules.project,"model-value":r.getProject(e),"onUpdate:modelValue":e=>r.updateProject(e,t)},null,8,["rules","model-value","onUpdate:modelValue"])):((0,a.openBlock)(),(0,a.createElementBlock)("span",UN,(0,a.toDisplayString)(e.project?`${e.customer.name} - ${e.project.name}`:""),1))],2),(0,a.createElementVNode)("td",AN,[o.editable?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,rules:n.rules.activity,"project-id":e.project&&e.project.id,"model-value":r.getActivity(e.activity),"onUpdate:modelValue":e=>r.updateActivity(e,t)},null,8,["rules","project-id","model-value","onUpdate:modelValue"])):((0,a.openBlock)(),(0,a.createElementBlock)("span",PN,(0,a.toDisplayString)(e.activity&&e.activity.name),1))]),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.columns,((l,n)=>((0,a.openBlock)(),(0,a.createElementBlock)("td",{key:`${e.project}_${e.activity}_${n}`,class:(0,a.normalizeClass)({"orangehrm-timesheet-table-body-cell":!0,"--center":!0,"--duration-input":o.editable,"--highlight-3":!o.editable&&l.workday})},[(0,a.withDirectives)((0,a.createVNode)(m,{"display-type":"secondary",class:"orangehrm-timesheet-icon-comment",name:r.getCommentIcon(e.dates[n]),onMousedown:o=>r.viewComment(e,e.dates[n],t,n)},null,8,["name","onMousedown"]),[[a.vShow,r.isCommentVisible(e.dates[n],t,n)]]),o.editable?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,autocomplete:"off",rules:r.validateDuration(n),"model-value":r.getDuration(e.dates[n]),onBlur:r.onDurationBlur,onFocus:e=>r.onDurationFocus(t,n),"onUpdate:modelValue":e=>r.updateTime(e,t,n)},null,8,["rules","model-value","onBlur","onFocus","onUpdate:modelValue"])):((0,a.openBlock)(),(0,a.createElementBlock)("span",qN,(0,a.toDisplayString)(r.getDuration(e.dates[n])??"00:00"),1))],2)))),128)),o.editable?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("td",FN,(0,a.toDisplayString)(e.total.label),1)),o.editable?((0,a.openBlock)(),(0,a.createElementBlock)("td",MN,[(0,a.createVNode)(m,{name:"trash",class:"orangehrm-timesheet-icon",onClick:e=>r.deleteRow(t)},null,8,["onClick"])])):(0,a.createCommentVNode)("",!0)])))),128)),!o.editable&&o.records.length>0?((0,a.openBlock)(),(0,a.createElementBlock)("tr",zN,[(0,a.createElementVNode)("td",jN,(0,a.toDisplayString)(e.$t("general.total")),1),RN,((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.columns,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("td",{key:`total-${e}`,class:"orangehrm-timesheet-table-body-cell --center"},(0,a.toDisplayString)(e.total.label),1)))),128)),(0,a.createElementVNode)("td",ON,(0,a.toDisplayString)(o.subtotal),1)])):(0,a.createCommentVNode)("",!0),o.editable?((0,a.openBlock)(),(0,a.createElementBlock)("tr",GN,[(0,a.createElementVNode)("td",QN,[(0,a.createVNode)(m,{name:"plus",class:"orangehrm-timesheet-icon",onClick:r.addRow},null,8,["onClick"]),(0,a.createVNode)(p,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.add_row")),1)])),_:1})])])):(0,a.createCommentVNode)("",!0),0===o.records.length?((0,a.openBlock)(),(0,a.createElementBlock)("tr",HN,[(0,a.createElementVNode)("td",WN,(0,a.toDisplayString)(e.$t("general.no_records_found")),1)])):(0,a.createCommentVNode)("",!0)])],2)])):((0,a.openBlock)(),(0,a.createElementBlock)("div",SN,[(0,a.createVNode)(d,{type:"warn",show:!0,message:e.$t("time.no_timesheets_found")},null,8,["message"])])),(0,a.createElementVNode)("div",YN,[(0,a.createElementVNode)("div",JN,[(0,a.renderSlot)(e.$slots,"footer-title",{},void 0,!0)]),(0,a.createElementVNode)("div",XN,[(0,a.renderSlot)(e.$slots,"footer-options",{},void 0,!0)])]),n.showCommentModal?((0,a.openBlock)(),(0,a.createBlock)(h,{key:3,editable:o.editable,data:n.commentModalState,"timesheet-id":o.timesheetId,onClose:r.onCommentModalClose},null,8,["editable","data","timesheet-id","onClose"])):(0,a.createCommentVNode)("",!0)])),_:3})}function ZN(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",options:l.options},null,8,["options"])}var e_={name:"ActivityDropdown",props:{projectId:{type:Number,required:!1,default:null}},setup(e){const t=(0,a.ref)([]),o=new P(window.appGlobal.baseUrl,"");return(0,a.watchEffect)((async()=>{e.projectId?o.request({method:"GET",url:`/api/v2/time/project/${e.projectId}/activities`,params:{limit:0}}).then((({data:e})=>{t.value=e.data.map((e=>({id:e.id,label:e.name,isDeleted:e.deleted})))})):t.value=[]})),{options:t}}};const t_=(0,r.c)(e_,[["render",ZN],["__scopeId","data-v-1762709c"]]);var o_=t_;function a_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",clear:!1,label:e.$t("time.project"),"create-options":r.loadProjects},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var l_={name:"ProjectAutocomplete",props:{onlyAllowed:{type:Boolean,required:!1,default:!0},excludeProjectIds:{type:Array,required:!1,default:()=>[]},excludeCustomerName:{type:Boolean,default:!1}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/projects");return{http:e}},methods:{async loadProjects(e){return new Promise((t=>{if(e.trim()){const o={name:this.excludeCustomerName?e.trim():void 0,onlyAllowed:this.onlyAllowed,model:"detailed",excludeProjectIds:this.excludeProjectIds.length>0?this.excludeProjectIds:void 0,customerOrProjectName:this.excludeCustomerName?void 0:e.trim()};this.http.getAll(o).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:this.excludeCustomerName?e.name:`${e.customer?.name} - ${e.name}`,_customer:e.customer}))))}))}else t([])}))}}};const n_=(0,r.c)(l_,[["render",a_],["__scopeId","data-v-037c7e9a"]]);var r_=n_;const i_={class:"orangehrm-modal-header"};function d_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{style:{width:"90%",maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",i_,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.comment")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:2,class:"orangehrm-timesheet-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.project"))+": ",1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.projectName),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.activity"))+": ",1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.data.activity.name),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.date"))+": ",1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timesheet-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.commentDate),1)])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.comment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.comment=e),type:"textarea",placeholder:e.$t("general.comment_here"),rules:n.rules.comment,disabled:!o.editable},null,8,["modelValue","placeholder","rules","disabled"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.withDirectives)((0,a.createVNode)(p,null,null,512),[[a.vShow,o.editable]])])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}var s_={name:"TimesheetCommentModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0},editable:{type:Boolean,required:!0},timesheetId:{type:Number,required:!0}},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/timesheets"),{locale:t}=Le(),{jsDateFormat:o}=R();return{http:e,locale:t,jsDateFormat:o}},data(){return{isLoading:!1,comment:null,rules:{comment:[Wt(2e3)]}}},computed:{projectName(){const{project:e,customer:t}=this.data;return e?.label?e.label:`${t?.name} - ${e?.name}`},commentDate(){const{date:e}=this.data;return e?pe(ue(e),this.jsDateFormat,{locale:this.locale}):null}},beforeMount(){this.data?.id&&(this.isLoading=!0,this.http.request({method:"GET",url:`/api/v2/time/timesheets/${this.timesheetId}/entries/${this.data.id}/comment`}).then((e=>{const{data:t}=e.data;this.comment=t?.comment})).finally((()=>{this.isLoading=!1})))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",url:`/api/v2/time/timesheets/${this.timesheetId}/entries/comment`,data:{date:this.data.date,comment:this.comment,projectId:this.data.project.id,activityId:this.data.activity.id}}).then((e=>{const{data:t}=e.data;this.$toast.saveSuccess(),this.$emit("close",t)}))},onCancel(){this.comment=null,this.$emit("close")}}};const c_=(0,r.c)(s_,[["render",d_],["__scopeId","data-v-21c679b4"]]);var m_=c_,u_={name:"Timesheet",components:{"oxd-alert":q.OxdAlert,"oxd-loading-spinner":q.OxdSpinner,"activity-dropdown":o_,"project-autocomplete":r_,"timesheet-comment-modal":m_},props:{records:{type:Array,default:()=>[]},columns:{type:Object,required:!1,default:()=>null},subtotal:{type:String,required:!1,default:null},editable:{type:Boolean,default:!1},loading:{type:Boolean,default:!1},timesheetId:{type:Number,default:null}},emits:["update:records"],data(){return{focusedField:null,showCommentModal:!1,commentModalState:null,rules:{project:[So,e=>null!==e||this.$t("time.select_a_project")],activity:[e=>null!==e||this.$t("time.select_an_activity"),e=>this.records.filter((t=>t.activity?.id===e?.id)).length<2||this.$t("time.duplicate_record")]}}},computed:{days(){return this.columns?Object.keys(this.columns):[]},dailyTotals(){const e={};for(const t in this.columns)e[t]=this.records.reduce(((e,o)=>{const a=we(o.dates[t]?.duration);return a>0?e+a:e}),0);return e},daysOfWeek(){const e=[this.$t("general.sun"),this.$t("general.mon"),this.$t("general.tue"),this.$t("general.wed"),this.$t("general.thu"),this.$t("general.fri"),this.$t("general.sat")];return this.days.map((t=>{const o=ue(t,"yyyy-MM-dd");return{id:o.valueOf(),day:o.getDate(),title:e[o.getDay()]}}))},tableClasses(){return{"orangehrm-timesheet-table":!0,"--editable":this.editable}},fixedColumnClasses(){return{"orangehrm-timesheet-table-header-cell":!0,"--freeze-left":!this.editable}},fixedCellClasses(){return{"orangehrm-timesheet-table-body-cell":!0,"--freeze-left":!this.editable}}},methods:{deleteRow(e){const t=this.records.filter(((t,o)=>o!==e));this.syncRecords(t),this.$nextTick().then((()=>{0===t.length&&this.addRow()}))},addRow(){const e=[...this.records,{project:null,activity:null,dates:{}}];this.syncRecords(e)},updateTime(e,t,o){const a=this.records.map(((a,l)=>{if(l===t){const t={[o]:{date:o,duration:e,id:a.dates[o]?.id,comment:a.dates[o]?.comment}};a.dates={...a.dates,...t}}return a}));this.syncRecords(a)},updateComment(e,t,o,a){const l=this.records.map(((l,n)=>{if(n===o){const o={[a]:{id:e,date:a,comment:t,duration:l.dates[a]?.duration}};l.dates={...l.dates,...o}}return l}));this.syncRecords(l)},updateProject(e,t){const o=this.records.map(((o,a)=>(a===t&&(o.project=e||null,o.customer=e?._customer?e._customer:null),o)));this.updateActivity(null,t),this.syncRecords(o)},updateActivity(e,t){const o=this.records.map(((o,a)=>(a===t&&(o.activity=e?{id:e.id,name:e.label}:null),o)));this.syncRecords(o)},syncRecords(e){this.editable&&this.$emit("update:records",e)},viewComment(e,t,o,a){e.project?.id&&e.activity?.id?(this.commentModalState={date:a,index:o,id:t?.id,project:e.project,activity:e.activity,customer:e.customer},this.showCommentModal=!0):this.$toast.warn({title:this.$t("general.warning"),message:this.$t("time.select_a_project_and_an_activity")})},onCommentModalClose(e){if(e){const{id:t,comment:o}=e,{index:a,date:l}=this.commentModalState;this.updateComment(t,o,a,l)}this.showCommentModal=!1,this.commentModalState=null},getProject(e){const{project:t,customer:o}=e;return t&&t.label?t:t&&o?{id:t.id,label:`${o.name} - ${t.name}`}:null},getActivity(e){return e?{id:e.id,label:e.name}:null},getDuration(e){return e?.duration?e.duration:null},getCommentIcon(e){return e?.comment?"chat-dots-fill":"chat-dots"},isCommentVisible(e,t,o){return!!e?.comment||!!this.editable&&(this.focusedField&&this.focusedField.index===t&&this.focusedField.date===o)},onDurationFocus(e,t){this.focusedField={index:e,date:t}},onDurationBlur(){this.focusedField=null},validateDuration(e){const t=e=>""===e||null===e||we(e)>=0||this.$t("time.should_be_less_than_24_and_in_hh_mm_or_decimal_format"),o=()=>!(this.dailyTotals[e]>86400)||this.$t("time.total_should_be_less_than_24_hours");return[t,o]}}};const p_=(0,r.c)(u_,[["render",KN],["__scopeId","data-v-11ac24dc"]]);var h_=p_;function g_(e){const t=(0,a.reactive)({isLoading:!1,employee:null,timesheet:null,timesheetId:null,timesheetRecords:[],timesheetStatus:null,timesheetColumns:null,timesheetSubtotal:null,timesheetAllowedActions:[],date:null}),o=(t,o)=>e.request({method:"GET",url:"/api/v2/time/timesheets/default",params:{date:t,empNumber:o}}),l=(t,o,a,l)=>e.request({method:"PUT",url:l?`/api/v2/time/employees/${l}/timesheets/${t}`:`/api/v2/time/timesheets/${t}`,data:{action:o,comment:a||void 0}}),n=(t,o)=>new Promise((a=>{e.request({method:"GET",url:o?`/api/v2/time/employees/timesheets/${t}/entries`:`/api/v2/time/timesheets/${t}/entries`}).then((e=>{const{data:t,meta:o}=e.data,{timesheet:l,allowedActions:n}=o;a({data:t,meta:o,timesheet:l,allowedActions:n})}))})),r=(t,o,a)=>e.request({method:"PUT",url:a?`/api/v2/time/employees/timesheets/${t}/entries`:`/api/v2/time/timesheets/${t}/entries`,data:{...o}});return{state:t,fetchTimesheet:o,updateTimesheet:l,fetchTimesheetEntries:n,updateTimesheetEntries:r}}function v_(e,t,o){const{state:l,fetchTimesheet:n,updateTimesheet:r,fetchTimesheetEntries:i}=g_(e),{noRecordsFound:d,success:s}=Nt(),{$t:c}=Be(),{jsDateFormat:m}=R(),{locale:u}=Le();l.date=t||pe(me(),"yyyy-MM-dd");const p=e=>{e&&null===ue(e)||(l.isLoading=!0,n(e,o).then((e=>{const{data:t}=e.data;return l.timesheet=t,l.timesheetId=t.id,t.id?i(t.id,void 0!==o):null})).then((e=>{if(null!==e){const{data:t,meta:o,timesheet:a,allowedActions:n}=e;l.timesheetRecords=t,l.employee=o.employee,l.timesheetColumns=o.columns,l.timesheetSubtotal=o.sum.label,l.timesheetStatus=a.status.name,l.timesheetAllowedActions=n,0===t.length&&d()}else l.employee=null,l.timesheetRecords=[],l.timesheetColumns=null,l.timesheetStatus=null,l.timesheetSubtotal=null,l.timesheetAllowedActions=[]})).finally((()=>{l.isLoading=!1})))};(0,a.watchEffect)((async()=>l.date&&p(l.date)));const h=()=>{const e=ue(String(l.date),"yyyy-MM-dd")??me();e.setDate(e.getDate()-7),l.date=pe(e,"yyyy-MM-dd")},g=()=>{const e=ue(String(l.date),"yyyy-MM-dd")??me();e.setDate(e.getDate()+7),l.date=pe(e,"yyyy-MM-dd")},v=()=>{l.timesheetId&&U("/time/editTimesheet/{id}",{id:l.timesheetId})},f=()=>{l.timesheetId&&(l.isLoading=!0,r(l.timesheetId,"SUBMIT",null,o).then((()=>{s({title:c("general.success"),message:c("time.timesheet_submitted")}),l.timesheetId=null,p(l.date)})))},y=()=>{l.timesheetId&&(l.isLoading=!0,r(l.timesheetId,"RESET",null,o).then((()=>{s({title:c("general.success"),message:c("time.timesheet_reset")}),l.timesheetId=null,p(l.date)})))},C=e=>{l.timesheetId&&(l.isLoading=!0,r(l.timesheetId,"APPROVE",e,o).then((()=>{s({title:c("general.success"),message:c("time.timesheet_approved")}),l.timesheetId=null,p(l.date)})))},V=e=>{l.timesheetId&&(l.isLoading=!0,r(l.timesheetId,"REJECT",e,o).then((()=>{s({title:c("general.success"),message:c("time.timesheet_rejected")}),l.timesheetId=null,p(l.date)})))},b=()=>{l.isLoading=!0,e.request({method:"POST",url:o?`/api/v2/time/employees/${o}/timesheets`:"/api/v2/time/timesheets",data:{date:l.date}}).then((()=>{s({title:c("general.success"),message:c("time.timesheet_successfully_created")}),p(l.date)}))},x=(0,a.computed)((()=>!l.isLoading&&!l.timesheetId)),w=(0,a.computed)((()=>l.timesheetAllowedActions.find((e=>"SUBMIT"===e.action)))),N=(0,a.computed)((()=>l.timesheetAllowedActions.find((e=>"APPROVE"===e.action)))),_=(0,a.computed)((()=>l.timesheetAllowedActions.find((e=>"REJECT"===e.action)))),k=(0,a.computed)((()=>l.timesheetAllowedActions.find((e=>"RESET"===e.action)))),S=(0,a.computed)((()=>l.timesheetAllowedActions.find((e=>"MODIFY"===e.action)))),$=(0,a.computed)((()=>{const e=ue(String(l.date),"yyyy-MM-dd")??me();return e>me()})),D=(0,a.computed)((()=>{const e=ue(l.timesheet?.startDate||""),t=ue(l.timesheet?.endDate||"");return e&&t?`${pe(e,m,{locale:u})} ${c("general.to").toLowerCase()} ${pe(t,m,{locale:u})}`:null}));return{state:l,onClickEdit:v,onClickNext:g,onClickReset:y,onClickSubmit:f,onClickReject:V,onClickApprove:C,onClickPrevious:h,timesheetPeriod:D,canEditTimesheet:S,canResetTimesheet:k,canSubmitTimesheet:w,canRejectTimesheet:_,canCreateTimesheet:$,canApproveTimesheet:N,showCreateTimesheet:x,onClickCreateTimesheet:b}}const f_={class:"orangehrm-timeperiod-picker"};function y_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("date-input");return(0,a.openBlock)(),(0,a.createElementBlock)("div",f_,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-timeperiod-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.timesheet_period")),1)])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-timeperiod-icon --prev",name:"chevron-left",onClick:t[0]||(t[0]=t=>e.$emit("previous",t))}),(0,a.createVNode)(s,(0,a.normalizeProps)((0,a.guardReactiveProps)(e.$attrs)),null,16),(0,a.createVNode)(d,{class:"orangehrm-timeperiod-icon --next",name:"chevron-right",onClick:t[1]||(t[1]=t=>e.$emit("next",t))})])}var C_={name:"TimesheetPeriod",inheritAttrs:!1,emits:["previous","next"]};const V_=(0,r.c)(C_,[["render",y_],["__scopeId","data-v-008d2988"]]);var b_=V_;const x_={key:0,class:"orangehrm-paper-container"},w_={class:"orangehrm-header-container"},N_={class:"orangehrm-container"},__={class:"orangehrm-bottom-container"},k_={key:1};function S_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-card-table"),s=(0,a.resolveComponent)("oxd-pagination");return l.total>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",x_,[(0,a.createElementVNode)("div",w_,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.actions_performed_on_the_timesheet")),1)])),_:1})]),(0,a.createElementVNode)("div",N_,[(0,a.createVNode)(d,{headers:n.headers,items:l.items?.data,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items","loading"])]),(0,a.createElementVNode)("div",__,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])):((0,a.openBlock)(),(0,a.createElementBlock)("div",k_))}var $_={name:"TimesheetActions",props:{timesheetId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/time/timesheets/${e.timesheetId}/action-logs`),{$t:o}=Be(),{jsDateFormat:a}=R(),{locale:l}=Le(),n=e=>e.map((e=>{let t,n=e.action?.label;const r=e.performedEmployee?.firstName,i=e.performedEmployee?.lastName;switch(n){case"Submitted":n=o("time.submitted");break;case"Rejected":n=o("leave.rejected");break;case"Not Submitted":n=o("time.not_submitted");break;case"Approved":n=o("time.approved");break}return t=r&&i?`${r} ${i}`:o("general.purged_employee"),e.performedEmployee?.terminationId&&(t+=` (${o("general.past_employee")})`),{id:e.id,action:n,date:pe(ue(e.date),a,{locale:l}),comment:e.comment,performedBy:t}})),{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(t,{toastNoRecords:!1,normalizer:n});return{http:t,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m}},data(){return{headers:[{name:"action",slot:"title",title:this.$t("general.actions"),style:{flex:1}},{name:"performedBy",title:this.$t("general.performed_by"),style:{flex:1}},{name:"date",title:this.$t("general.date"),style:{flex:1}},{name:"comment",cellType:"oxd-table-cell-truncate",title:this.$t("general.comment"),style:{flex:1}}]}}};const D_=(0,r.c)($_,[["render",S_]]);var E_=D_,T_={components:{timesheet:h_,"timesheet-period":b_,"timesheet-actions":E_},props:{startDate:{type:String,required:!1,default:null}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/time/timesheets"),{state:o,onClickEdit:l,onClickNext:n,onClickSubmit:r,onClickPrevious:i,timesheetPeriod:d,canEditTimesheet:s,canSubmitTimesheet:c,canCreateTimesheet:m,showCreateTimesheet:u,onClickCreateTimesheet:p}=v_(t,e.startDate);return{onClickEdit:l,onClickNext:n,onClickSubmit:r,onClickPrevious:i,...(0,a.toRefs)(o),timesheetPeriod:d,canEditTimesheet:s,canSubmitTimesheet:c,canCreateTimesheet:m,showCreateTimesheet:u,onClickCreateTimesheet:p}},data(){return{statuses:[{id:1,label:this.$t("time.submitted"),name:"Submitted"},{id:2,label:this.$t("leave.rejected"),name:"Rejected"},{id:3,label:this.$t("time.not_submitted"),name:"Not Submitted"},{id:4,label:this.$t("time.approved"),name:"Approved"}]}},computed:{myTimesheetStatus(){return this.statuses.find((e=>e.name===this.timesheetStatus))?.label||null}}};const I_=(0,r.c)(T_,[["render",bN]]);var B_=I_;const L_={class:"orangehrm-background-container"};function U_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("timesheet");return(0,a.openBlock)(),(0,a.createElementBlock)("div",L_,[(0,a.createVNode)(s,{records:e.timesheetRecords,"onUpdate:records":t[0]||(t[0]=t=>e.timesheetRecords=t),editable:!0,loading:e.isLoading,"timesheet-id":o.timesheetId,columns:e.timesheetColumns,onSubmitValid:l.onSave},{"header-title":(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.title),1)])),_:1})])),"header-options":(0,a.withCtx)((()=>[r.timesheetDateRange?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,tag:"p",class:"orangehrm-timeperiod-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.timesheet_period")),1)])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.timesheetDateRange),1)])),_:1})])),"footer-options":(0,a.withCtx)((()=>[(0,a.createVNode)(d,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:l.onClickCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{"display-type":"ghost",label:e.$t("general.reset"),onClick:l.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(d,{type:"submit","display-type":"secondary",label:e.$t("general.save")},null,8,["label"])])),_:1},8,["records","loading","timesheet-id","columns","onSubmitValid"])])}var A_={components:{timesheet:h_},props:{myTimesheet:{type:Boolean,default:!1},timesheetId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/time/timesheets");t.setIgnorePath("/api/v2/time/timesheets/[0-9]+/entries");let o=[];const{saveSuccess:l}=Nt(),{state:n,fetchTimesheetEntries:r,updateTimesheetEntries:i}=g_(t),{jsDateFormat:d}=R(),{locale:s}=Le(),{$tEmpName:c}=Da(),m=()=>{n.isLoading=!0,o=[],n.timesheetRecords=[],r(e.timesheetId,!e.myTimesheet).then((e=>{const{data:t,meta:a,timesheet:l,allowedActions:r}=e;n.timesheet=l,n.employee=a.employee,n.timesheetColumns=a.columns,n.timesheetSubtotal=a.sum.label,n.timesheetStatus=l.status.name,n.timesheetAllowedActions=r,t.length>0?(n.timesheetRecords=t,o=JSON.parse(JSON.stringify(t))):(n.timesheetRecords.push({project:null,activity:null,dates:{}}),o.push({project:null,activity:null,dates:{}})),n.isLoading=!1}))},u=()=>m(),p=()=>{e.myTimesheet?U("/time/viewMyTimesheet",{},{startDate:n.timesheet.startDate}):U("/time/viewTimesheet/employeeId/{id}",{id:n.employee?.empNumber},{startDate:n.timesheet.startDate})},h=()=>{n.isLoading=!0;const t={entries:n.timesheetRecords.map((e=>{const t={};for(const o in e.dates){const a=we(e.dates[o].duration);t[o]={duration:a>0?xe(a):"00:00"}}return{projectId:e.project.id,activityId:e.activity.id,dates:t}})),deletedEntries:o.filter((e=>!!e.project&&n.timesheetRecords.findIndex((t=>t.project.id===e.project.id&&t.activity.id===e.activity.id))<0)).map((e=>({projectId:e.project.id,activityId:e.activity.id})))};i(e.timesheetId,t,!e.myTimesheet).then((()=>l())).catch((()=>l())).then((()=>{p()}))};return(0,a.onBeforeMount)((()=>m())),{onSave:h,onClickReset:u,onClickCancel:p,...(0,a.toRefs)(n),jsDateFormat:d,locale:s,translateEmpName:c}},computed:{title(){if(this.myTimesheet)return this.$t("time.edit_timesheet");if(this.employee){const e=this.translateEmpName(this.employee,{includeMiddle:!1,excludePastEmpTag:!1});return`${this.$t("time.edit_timesheet_for")} ${e}`}return""},timesheetDateRange(){if(!this.timesheet)return"";const e=pe(ue(this.timesheet.startDate),this.jsDateFormat,{locale:this.locale}),t=pe(ue(this.timesheet.endDate),this.jsDateFormat,{locale:this.locale});return`${e} - ${t}`}}};const P_=(0,r.c)(A_,[["render",U_],["__scopeId","data-v-0ba9f580"]]);var q_=P_;const F_={class:"orangehrm-background-container"},M_=(0,a.createElementVNode)("br",null,null,-1),z_={class:"orangehrm-paper-container"},j_={key:0,class:"orangehrm-header-container"},R_={class:"orangehrm-container"},O_={class:"orangehrm-bottom-container"};function G_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("customer-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("project-autocomplete"),c=(0,a.resolveComponent)("project-admin-autocomplete"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-divider"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("oxd-card-table"),b=(0,a.resolveComponent)("oxd-pagination"),x=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",F_,[(0,a.createVNode)(y,{"filter-title":e.$t("general.projects")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:r.filterItems,onReset:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.customer,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.customer=e),rules:n.rules.customer},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.project,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.project=e),"exclude-customer-name":!0,rules:n.rules.project},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.projectAdmin,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.projectAdmin=e),"show-delete":!1,rules:n.rules.projectAdmin},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{type:"reset","display-type":"ghost",label:e.$t("general.reset")},null,8,["label"]),(0,a.createVNode)(g,{label:e.$t("general.search")},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),M_,(0,a.createElementVNode)("div",z_,[e.$can.create("time_projects")?((0,a.openBlock)(),(0,a.createElementBlock)("div",j_,[(0,a.createVNode)(h,{"icon-name":"plus","display-type":"secondary",label:e.$t("general.add"),onClick:r.onClickAdd},null,8,["label","onClick"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(C,{selected:n.checkedItems.length,loading:l.isLoading,total:l.total,"show-divider":e.$can.create("time_projects"),onDelete:r.onClickDeleteSelected},null,8,["selected","loading","total","show-divider","onDelete"]),(0,a.createElementVNode)("div",R_,[(0,a.createVNode)(V,{selected:n.checkedItems,"onUpdate:selected":t[3]||(t[3]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[4]||(t[4]=e=>l.sortDefinition=e),headers:r.headers,items:l.items?.data,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card",selectable:e.$can.delete("time_projects")},null,8,["selected","order","headers","items","loading","selectable"])]),(0,a.createElementVNode)("div",O_,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,current:l.currentPage,"onUpdate:current":t[5]||(t[5]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(x,{ref:"deleteDialog"},null,512)])}function Q_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",clear:!1,label:e.$t("time.customer_name"),"create-options":r.loadCustomers},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var H_={name:"CustomerAutocomplete",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/customers");return{http:e}},methods:{async loadCustomers(e){return new Promise((t=>{e.trim()?this.http.getAll({name:e.trim()}).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:e.name}))))})):t([])}))}}};const W_=(0,r.c)(H_,[["render",Q_]]);var Y_=W_;const J_={class:"orangehrm-project-admin-input"};function X_(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-icon-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",J_,[(0,a.createVNode)(i,(0,a.mergeProps)({label:o.showDelete?null:e.$t("time.project_admin"),"api-path":"/api/v2/time/project-admins",params:{includeEmployees:o.includeEmployees}},e.$attrs),null,16,["label","params"]),o.showDelete?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,name:"trash-fill",class:"orangehrm-project-delete-icon","with-container":!1,onClick:r.remove},null,8,["onClick"])):(0,a.createCommentVNode)("",!0)])}var K_={name:"ProjectAdminAutocomplete",components:{"employee-autocomplete":$a},inheritAttrs:!1,props:{showDelete:{type:Boolean,required:!0},includeEmployees:{type:String,default:"currentAndPast"}},emits:["remove"],methods:{remove(){this.$emit("remove")}}};const Z_=(0,r.c)(K_,[["render",X_],["__scopeId","data-v-88f017a4"]]);var ek=Z_;const tk={customer:null,project:null,projectAdmin:null},ok={"project.name":"ASC","customer.name":"DEFAULT","employee.lastName":"DEFAULT"};var ak={components:{"project-autocomplete":r_,"customer-autocomplete":Y_,"delete-confirmation":At,"project-admin-autocomplete":ek},props:{unselectableIds:{type:Array,default:()=>[]}},setup(e){const{$t:t}=Be(),{$tEmpName:o}=Da(),l=a=>a.map((a=>{const l=e.unselectableIds.findIndex((e=>e==a.id));return{id:a.id,project:a.name,customer:a.customer?.deleted?a.customer?.name+t("general.deleted"):a.customer?.name,projectAdmins:a.projectAdmins?.map((e=>o(e))).join(", "),isSelectable:-1===l}})),n=(0,a.ref)({...tk}),{sortDefinition:r,sortField:i,sortOrder:d,onSort:s}=Pt({sortDefinition:ok}),c=(0,a.computed)((()=>({customerId:n.value.customer?.id,projectId:n.value.project?.id,empNumber:n.value.projectAdmin?.id,sortField:i.value,sortOrder:d.value,model:"detailed"}))),m=new P(window.appGlobal.baseUrl,"/api/v2/time/projects"),{showPaginator:u,currentPage:p,total:h,pages:g,pageSize:v,response:f,isLoading:y,execQuery:C}=Dt(m,{query:c,normalizer:l});return s(C),{http:m,showPaginator:u,currentPage:p,isLoading:y,total:h,pages:g,pageSize:v,execQuery:C,items:f,filters:n,sortDefinition:r}},data(){return{checkedItems:[],rules:{project:[So],customer:[So],projectAdmin:[So]}}},computed:{headers(){const e=[{name:"customer",title:this.$t("time.customer_name"),sortField:"customer.name",style:{flex:"15%"}},{name:"project",slot:"title",title:this.$t("time.project"),sortField:"project.name",style:{flex:"15%"}},{name:"projectAdmins",title:this.$t("time.project_admins"),style:{flex:"20%"}}],t={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.delete("time_projects")&&(t.cellConfig.delete={onClick:this.onClickDelete,props:{name:"trash"}}),this.$can.update("time_project_activities")&&(t.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),Object.keys(t.cellConfig).length>0&&e.push(t),e}},methods:{onClickAdd(){U("/time/saveProject")},onClickEdit(e){U("/time/saveProject/{id}",{id:e.id})},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("time.not_allowed_to_delete_projects_which_have_time_logged")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData([e.id])}))},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData(e)}))},async deleteData(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()}}};const lk=(0,r.c)(ak,[["render",G_]]);var nk=lk;const rk={class:"orangehrm-background-container"},ik={class:"orangehrm-card-container"},dk=(0,a.createElementVNode)("br",null,null,-1);function sk(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("customer-autocomplete"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("project-admin-autocomplete"),g=(0,a.resolveComponent)("oxd-form-row"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("add-customer-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",rk,[(0,a.createElementVNode)("div",ik,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.add_project")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.project.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.project.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(m,{key:n.project.customer,modelValue:n.project.customer,"onUpdate:modelValue":t[1]||(t[1]=e=>n.project.customer=e),rules:n.rules.customer,label:e.$t("time.customer_name"),required:""},null,8,["modelValue","rules","label"])),(0,a.createVNode)(u,{"icon-name":"plus","display-type":"text",class:"orangehrm-input-field-bottom-space",label:e.$t("time.add_customer"),onClick:r.onClickAddCustomer},null,8,["label","onClick"])])),_:1})])),_:1}),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.project.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.project.description=e),type:"textarea",label:e.$t("general.description"),rules:n.rules.description,placeholder:e.$t("general.type_description_here")},null,8,["modelValue","label","rules","placeholder"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.projectAdmins,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(h,{key:t,modelValue:e.value,"onUpdate:modelValue":t=>e.value=t,"show-delete":t>0,rules:n.rules.projectAdmin,"include-employees":"onlyCurrent",onRemove:e=>r.onRemoveAdmin(t)},null,8,["modelValue","onUpdate:modelValue","show-delete","rules","onRemove"])))),128)),n.projectAdmins.length<5?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"icon-name":"plus","display-type":"text",label:e.$t("general.add_another"),onClick:r.onAddAnother},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})])),_:1}),dk,(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),n.showCustomerModal?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0,onClose:r.onCustomerModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)])}const ck={class:"orangehrm-modal-header"};function mk(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(g,{style:{width:"90%",maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",ck,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.add_customer")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(h,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.customer.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.customer.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.customer.description=e),type:"textarea",label:e.$t("general.description"),placeholder:"Type description here",rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,{class:"orangehrm-form-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(u,{"display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const uk={id:"",name:"",description:""};var pk={name:"AddCustomerModal",components:{"oxd-dialog":q.OxdDialog},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/customers");return e.setIgnorePath("/api/v2/time/validation/customer-name"),{http:e}},data(){return{isLoading:!1,customer:{...uk},rules:{name:[Ht,Wt(50),(0,q.promiseDebounce)(this.validateCustomerName,500)],description:[Wt(255)]}}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.customer.name,description:this.customer.description}).then((e=>{const{data:t}=e.data;this.$toast.saveSuccess(),this.$emit("close",t)}))},onCancel(){this.$emit("close")},validateCustomerName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/time/validation/customer-name",params:{customerName:this.customer.name.trim()}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const hk=(0,r.c)(pk,[["render",mk]]);var gk=hk;const vk={name:null,customer:null,description:null,projectAdminEmpNumbers:[]};var fk={name:"ProjectSave",components:{"add-customer-modal":gk,"customer-autocomplete":Y_,"project-admin-autocomplete":ek},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/projects");return e.setIgnorePath("/api/v2/time/validation/project-name"),{http:e}},data(){return{isLoading:!1,showCustomerModal:!1,projectAdmins:[{value:null}],project:{...vk},projectId:null,rules:{name:[Ht,Wt(50),(0,q.promiseDebounce)(this.validateProjectName,500)],description:[Wt(255)],customer:[Ht,So],projectAdmin:[So,e=>this.projectAdmins.filter((({value:t})=>t&&t.id===e?.id)).length<2||this.$t("general.already_exists")]}}},methods:{onClickAddCustomer(){this.showCustomerModal=!0},onCustomerModalClose(e){if(void 0!==e){const{id:t,name:o}=e;this.project.customer={id:t,label:o}}this.showCustomerModal=!1},onAddAnother(){this.projectAdmins.length<5&&this.projectAdmins.push({value:null})},onRemoveAdmin(e){this.projectAdmins.splice(e,1)},onCancel(){U("/time/viewProjects")},onSave(){this.isLoading=!0,this.http.create({name:this.project.name,description:this.project.description,customerId:this.project.customer.id,projectAdminsEmpNumbers:this.projectAdmins.map((({value:e})=>e&&e.id)).filter(Number)}).then((e=>(this.projectId=e.data?.data.id,this.$toast.saveSuccess()))).then((()=>{U("/time/saveProject/{id}",{id:this.projectId})}))},validateProjectName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/time/validation/project-name",params:{projectName:this.project.name.trim(),customerId:this.project.customer?.id}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const yk=(0,r.c)(fk,[["render",sk]]);var Ck=yk;const Vk={class:"orangehrm-background-container"},bk={class:"orangehrm-card-container"},xk=(0,a.createElementVNode)("br",null,null,-1),wk=(0,a.createElementVNode)("br",null,null,-1);function Nk(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("customer-autocomplete"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("project-admin-autocomplete"),g=(0,a.resolveComponent)("oxd-form-row"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("activities"),b=(0,a.resolveComponent)("add-customer-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Vk,[(0,a.createElementVNode)("div",bk,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.edit_project")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.project.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.project.name=e),label:e.$t("general.name"),rules:n.rules.name,disabled:!e.$can.update("time_projects"),required:""},null,8,["modelValue","label","rules","disabled"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(m,{key:n.project.customer,modelValue:n.project.customer,"onUpdate:modelValue":t[1]||(t[1]=e=>n.project.customer=e),label:e.$t("time.customer_name"),rules:n.rules.customer,disabled:!e.$can.update("time_projects"),required:""},null,8,["modelValue","label","rules","disabled"])),e.$can.update("time_projects")?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"icon-name":"plus","display-type":"text",class:"orangehrm-input-field-bottom-space",label:e.$t("time.add_customer"),onClick:r.onClickAddCustomer},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.project.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.project.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),disabled:!e.$can.update("time_projects"),rules:n.rules.description},null,8,["modelValue","label","placeholder","disabled","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.projectAdmins,((t,o)=>((0,a.openBlock)(),(0,a.createBlock)(h,{key:o,modelValue:t.value,"onUpdate:modelValue":e=>t.value=e,rules:n.rules.projectAdmin,"show-delete":o>0&&e.$can.update("time_projects"),disabled:!e.$can.update("time_projects"),"include-employees":"onlyCurrent",onRemove:e=>r.onRemoveAdmin(o)},null,8,["modelValue","onUpdate:modelValue","rules","show-delete","disabled","onRemove"])))),128)),n.projectAdmins.length<5&&e.$can.update("time_projects")?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"icon-name":"plus","display-type":"text",label:e.$t("general.add_another"),onClick:r.onAddAnother},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})])),_:1}),xk,(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),e.$can.update("time_projects")?((0,a.openBlock)(),(0,a.createBlock)(f,{key:0})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),wk,(0,a.createVNode)(V,{"project-id":o.projectId,"unselectable-ids":o.unselectableIds},null,8,["project-id","unselectable-ids"]),n.showCustomerModal?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,onClose:r.onCustomerModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)])}const _k={class:"orangehrm-paper-container"},kk={class:"orangehrm-header-container"},Sk={class:"orangehrm-main-actions"},$k={class:"orangehrm-container"},Dk={class:"orangehrm-bottom-container"};function Ek(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation"),p=(0,a.resolveComponent)("copy-activity-modal"),h=(0,a.resolveComponent)("save-activity-modal"),g=(0,a.resolveComponent)("edit-activity-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",_k,[(0,a.createElementVNode)("div",kk,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.activities")),1)])),_:1}),(0,a.createElementVNode)("div",Sk,[(0,a.createVNode)(d,{label:e.$t("time.copy_from"),"display-type":"ghost",onClick:r.onClickCopyFrom},null,8,["label","onClick"]),(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",$k,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",Dk,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512),n.showCopyFromModal?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,"project-id":o.projectId,onClose:r.onCloseModal},null,8,["project-id","onClose"])):(0,a.createCommentVNode)("",!0),n.showSaveActivityModal?((0,a.openBlock)(),(0,a.createBlock)(h,{key:1,"project-id":o.projectId,onClose:r.onCloseModal},null,8,["project-id","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditActivityModal?((0,a.openBlock)(),(0,a.createBlock)(g,{key:2,"project-id":o.projectId,"activity-id":n.editActivityModalState,onClose:r.onCloseModal},null,8,["project-id","activity-id","onClose"])):(0,a.createCommentVNode)("",!0)])}const Tk={class:"orangehrm-modal-header"};function Ik(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("project-autocomplete"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid-item"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(C,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Tk,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.copy_activity")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.project,"onUpdate:modelValue":t[0]||(t[0]=e=>n.project=e),rules:n.rules.project,"only-allowed":!1,label:e.$t("time.project_name"),"exclude-project-ids":[o.projectId],required:""},null,8,["modelValue","rules","label","exclude-project-ids"])])),_:1}),n.activities&&n.activities.length>0?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(d),(0,a.createVNode)(p,{cols:2,class:"orangehrm-activites-container"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.activities,(e=>((0,a.openBlock)(),(0,a.createBlock)(u,{key:e.id},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.selectedActivities,"onUpdate:modelValue":t[1]||(t[1]=e=>n.selectedActivities=e),type:"checkbox",value:e.id,disabled:!e.unique,"option-label":e.name},null,8,["modelValue","value","disabled","option-label"])])),_:2},1024)))),128))])),_:1})],64)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}var Bk={name:"CopyActivityModal",components:{"oxd-dialog":q.OxdDialog,"project-autocomplete":r_},props:{projectId:{type:Number,required:!0}},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"");return{http:e}},data(){return{isLoading:!1,project:null,activities:null,selectedActivities:[],rules:{project:[Ht,So,()=>{if(null!==this.activities&&0===this.activities.length)return this.$t("time.no_assigned_activities");if(Array.isArray(this.activities)&&0===this.selectedActivities.length){const e=this.activities.find((e=>!0===e.unique));return e?this.$t("time.no_activities_selected"):this.$t("general.already_exists")}return!0}]}}},watch:{project(e){this.activities=null,this.selectedActivities=[],e&&(this.isLoading=!0,this.http.request({method:"GET",url:`/api/v2/time/projects/${this.projectId}/activities/copy/${e.id}`,params:{limit:0}}).then((e=>{const{data:t}=e.data;this.activities=t,this.selectedActivities=Array.isArray(t)?t.filter((e=>!0===e.unique)).map((e=>e.id)):[],this.isLoading=!1})))}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"POST",url:`/api/v2/time/projects/${this.projectId}/activities/copy/${this.project.id}`,data:{activityIds:this.selectedActivities}}).then((()=>{this.$toast.updateSuccess(),this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Lk=(0,r.c)(Bk,[["render",Ik],["__scopeId","data-v-09c44eea"]]);var Uk=Lk;const Ak={class:"orangehrm-modal-header"};function Pk(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Ak,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.add_project_activity")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}var qk={name:"SaveActivityModal",components:{"oxd-dialog":q.OxdDialog},props:{projectId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/time/project/${e.projectId}/activities`);return{http:t}},data(){return{isLoading:!1,name:"",rules:{name:[Ht,Wt(100)]}}},beforeMount(){this.isLoading=!0,this.http.getAll({limit:0}).then((e=>{const{data:t}=e.data;t&&this.rules.name.push((e=>{const o=t.findIndex((t=>String(t.name).toLowerCase()==String(e).toLowerCase()));return!(o>-1)||this.$t("general.already_exists")}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.name}).then((()=>{this.$toast.saveSuccess(),this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Fk=(0,r.c)(qk,[["render",Pk]]);var Mk=Fk;const zk={class:"orangehrm-modal-header"};function jk(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("required-text"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",zk,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.edit_project_activity")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}var Rk={name:"SaveActivityModal",components:{"oxd-dialog":q.OxdDialog},props:{projectId:{type:Number,required:!0},activityId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/time/project/${e.projectId}/activities`);return{http:t}},data(){return{isLoading:!1,name:"",rules:{name:[Ht,Wt(100)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.activityId).then((e=>{const{data:t}=e.data;return this.name=t.name,this.http.getAll({limit:0})})).then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>String(t.name).toLowerCase()==String(e).toLowerCase()));if(o>-1){const{id:e}=t[o];return e==this.activityId||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.activityId,{name:this.name}).then((()=>{this.$toast.updateSuccess(),this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const Ok=(0,r.c)(Rk,[["render",jk]]);var Gk=Ok,Qk={name:"Activities",components:{"copy-activity-modal":Uk,"save-activity-modal":Mk,"edit-activity-modal":Gk,"delete-confirmation":At},props:{projectId:{type:Number,required:!0},unselectableIds:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/time/project/${e.projectId}/activities`),o=t=>t.map((t=>{const o=e.unselectableIds.findIndex((e=>e==t.id));return{...t,isSelectable:-1===o}})),{showPaginator:a,currentPage:l,total:n,pages:r,pageSize:i,response:d,isLoading:s,execQuery:c}=Dt(t,{normalizer:o});return{http:t,showPaginator:a,currentPage:l,isLoading:s,total:n,pages:r,pageSize:i,execQuery:c,items:d}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("time.activity_name"),style:{"flex-basis":"80%"}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{"flex-shrink":1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],showCopyFromModal:!1,showSaveActivityModal:!1,showEditActivityModal:!1,editActivityModalState:null}},methods:{onClickAdd(){this.showSaveActivityModal=!0},onClickEdit(e){this.editActivityModalState=e.id,this.showEditActivityModal=!0},onClickCopyFrom(){this.showCopyFromModal=!0},onCloseModal(){this.showCopyFromModal=!1,this.showSaveActivityModal=!1,this.showEditActivityModal=!1,this.resetDataTable()},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.error({title:this.$t("general.error"),message:this.$t("time.not_allowed_to_delete_project_activities_which_have_time_logged_against")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>{this.$toast.deleteSuccess(),this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const Hk=(0,r.c)(Qk,[["render",Ek],["__scopeId","data-v-4787a883"]]);var Wk=Hk;const Yk={name:null,customer:{id:null,label:null},description:null,projectAdminEmpNumbers:[]};var Jk={name:"ProjectEdit",components:{activities:Wk,"add-customer-modal":gk,"customer-autocomplete":Y_,"project-admin-autocomplete":ek},props:{projectId:{type:Number,required:!0},unselectableIds:{type:Array,default:()=>[]}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/projects");return e.setIgnorePath("/api/v2/time/validation/project-name"),{http:e}},data(){return{isLoading:!1,projectAdmins:[{value:null}],project:{...Yk},showCustomerModal:!1,rules:{name:[Ht,Wt(50)],description:[Wt(255)],customer:[Ht,So],projectAdmin:[So,e=>this.projectAdmins.filter((({value:t})=>t&&t.id===e?.id)).length<2||this.$t("general.already_exists")]}}},beforeMount(){this.isLoading=!0;const{$tEmpName:e}=Da();this.http.get(this.projectId,{model:"detailed"}).then((t=>{const{data:o}=t.data;this.project.name=o.name,this.project.description=o.description,this.project.customer={id:o.customer.id,label:o.customer.name},Array.isArray(o.projectAdmins)&&o.projectAdmins.length>0&&(this.projectAdmins=o.projectAdmins.map((t=>({value:{id:t.empNumber,label:e(t,{includeMiddle:!0,excludePastEmpTag:!0}),isPastEmployee:!!t.terminationId}}))))})).finally((()=>{this.rules.name.push((0,q.promiseDebounce)(this.validateProjectName,500)),this.isLoading=!1}))},methods:{onClickAddCustomer(){this.showCustomerModal=!0},onCustomerModalClose(e){if(void 0!==e){const{id:t,name:o}=e;this.project.customer={id:t,label:o}}this.showCustomerModal=!1},onAddAnother(){this.projectAdmins.length<5&&this.projectAdmins.push({value:null})},onRemoveAdmin(e){this.projectAdmins.splice(e,1)},onCancel(){U("/time/viewProjects")},onSave(){this.isLoading=!0,this.http.update(this.projectId,{name:this.project.name,description:this.project.description,customerId:this.project.customer.id,projectAdminsEmpNumbers:this.projectAdmins.map((({value:e})=>e&&e.id)).filter(Number)}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},validateProjectName(e){return new Promise((t=>{e?this.http.request({method:"GET",url:"/api/v2/time/validation/project-name",params:{projectId:this.projectId,projectName:this.project.name.trim(),customerId:this.project.customer?.id}}).then((e=>{const{data:o}=e.data;return!0===o.valid?t(!0):t(this.$t("general.already_exists"))})):t(!0)}))}}};const Xk=(0,r.c)(Jk,[["render",Nk]]);var Kk=Xk;const Zk={class:"orangehrm-background-container"},eS={class:"orangehrm-card-container"},tS=(0,a.createElementVNode)("br",null,null,-1);function oS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("timesheet-pending-actions");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Zk,[(0,a.createElementVNode)("div",eS,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.select_employee")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{onSubmitValid:r.viewTimesheet},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employee=e),rules:n.rules.employee,params:{includeEmployees:"currentAndPast"},required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{label:e.$t("general.view")},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])]),tS,(0,a.createVNode)(f)])}const aS={class:"orangehrm-paper-container"},lS={class:"orangehrm-header-container"},nS={class:"orangehrm-container"},rS={class:"orangehrm-bottom-container"};function iS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table"),c=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",aS,[(0,a.createElementVNode)("div",lS,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.timesheets_pending_action")),1)])),_:1})]),(0,a.createVNode)(d,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",nS,[(0,a.createVNode)(s,{headers:n.headers,items:l.items?.data,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items","loading"])]),(0,a.createElementVNode)("div",rS,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])}var dS={name:"TimesheetPendingActions",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/time/employees/timesheets/list"),{$t:t}=Be(),{jsDateFormat:o}=R(),{locale:a}=Le(),l=e=>e.map((e=>{const l=pe(ue(e.startDate),o,{locale:a}),n=pe(ue(e.endDate),o,{locale:a}),r=`${e.employee?.firstName} ${e.employee?.middleName} ${e.employee?.lastName}`;return e.employee?.terminationId&&t("general.past_employee"),{id:e.id,startDate:e.startDate,empNumber:e.employee.empNumber,period:`${l} - ${n}`,employee:r}})),{showPaginator:n,currentPage:r,total:i,pages:d,pageSize:s,response:c,isLoading:m,execQuery:u}=Dt(e,{normalizer:l});return{http:e,showPaginator:n,currentPage:r,isLoading:m,total:i,pages:d,pageSize:s,execQuery:u,items:c}},data(){return{headers:[{name:"employee",slot:"title",title:this.$t("general.employee_name"),style:{flex:"40%"}},{name:"period",title:this.$t("time.timesheet_period"),style:{flex:"40%"}},{name:"actions",slot:"footer",title:this.$t("general.actions"),style:{flex:"20%"},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{label:this.$t("general.view"),displayType:"text",size:"medium"}}}}]}},methods:{onClickView(e){U("/time/viewTimesheet/employeeId/{empNumber}",{empNumber:e.empNumber},{startDate:e.startDate})}}};const sS=(0,r.c)(dS,[["render",iS],["__scopeId","data-v-c37f1e18"]]);var cS=sS,mS={components:{"employee-autocomplete":$a,"timesheet-pending-actions":cS},data(){return{employee:null,rules:{employee:[Ht,Wt(100),So]}}},methods:{viewTimesheet(){U("/time/viewTimesheet/employeeId/{id}",{id:this.employee?.id})}}};const uS=(0,r.c)(mS,[["render",oS]]);var pS=uS;const hS={class:"orangehrm-background-container"},gS=(0,a.createElementVNode)("br",null,null,-1),vS=(0,a.createElementVNode)("br",null,null,-1);function fS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("timesheet-period"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("timesheet"),m=(0,a.resolveComponent)("save-timesheet-action"),u=(0,a.resolveComponent)("timesheet-actions");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hS,[(0,a.createVNode)(c,{loading:e.isLoading,columns:e.timesheetColumns,records:e.timesheetRecords,"timesheet-id":e.timesheetId,subtotal:e.timesheetSubtotal},{"header-title":(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.title),1)])),_:1})])),"header-options":(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:e.date,"onUpdate:modelValue":t[0]||(t[0]=t=>e.date=t),value:l.timesheetPeriod,onNext:l.onClickNext,onPrevious:l.onClickPrevious},null,8,["modelValue","value","onNext","onPrevious"])])),"footer-title":(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.status"))+": "+(0,a.toDisplayString)(r.employeeTimesheetStatus),1)])),_:1},512),[[a.vShow,e.timesheetStatus]])])),"footer-options":(0,a.withCtx)((()=>[l.showCreateTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"display-type":"secondary",disabled:l.canCreateTimesheet,label:e.$t("time.create_timesheet"),onClick:l.onClickCreateTimesheet},null,8,["disabled","label","onClick"])):(0,a.createCommentVNode)("",!0),l.canEditTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,"display-type":"ghost",label:e.$t("general.edit"),onClick:l.onClickEdit},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),l.canResetTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:2,"display-type":"ghost",label:e.$t("general.reset"),onClick:l.onClickReset},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),l.canSubmitTimesheet?((0,a.openBlock)(),(0,a.createBlock)(s,{key:3,"display-type":"secondary",label:e.$t("general.submit"),onClick:l.onClickSubmit},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","columns","records","timesheet-id","subtotal"]),gS,e.timesheetId&&(l.canRejectTimesheet||l.canApproveTimesheet)?((0,a.openBlock)(),(0,a.createBlock)(m,{key:e.timesheetId,"is-loading":e.isLoading,"reject-timesheet":l.onClickReject,"approve-timesheet":l.onClickApprove,"can-reject-timesheet":!!l.canRejectTimesheet,"can-approve-timesheet":!!l.canApproveTimesheet},null,8,["is-loading","reject-timesheet","approve-timesheet","can-reject-timesheet","can-approve-timesheet"])):(0,a.createCommentVNode)("",!0),vS,e.timesheetId?((0,a.openBlock)(),(0,a.createBlock)(u,{key:e.timesheetId,"timesheet-id":e.timesheetId},null,8,["timesheet-id"])):(0,a.createCommentVNode)("",!0)])}const yS={class:"orangehrm-card-container"};function CS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yS,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.timesheet_action")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,{ref:"formRef",loading:o.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.comment,"onUpdate:modelValue":t[0]||(t[0]=e=>l.comment=e),type:"textarea",placeholder:e.$t("general.type_here_message"),rules:l.rules.comment,label:e.$t("general.comment")},null,8,["modelValue","placeholder","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[o.canRejectTimesheet?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,label:e.$t("general.reject"),"display-type":"danger",onClick:l.onClickReject},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),o.canApproveTimesheet?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,label:e.$t("general.approve"),"display-type":"success",class:"orangehrm-left-space",onClick:l.onClickApprove},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1},8,["loading"])])}var VS={name:"SaveTimesheetAction",props:{isLoading:{type:Boolean,required:!0},rejectTimesheet:{type:Function,required:!0},approveTimesheet:{type:Function,required:!0},canRejectTimesheet:{type:Boolean,required:!0},canApproveTimesheet:{type:Boolean,required:!0}},setup(e){const{formRef:t,invalid:o,validate:l}=qc(),n=(0,a.ref)(""),r={comment:[Wt(250)]},i=()=>{l().then((()=>!1===o.value&&e.approveTimesheet(n.value)))},d=()=>{l().then((()=>!1===o.value&&e.rejectTimesheet(n.value)))};return{rules:r,comment:n,formRef:t,onClickReject:d,onClickApprove:i}}};const bS=(0,r.c)(VS,[["render",CS]]);var xS=bS,wS={components:{timesheet:h_,"timesheet-period":b_,"timesheet-actions":E_,"save-timesheet-action":xS},props:{employee:{type:Object,required:!0},startDate:{type:String,required:!1,default:null}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/time/timesheets"),{state:o,onClickEdit:l,onClickNext:n,onClickReset:r,onClickSubmit:i,onClickReject:d,onClickApprove:s,onClickPrevious:c,timesheetPeriod:m,canEditTimesheet:u,canResetTimesheet:p,canSubmitTimesheet:h,canRejectTimesheet:g,canCreateTimesheet:v,canApproveTimesheet:f,showCreateTimesheet:y,onClickCreateTimesheet:C}=v_(t,e.startDate,e.employee.empNumber),{employee:V,...b}=(0,a.toRefs)(o),{$tEmpName:x}=Da();return{...b,onClickEdit:l,onClickNext:n,onClickReset:r,onClickSubmit:i,onClickReject:d,onClickApprove:s,onClickPrevious:c,timesheetPeriod:m,canEditTimesheet:u,canResetTimesheet:p,canSubmitTimesheet:h,canRejectTimesheet:g,canCreateTimesheet:v,canApproveTimesheet:f,showCreateTimesheet:y,onClickCreateTimesheet:C,translateEmpName:x}},data(){return{statuses:[{id:1,label:this.$t("time.submitted"),name:"Submitted"},{id:2,label:this.$t("leave.rejected"),name:"Rejected"},{id:3,label:this.$t("time.not_submitted"),name:"Not Submitted"},{id:4,label:this.$t("time.approved"),name:"Approved"}]}},computed:{title(){const e=this.translateEmpName(this.employee,{includeMiddle:!1,excludePastEmpTag:!1});return`${this.$t("time.timesheet_for")} ${e}`},employeeTimesheetStatus(){return this.statuses.find((e=>e.name===this.timesheetStatus))?.label||null}}};const NS=(0,r.c)(wS,[["render",fS]]);var _S=NS;const kS=e=>((0,a.pushScopeId)("data-v-5ec95ae3"),e=e(),(0,a.popScopeId)(),e),SS=kS((()=>(0,a.createElementVNode)("br",null,null,-1)));function $S(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("project-autocomplete"),u=(0,a.resolveComponent)("activity-dropdown"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("oxd-text"),g=(0,a.resolveComponent)("oxd-switch-input"),v=(0,a.resolveComponent)("oxd-divider"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("oxd-table-filter"),x=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(x,{module:"time",name:"employee",filters:l.serializedFilters,"column-count":3},{default:(0,a.withCtx)((({generateReport:o})=>[(0,a.createVNode)(b,{"filter-title":e.$t("time.employee_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(V,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:l.rules.employee,params:{includeEmployees:"currentAndPast"},required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.project,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.project=e),rules:l.rules.project,label:e.$t("time.project_name"),"only-allowed":!1},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.activity,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.activity=e),label:e.$t("time.activity_name"),"project-id":l.filters.project&&l.filters.project.id},null,8,["modelValue","label","project-id"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.fromDate=e),placeholder:e.$t("general.from"),rules:l.rules.fromDate,label:e.$t("time.project_date_range")},null,8,["modelValue","placeholder","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.toDate=e),label:" ",placeholder:e.$t("general.to"),rules:l.rules.toDate},null,8,["modelValue","placeholder","rules"])])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-switch-filter --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{class:"orangehrm-switch-filter-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.only_include_approved_timesheets")),1)])),_:1}),(0,a.createVNode)(g,{modelValue:l.filters.timesheetState,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.timesheetState=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{type:"submit","display-type":"secondary",label:e.$t("general.view")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),SS])),footer:(0,a.withCtx)((({data:t})=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(t.meta?t.meta.sum.label:"0.00"),1)])),_:1},8,["filters"])}const DS={employee:null,project:null,activity:null,fromDate:null,toDate:null,timesheetState:!1};var ES={components:{"reports-table":uw,"oxd-switch-input":q.OxdSwitchInput,"activity-dropdown":o_,"project-autocomplete":r_,"employee-autocomplete":$a},setup(){const e=(0,a.ref)({...DS}),{$t:t}=Be(),{userDateFormat:o}=R(),l={project:[So],employee:[Ht,Wt(100),So],fromDate:[Yt(o),vo((()=>e.value.toDate),t("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(o),ro((()=>e.value.fromDate),t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]},n=(0,a.computed)((()=>({empNumber:e.value.employee?.id,projectId:e.value.project?.id,activityId:e.value.activity?.id,fromDate:e.value.fromDate,toDate:e.value.toDate,timesheetState:e.value.timesheetState?"onlyApproved":"all"})));return{rules:l,filters:e,serializedFilters:n}}};const TS=(0,r.c)(ES,[["render",$S],["__scopeId","data-v-5ec95ae3"]]);var IS=TS;const BS=e=>((0,a.pushScopeId)("data-v-224efca2"),e=e(),(0,a.popScopeId)(),e),LS=BS((()=>(0,a.createElementVNode)("br",null,null,-1)));function US(e,t,o,l,n,r){const i=(0,a.resolveComponent)("project-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("oxd-text"),p=(0,a.resolveComponent)("oxd-switch-input"),h=(0,a.resolveComponent)("oxd-divider"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("oxd-table-filter"),V=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(V,{module:"time",name:"project",prefetch:null!==o.project,filters:l.serializedFilters,"column-count":2},{default:(0,a.withCtx)((({generateReport:o})=>[(0,a.createVNode)(C,{"filter-title":e.$t("time.project_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.project,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.project=e),rules:l.rules.project,label:e.$t("time.project_name"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.fromDate=e),placeholder:e.$t("general.from"),rules:l.rules.fromDate,label:e.$t("time.project_date_range")},null,8,["modelValue","placeholder","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.toDate=e),label:" ",placeholder:e.$t("general.to"),rules:l.rules.toDate},null,8,["modelValue","placeholder","rules"])])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-switch-filter --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{class:"orangehrm-switch-filter-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.only_include_approved_timesheets")),1)])),_:1}),(0,a.createVNode)(p,{modelValue:l.filters.includeTimesheet,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.includeTimesheet=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"submit","display-type":"secondary",label:e.$t("general.view")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),LS])),footer:(0,a.withCtx)((({data:t})=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(t.meta?t.meta.sum.label:"0.00"),1)])),_:1},8,["prefetch","filters"])}const AS={project:null,fromDate:null,toDate:null,includeTimesheet:!1};var PS={components:{"reports-table":uw,"oxd-switch-input":q.OxdSwitchInput,"project-autocomplete":r_},props:{project:{type:Object,required:!1,default:null},fromDate:{type:String,required:!1,default:null},toDate:{type:String,required:!1,default:null},includeTimesheet:{type:Boolean,default:!1}},setup(e){const t=(0,a.ref)({...AS,fromDate:e.fromDate,toDate:e.toDate,includeTimesheet:e.includeTimesheet,...e.project&&{project:e.project}}),{$t:o}=Be(),{userDateFormat:l}=R(),n={project:[Ht,So],fromDate:[Yt(l),vo((()=>t.value.toDate),o("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(l),ro((()=>t.value.fromDate),o("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]},r=(0,a.computed)((()=>({projectId:t.value.project?.id,fromDate:t.value.fromDate,toDate:t.value.toDate,includeTimesheet:t.value.includeTimesheet?"onlyApproved":"all"})));return{rules:n,filters:t,serializedFilters:r}}};const qS=(0,r.c)(PS,[["render",US],["__scopeId","data-v-224efca2"]]);var FS=qS;const MS=e=>((0,a.pushScopeId)("data-v-5b55102c"),e=e(),(0,a.popScopeId)(),e),zS=MS((()=>(0,a.createElementVNode)("br",null,null,-1)));function jS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("project-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("activity-dropdown"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("date-input"),p=(0,a.resolveComponent)("oxd-text"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("oxd-table-filter"),x=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(x,{module:"time",name:"activity_detailed",prefetch:!0,filters:l.serializedFilters,"column-count":2},{default:(0,a.withCtx)((({generateReport:o})=>[(0,a.createVNode)(b,{"filter-title":e.$t("time.project_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(V,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.project,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.project=e),rules:l.rules.project,label:e.$t("time.project_name"),required:"",disabled:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.activity,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.activity=e),rules:l.rules.activity,label:e.$t("time.activity_name"),"project-id":l.filters.project&&l.filters.project.id,required:""},null,8,["modelValue","rules","label","project-id"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.fromDate=e),placeholder:e.$t("general.from"),rules:l.rules.fromDate,label:e.$t("time.project_date_range"),disabled:""},null,8,["modelValue","placeholder","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.toDate=e),label:" ",placeholder:e.$t("general.to"),rules:l.rules.toDate,disabled:""},null,8,["modelValue","placeholder","rules"])])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-switch-filter --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-switch-filter-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.only_include_approved_timesheets")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:l.filters.includeTimesheet,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.includeTimesheet=e),disabled:""},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.back"),onClick:l.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(y,{label:e.$t("general.view")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),zS])),footer:(0,a.withCtx)((({data:t})=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(t.meta?t.meta.sum.label:"0.00"),1)])),_:1},8,["filters"])}const RS={project:null,activity:null,fromDate:null,toDate:null,includeTimesheet:!1};var OS={components:{"reports-table":uw,"oxd-switch-input":q.OxdSwitchInput,"activity-dropdown":o_,"project-autocomplete":r_},props:{project:{type:Object,required:!0},activity:{type:Object,required:!0},fromDate:{type:String,required:!1,default:null},toDate:{type:String,required:!1,default:null},includeTimesheet:{type:Boolean,default:!1}},setup(e){const{$t:t}=Be(),o=(0,a.ref)({...RS,fromDate:e.fromDate,toDate:e.toDate,includeTimesheet:e.includeTimesheet,...e.project&&{project:e.project},...e.activity&&{activity:e.activity}}),{userDateFormat:l}=R(),n={project:[Ht],activity:[Ht,So],fromDate:[Yt(l),vo((()=>o.value.toDate),t("attendance.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(l),ro((()=>o.value.fromDate),t("attendance.to_date_should_be_after_from_date"),{allowSameDate:!0})]},r=(0,a.computed)((()=>({projectId:o.value.project?.id,activityId:o.value.activity?.id,fromDate:o.value.fromDate,toDate:o.value.toDate,includeTimesheet:o.value.includeTimesheet?"onlyApproved":"all"}))),i=()=>{U("/time/displayProjectReportCriteria",void 0,{projectId:e.project.id,fromDate:e.fromDate,toDate:e.fromDate,includeTimesheet:e.includeTimesheet?"onlyApproved":"all"})};return{rules:n,filters:o,onClickBack:i,serializedFilters:r}}};const GS=(0,r.c)(OS,[["render",jS],["__scopeId","data-v-5b55102c"]]);var QS=GS,HS={"time-sheet-period":Ww,"customer-list":lN,"customer-save":mN,"customer-edit":yN,"my-timesheet":B_,"edit-timesheet":q_,"project-list":nk,"project-save":Ck,"project-edit":Kk,"employee-timesheet":pS,"view-employee-timesheet":_S,"employee-time-report":IS,"project-activity-report":FS,"activity-details-report":QS};const WS={class:"orangehrm-background-container"},YS={class:"orangehrm-card-container"};function JS(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-group"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",WS,[(0,a.createElementVNode)("div",YS,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.leave_period")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leavePeriod.startMonth,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leavePeriod.startMonth=e),type:"select",options:r.months,rules:n.rules.startMonth,label:e.$t("leave.start_month"),required:""},null,8,["modelValue","options","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leavePeriod.startDay,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leavePeriod.startDay=e),type:"select",options:r.dates,rules:n.rules.startDay,label:e.$t("general.start_date"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{label:e.$t("general.end_date")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2",class:"orangehrm-leave-period"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.endDay),1)])),_:1})])),_:1},8,["label"])])),_:1}),n.leavePeriod.currentPeriod?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{label:e.$t("leave.current_leave_period")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2",class:"orangehrm-leave-period"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.leavePeriod.currentPeriod),1)])),_:1})])),_:1},8,["label"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const XS={startMonth:null,startDay:null,currentPeriod:null};var KS={props:{monthDates:{type:Object,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-period"),{jsDateFormat:t}=R(),{locale:o}=Le();return{http:e,jsDateFormat:t,locale:o}},data(){return{isLoading:!1,leavePeriod:{...XS},leavePeriodDefined:!0,rules:{startMonth:[Ht],startDay:[Ht]}}},computed:{months(){return Array(12).fill("").map(((...[,e])=>({id:e+1,label:this.locale.localize.month(e,{width:"wide"})})))},dates(){return(this.monthDates[this.leavePeriod.startMonth?.id]??[]).map((e=>({id:e,label:String(e).padStart(2,"0")})))},endDay(){const e=this.leavePeriod.startMonth?.id,t=this.leavePeriod.startDay?.id,o=(new Date).getFullYear();if(e&&t){const a=(0,de.c)(new Date(o,e-1,t),364),l=a.getFullYear()>o;return pe(a,"LLLL dd",{locale:this.locale})+(l?` (${this.$t("leave.following_year")})`:"")}return"-"}},watch:{"leavePeriod.startMonth":function(){this.leavePeriod.startDay=this.dates.length>0?this.dates[0]:null}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET"}).then((e=>{const{data:t,meta:o}=e.data;this.updateLeavePeriodModel(t),this.defineLeavePeriod(o),this.resetLeavePeriod()})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{startMonth:this.leavePeriod.startMonth?.id,startDay:this.leavePeriod.startDay?.id}}).then((e=>{const{data:t,meta:o}=e.data;return this.updateLeavePeriodModel(t),this.defineLeavePeriod(o),this.resetLeavePeriod(),this.$toast.saveSuccess()})).then((()=>{this.isLoading=!1,this.leavePeriodDefined||A()}))},onClickReset(){this.resetLeavePeriod()},resetLeavePeriod(){this.leavePeriod.startMonth=XS.startMonth,this.$nextTick((()=>{this.leavePeriod.startDay=XS.startDay}))},updateLeavePeriodModel(e){XS.startMonth=this.months.find((t=>t.id===e.startMonth)),this.$nextTick((()=>{XS.startDay=this.dates.find((t=>t.id===e.startDay))}))},defineLeavePeriod(e){if(!0===e.leavePeriodDefined){this.leavePeriodDefined=e.leavePeriodDefined;const t=pe(ue(e.currentLeavePeriod.startDate),this.jsDateFormat,{locale:this.locale}),o=pe(ue(e.currentLeavePeriod.endDate),this.jsDateFormat,{locale:this.locale});this.leavePeriod.currentPeriod=`${t} ${this.$t("general.to").toLowerCase()} ${o}`}else this.leavePeriodDefined=!1}}};const ZS=(0,r.c)(KS,[["render",JS],["__scopeId","data-v-b2e37d60"]]);var e$=ZS;const t$={class:"orangehrm-background-container"},o$={class:"orangehrm-card-container"};function a$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("leave-conflict"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("leave-balance"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("date-input"),v=(0,a.resolveComponent)("leave-duration-input"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",t$,[n.showLeaveConflict?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,"workshift-exceeded":n.isWorkShiftExceeded,data:n.leaveConflictData},null,8,["workshift-exceeded","data"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",o$,[(0,a.createVNode)(d,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.apply_leave")),1)])),_:1}),(0,a.createVNode)(s),n.isLoading||0!==n.leaveTypes.length?((0,a.openBlock)(),(0,a.createBlock)(V,{key:1,ref:"formRef",loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.leave.type,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leave.type=e),type:"select",rules:n.rules.type,options:n.leaveTypes,label:e.$t("leave.leave_type"),required:""},null,8,["modelValue","rules","options","label"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"leave-data":n.leave},null,8,["leave-data"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.leave.fromDate,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leave.fromDate=e),label:e.$t("general.from_date"),rules:n.rules.fromDate,years:n.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.leave.toDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leave.toDate=e),label:e.$t("general.to_date"),rules:n.rules.toDate,years:n.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),1==r.appliedLeaveDuration?((0,a.openBlock)(),(0,a.createBlock)(h,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{duration:n.leave.duration.type,"onUpdate:duration":t[3]||(t[3]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[4]||(t[4]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[5]||(t[5]=e=>n.leave.duration.toTime=e),label:e.$t("general.duration"),"work-shift":o.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),r.appliedLeaveDuration>1?((0,a.openBlock)(),(0,a.createBlock)(h,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.leave.partialOptions,"onUpdate:modelValue":t[6]||(t[6]=e=>n.leave.partialOptions=e),type:"select",label:e.$t("leave.partial_days"),options:n.partialOptions},null,8,["modelValue","label","options"])])),_:1}),r.showDuration?((0,a.openBlock)(),(0,a.createBlock)(v,{key:0,duration:n.leave.duration.type,"onUpdate:duration":t[7]||(t[7]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[8]||(t[8]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[9]||(t[9]=e=>n.leave.duration.toTime=e),partial:!0,label:e.$t("general.duration"),"work-shift":o.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0),r.showStartDay?((0,a.openBlock)(),(0,a.createBlock)(v,{key:1,duration:n.leave.duration.type,"onUpdate:duration":t[10]||(t[10]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[11]||(t[11]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[12]||(t[12]=e=>n.leave.duration.toTime=e),partial:!0,label:e.$t("leave.start_day"),"work-shift":o.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0),r.showEndDay?((0,a.openBlock)(),(0,a.createBlock)(v,{key:2,duration:n.leave.endDuration.type,"onUpdate:duration":t[13]||(t[13]=e=>n.leave.endDuration.type=e),fromTime:n.leave.endDuration.fromTime,"onUpdate:fromTime":t[14]||(t[14]=e=>n.leave.endDuration.fromTime=e),toTime:n.leave.endDuration.toTime,"onUpdate:toTime":t[15]||(t[15]=e=>n.leave.endDuration.toTime=e),partial:!0,label:e.$t("leave.end_day"),"work-shift":o.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.leave.comment,"onUpdate:modelValue":t[16]||(t[16]=e=>n.leave.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{label:e.$t("general.apply")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])):((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.no_leave_types_with_leave_balance")),1)])),_:1}))])])}function l$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("time-range"),c=(0,a.resolveComponent)("oxd-text"),m=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(d,{style:{"grid-column-start":"1"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,(0,a.mergeProps)({type:"select"},e.$attrs,{options:r.options,"model-value":o.duration,rules:n.rules.duration,"show-empty-selector":o.partial,required:o.partial,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:duration",t))}),null,16,["options","model-value","rules","show-empty-selector","required"])])),_:1}),o.duration&&4===o.duration.id?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(s,{rules:n.rules,"from-time":o.fromTime,"to-time":o.toTime,"work-shift":o.workShift,"onUpdate:fromTime":t[1]||(t[1]=t=>e.$emit("update:fromTime",t)),"onUpdate:toTime":t[2]||(t[2]=t=>e.$emit("update:toTime",t))},null,8,["rules","from-time","to-time","work-shift"]),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{label:e.$t("general.duration")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-leave-duration",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.selectedTimeDuration),1)])),_:1})])),_:1},8,["label"])])),_:1})],64)):(0,a.createCommentVNode)("",!0)],64)}function n$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("time-input"),d=(0,a.resolveComponent)("oxd-grid-item");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:e.$t("general.from"),"model-value":o.fromTime,rules:o.rules.fromTime,required:"","onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:fromTime",t))},null,8,["label","model-value","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:e.$t("general.to"),"model-value":o.toTime,rules:o.rules.toTime,required:"","onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:toTime",t))},null,8,["label","model-value","rules"])])),_:1})],64)}var r$={name:"TimeRange",inheritAttrs:!1,props:{fromTime:{type:String,required:!1,default:null},toTime:{type:String,required:!1,default:null},rules:{type:Object,required:!0,default:()=>({})},workShift:{type:Object,required:!0,default:()=>({})}},emits:["update:fromTime","update:toTime"],mounted(){this.workShift?.startTime&&this.$emit("update:fromTime",this.workShift.startTime),this.workShift?.endTime&&this.$emit("update:toTime",this.workShift.endTime)}};const i$=(0,r.c)(r$,[["render",n$]]);var d$=i$,s$={name:"LeaveDurationInput",components:{"time-range":d$},inheritAttrs:!1,props:{duration:{type:Object,required:!1,default:()=>null},fromTime:{type:String,required:!1,default:null},toTime:{type:String,required:!1,default:null},partial:{type:Boolean,default:!1},workShift:{type:Object,required:!0,default:()=>({})}},emits:["update:fromTime","update:toTime","update:duration"],data(){return{rules:{duration:[Ht],fromTime:[Ht,Xt,yo((()=>this.toTime),this.$t("general.from_time_should_be_before_to_time"))],toTime:[Ht,Xt,mo((()=>this.fromTime),this.$t("general.to_time_should_be_after_from_time")),e=>{if(e){const t=be(this.workShift.startTime,this.workShift.endTime),o=be(this.fromTime,e);if(o>t)return this.$t("leave.duration_should_be_less_than_work_shift_length")}return!0}]}}},computed:{selectedTimeDuration(){const e=be(this.fromTime,this.toTime);return(e/3600).toFixed(2)},options(){const e=[{id:1,label:this.$t("leave.full_day"),key:"full_day"},{id:2,label:this.$t("leave.half_day_morning"),key:"half_day_morning"},{id:3,label:this.$t("leave.half_day_evening"),key:"half_day_afternoon"},{id:4,label:this.$t("leave.specify_time"),key:"specify_time"}];return this.partial?e.filter((e=>1!=e.id)):e}}};const c$=(0,r.c)(s$,[["render",l$],["__scopeId","data-v-676a941c"]]);var m$=c$;const u$={class:"orangehrm-leave-balance"};function p$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-label"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-input-group");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(c,null,{label:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",u$,[(0,a.createVNode)(i,{label:e.$t("leave.leave_balance")},null,8,["label"]),o.leaveData.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"--help",name:"question-circle","with-container":!1,onClick:l.onModalOpen},null,8,["onClick"])):(0,a.createCommentVNode)("",!0)])])),default:(0,a.withCtx)((()=>[e.balance>=0?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.leaveBalance),1)])),_:1})):((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,class:"orangehrm-leave-balance-text --error",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.balance_not_sufficient")),1)])),_:1}))])),_:1}),e.showModal?((0,a.openBlock)(),(0,a.createBlock)((0,a.resolveDynamicComponent)(l.leaveBalanceModal),{key:0,data:e.data,meta:e.meta,onClose:l.onModalClose},null,40,["data","meta","onClose"])):(0,a.createCommentVNode)("",!0)],64)}const h$={class:"orangehrm-dialog-header-container"},g$={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},v$={class:"orangehrm-container"},f$={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"};function y$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-card-table"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(g,{gutters:!1,class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",h$,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.leave_balance_details")),1)])),_:1}),(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.as_of_date"))+" - "+(0,a.toDisplayString)(r.asAtDate),1)])),_:1})]),(0,a.createVNode)(d,{class:"orangehrm-dialog-horizontal-margin orangehrm-clear-margins"}),(0,a.createElementVNode)("div",g$,[(0,a.createVNode)(m,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.employee_name")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.employeeName),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{class:"--offset-column-1",label:e.$t("leave.leave_type")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.leaveType),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("leave.total_entitlement")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.totalEntitlement),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("leave.balance")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.leaveBalance),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})]),(0,a.createElementVNode)("div",v$,[(0,a.createVNode)(u,{headers:n.headers,items:r.items,clickable:!1,class:"orangehrm-horizontal-padding","row-decorator":"oxd-table-decorator-card"},null,8,["headers","items"])]),(0,a.createElementVNode)("div",f$,[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{type:"submit","display-type":"secondary",label:e.$t("general.ok"),onClick:r.onCancel},null,8,["label","onClick"])])),_:1})])])),_:1},8,["onUpdate:show"])}var C$={name:"LeaveBalanceModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>null},meta:{type:Object,default:()=>null}},emits:["close"],setup(){const{jsDateFormat:e}=R(),{locale:t}=Le();return{locale:t,jsDateFormat:e}},data(){return{headers:[{title:this.$t("leave.leave_status"),name:"status",slot:"left",style:{flex:1}},{title:this.$t("leave.days"),name:"days",slot:"right",style:{flex:1,textAlign:"right",justifyContent:"flex-end"}}]}},computed:{items(){if(this.data){const{taken:e,scheduled:t,pending:o}=this.data;return[{status:this.$t("leave.taken"),days:e.toFixed(2)},{status:this.$t("leave.scheduled"),days:t.toFixed(2)},{status:this.$t("leave.pending_approval"),days:o.toFixed(2)}]}return[]},asAtDate(){return pe(ue(this.data?.asAtDate),this.jsDateFormat,{locale:this.locale})},leaveType(){return this.meta?.leaveType?.name},employeeName(){const e=this.meta?.employee;return e?`${e.firstName} ${e.lastName}\n          ${e.terminationId?this.$t("general.past_employee"):""}`:""},totalEntitlement(){return this.data?.entitled?`${parseFloat(this.data.entitled).toFixed(2)} Day(s)`:"0.00 Day(s)"},leaveBalance(){return this.data?.balance?`${parseFloat(this.data.balance).toFixed(2)} Day(s)`:"0.00 Day(s)"}},methods:{onCancel(){this.$emit("close",!0)}}};const V$=(0,r.c)(C$,[["render",y$],["__scopeId","data-v-74d8516c"]]);var b$=V$;const x$={class:"orangehrm-dialog-header-container"},w$={class:"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding"},N$={class:"orangehrm-container"},_$={class:"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding"};function k$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-card-table"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(g,{gutters:!1,class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",x$,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.insufficient_leave_balance")),1)])),_:1})]),(0,a.createVNode)(d,{class:"orangehrm-dialog-horizontal-margin orangehrm-clear-margins"}),(0,a.createElementVNode)("div",w$,[(0,a.createVNode)(m,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.employee_name")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.employeeName),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("leave.leave_type")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.leaveType),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("leave.balance")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-balance-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.leaveBalance),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})]),(0,a.createElementVNode)("div",N$,[(0,a.createVNode)(u,{headers:n.headers,items:r.items,clickable:!1,class:"orangehrm-horizontal-padding","row-decorator":"oxd-table-decorator-card"},null,8,["headers","items"])]),(0,a.createElementVNode)("div",_$,[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{type:"submit","display-type":"secondary",label:e.$t("general.ok"),onClick:r.onCancel},null,8,["label","onClick"])])),_:1})])])),_:1},8,["onUpdate:show"])}var S$={name:"LeaveBalanceInsufficientModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Array,required:!0},meta:{type:Object,default:()=>null}},emits:["close"],setup(){const{jsDateFormat:e}=R(),{locale:t}=Le();return{locale:t,jsDateFormat:e}},data(){return{headers:[{title:this.$t("leave.leave_period"),name:"period",style:{flex:1}},{title:this.$t("general.date"),name:"date",style:{flex:1}},{title:this.$t("leave.available_balance"),name:"balance",style:{flex:1}}]}},computed:{items(){if(this.data.length>0){const e=this.data.map((e=>e.period));return e.flatMap(((e,t)=>this.data[t].leaves.map((t=>{const o=pe(ue(e.startDate),this.jsDateFormat,{locale:this.locale}),a=pe(ue(e.endDate),this.jsDateFormat,{locale:this.locale}),l=pe(ue(t.date),this.jsDateFormat,{locale:this.locale});return{period:`${o} - ${a}`,date:l,balance:t.status?.name||t.balance.toFixed(2)}}))))}return[]},leaveType(){return this.meta?.leaveType?.name},employeeName(){const e=this.meta?.employee;return e?`${e.firstName} ${e.lastName}\n          ${e.terminationId?this.$t("general.past_employee"):""}`:""},leaveBalance(){return this.data[0]?.balance?`${parseFloat(this.data[0].balance.balance).toFixed(2)} Day(s)`:"0.00 Day(s)"}},methods:{onCancel(){this.$emit("close",!0)}}};const $$=(0,r.c)(S$,[["render",k$],["__scopeId","data-v-390c149c"]]);var D$=$$;function E$(e){const t=e=>{const t={leaveTypeId:e.type?e.type.id:1,fromDate:e.fromDate?e.fromDate:"",toDate:e.toDate?e.toDate:"",comment:""===e.comment?null:e.comment,empNumber:e.employee?e.employee.id:void 0};if(e.duration.type){const o={type:e.duration.type?.key};"specify_time"===o.type&&(e.duration.fromTime&&(o.fromTime=e.duration.fromTime),e.duration.toTime&&(o.toTime=e.duration.toTime)),t.duration=o}const o=Ve(t.fromDate,t.toDate);if(o>1&&e.partialOptions&&(t.partialOption=e.partialOptions.key,e.endDuration.type)){const o={type:e.endDuration.type.key};e.endDuration.fromTime&&(o.fromTime=e.endDuration.fromTime),e.endDuration.toTime&&(o.toTime=e.endDuration.toTime),"start_end"===t.partialOption?t.endDuration=o:"end"===t.partialOption&&(t.duration=o)}return"specify_time"!==t.duration?.type&&(t.duration?.fromTime||t.duration?.toTime)&&(t.duration.fromTime=void 0,t.duration.toTime=void 0),"specify_time"!==t.endDuration?.type&&(t.endDuration?.fromTime||t.endDuration?.toTime)&&(t.endDuration.fromTime=void 0,t.endDuration.toTime=void 0),t},o=e=>{const t={fromDate:void 0,toDate:void 0,partialOption:void 0,empNumber:e.employee?.id};if(e.duration.type&&(t["duration[type]"]=e.duration.type.key,"specify_time"===t["duration[type]"]&&(e.duration.fromTime&&(t["duration[fromTime]"]=e.duration.fromTime),e.duration.toTime&&(t["duration[toTime]"]=e.duration.toTime))),e.fromDate&&e.toDate){t.fromDate=e.fromDate,t.toDate=e.toDate;const o=Ve(e.fromDate,e.toDate);o>1&&e.partialOptions&&(t.partialOption=e.partialOptions.key,e.endDuration.type&&("start_end"===t.partialOption?(t["endDuration[type]"]=e.endDuration.type.key,e.endDuration.fromTime&&(t["endDuration[fromTime]"]=e.endDuration.fromTime),e.endDuration.toTime&&(t["endDuration[toTime]"]=e.endDuration.toTime)):"end"===t.partialOption&&(t["duration[type]"]=e.endDuration.type.key,e.endDuration.fromTime&&(t["duration[fromTime]"]=e.endDuration.fromTime),e.endDuration.toTime&&(t["duration[toTime]"]=e.endDuration.toTime))))}return"specify_time"!==t["duration[type]"]&&(t["duration[fromTime]"]||t["duration[toTime]"])&&(t["duration[fromTime]"]=void 0,t["duration[toTime]"]=void 0),"specify_time"!==t["endDuration[type]"]&&(t["endDuration[fromTime]"]||t["endDuration[toTime]"])&&(t["endDuration[fromTime]"]=void 0,t["endDuration[toTime]"]=void 0),t},a=t=>new Promise(((a,l)=>{e.request({method:"GET",url:"/api/v2/leave/overlap-leaves",params:o(t)}).then((e=>{const{data:t,meta:o}=e.data;Array.isArray(t)&&t.length>0?a({isConflict:!0,isOverWorkshift:!0===o.isWorkShiftLengthExceeded,data:t}):a({isConflict:!1,isOverWorkshift:!1,data:[]})})).catch((e=>{l(e)}))})),l=t=>new Promise(((a,l)=>{e.request({method:"GET",url:`/api/v2/leave/leave-balance/leave-type/${t.type?.id}`,params:o(t)}).then((e=>{let t=0,o=null,l=null;if(200===e.status){const{data:a,meta:n}=e.data;l=n,a.balance?(o=a.balance,t=a.balance?.balance):a.breakdown&&!1===a.negative?(o=a.breakdown[0].balance,t=a.breakdown[0].balance?.balance):a.breakdown&&!0===a.negative?(o=a.breakdown,t=-1):(o=null,t=0)}a({balance:t,breakdown:o,metaData:l})})).catch((e=>{l(e)}))}));return{serializeBody:t,serializeParams:o,validateLeaveBalance:l,validateOverlapLeaves:a}}var T$={name:"LeaveBalance",components:{"oxd-label":q.OxdLabel,"leave-balance-modal":b$,"leave-balance-insufficient-modal":D$},inheritAttrs:!1,props:{leaveData:{type:Object,default:()=>({})}},setup(e){const t=(0,a.reactive)({data:null,meta:null,balance:0,showModal:!1}),o=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-balance/leave-type");o.setIgnorePath("/api/v2/leave/leave-balance/leave-type");const{validateLeaveBalance:l}=E$(o),n=(0,a.computed)((()=>e.leaveData.type?.id?`${t.balance.toFixed(2)} Day(s)`:"0.00 Day(s)")),r=()=>{t.showModal=!0},i=()=>{t.showModal=!1},d=(0,a.computed)((()=>Array.isArray(t.data)?"leave-balance-insufficient-modal":"leave-balance-modal"));return(0,a.watchPostEffect)((async()=>{e.leaveData.type?.id&&l(e.leaveData).then((({balance:e,breakdown:o,metaData:a})=>{t.balance=e,o&&(t.data=o),a&&(t.meta=a)})).catch((()=>{t.data=null,t.meta=null,t.balance=0}))})),{...(0,a.toRefs)(t),leaveBalance:n,onModalOpen:r,onModalClose:i,leaveBalanceModal:d}}};const I$=(0,r.c)(T$,[["render",p$],["__scopeId","data-v-642bc4ee"]]);var B$=I$;const L$={class:"orangehrm-paper-container"},U$={class:"orangehrm-header-container"},A$={class:"orangehrm-container"},P$=(0,a.createElementVNode)("div",{class:"orangehrm-bottom-container"},null,-1),q$=(0,a.createElementVNode)("br",null,null,-1);function F$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",L$,[(0,a.createElementVNode)("div",U$,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.header),1)])),_:1})]),(0,a.createVNode)(d,{loading:!1,selected:0,total:o.data.length},null,8,["total"]),(0,a.createElementVNode)("div",A$,[(0,a.createVNode)(s,{headers:n.headers,items:r.items,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items"])]),P$]),q$],64)}var M$={name:"LeaveConflict",props:{workshiftExceeded:{type:Boolean,default:!1},data:{type:Array,required:!0}},setup(){const{jsDateFormat:e}=R(),{locale:t}=Le();return{locale:t,jsDateFormat:e}},data(){return{headers:[{name:"date",title:this.$t("general.date"),style:{flex:1}},{name:"hours",title:this.$t("leave.no_of_hours"),style:{flex:1}},{name:"type",title:this.$t("leave.leave_type"),style:{flex:1}},{name:"status",title:this.$t("general.status"),style:{flex:1}},{name:"comments",title:this.$t("general.comments"),style:{flex:1}}]}},computed:{header(){return this.workshiftExceeded?this.$t("leave.workshift_length_exceeded_due_to_the_following_leave_request"):this.$t("leave.overlapping_leave_request_found")},items(){return this.data.map((e=>({date:pe(ue(e.date),this.jsDateFormat,{locale:this.locale}),hours:parseFloat(e.lengthHours).toFixed(2),type:e.leaveType?.name,status:e.status?.name,comments:e.lastComment?.comment})))}}};const z$=(0,r.c)(M$,[["render",F$]]);var j$=z$;const R$={type:null,fromDate:null,toDate:null,comment:"",partialOptions:null,duration:{type:null,fromTime:null,toTime:null},endDuration:{type:null,fromTime:null,toTime:null}};var O$={name:"LeaveApply",components:{"leave-duration-input":m$,"leave-balance":B$,"leave-conflict":j$},props:{workShift:{type:Object,default:()=>({})}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-requests"),{serializeBody:t,validateOverlapLeaves:o}=E$(e),{formRef:a,reset:l}=qc(),{userDateFormat:n}=R();return{http:e,reset:l,formRef:a,serializeBody:t,userDateFormat:n,validateOverlapLeaves:o}},data(){return{isLoading:!1,leave:{...R$},rules:{type:[Ht],fromDate:[Ht,Yt(this.userDateFormat)],toDate:[Ht,Yt(this.userDateFormat),ro((()=>this.leave.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})],comment:[Wt(250)]},partialOptions:[{id:1,label:this.$t("leave.all_days"),key:"all"},{id:2,label:this.$t("leave.start_day_only"),key:"start"},{id:3,label:this.$t("leave.end_day_only"),key:"end"},{id:4,label:this.$t("leave.start_and_end_day"),key:"start_end"}],showLeaveConflict:!1,isWorkShiftExceeded:!1,leaveConflictData:null,yearsArray:[...Uy()],leaveTypes:[]}},computed:{appliedLeaveDuration(){return Ve(this.leave.fromDate,this.leave.toDate)},showDuration(){const e=this.leave.partialOptions?.id;return e&&1===e},showStartDay(){const e=this.leave.partialOptions?.id;return e&&(2===e||4===e)},showEndDay(){const e=this.leave.partialOptions?.id;return e&&(3===e||4===e)}},watch:{appliedLeaveDuration:function(e){this.leave.duration.type=1===e?{id:1,label:"Full Day",key:"full_day"}:null},"leave.fromDate":function(e){e&&!this.leave.toDate&&(this.leave.toDate=e)}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:"/api/v2/leave/leave-types/eligible"}).then((e=>{const{data:t}=e.data;this.leaveTypes=t.map((e=>({id:e.id,label:e.name})))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.showLeaveConflict=!1,this.leaveConflictData=null,this.validateOverlapLeaves(this.leave).then((({isConflict:e,isOverWorkshift:t,data:o})=>e?(this.leaveConflictData=o,this.showLeaveConflict=!0,this.isWorkShiftExceeded=t,Promise.reject()):this.http.create(this.serializeBody(this.leave)))).then((()=>{this.$toast.saveSuccess(),this.reset()})).catch((()=>{this.showLeaveConflict&&this.$toast.warn({title:this.$t("general.warning"),message:this.$t("leave.failed_to_submit")})})).finally((()=>{this.isLoading=!1}))}}};const G$=(0,r.c)(O$,[["render",a$]]);var Q$=G$;const H$={class:"orangehrm-background-container"},W$={class:"orangehrm-card-container"};function Y$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("leave-conflict"),d=(0,a.resolveComponent)("leave-assign-confirm-modal"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-divider"),m=(0,a.resolveComponent)("employee-autocomplete"),u=(0,a.resolveComponent)("oxd-grid-item"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("leave-type-dropdown"),v=(0,a.resolveComponent)("leave-balance"),f=(0,a.resolveComponent)("date-input"),y=(0,a.resolveComponent)("leave-duration-input"),C=(0,a.resolveComponent)("oxd-input-field"),V=(0,a.resolveComponent)("required-text"),b=(0,a.resolveComponent)("submit-button"),x=(0,a.resolveComponent)("oxd-form-actions"),w=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",H$,[n.showLeaveConflict?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,"workshift-exceeded":n.isWorkShiftExceeded,data:n.leaveConflictData},null,8,["workshift-exceeded","data"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d,{ref:"confirmDialog"},null,512),(0,a.createElementVNode)("div",W$,[(0,a.createVNode)(s,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.assign_leave")),1)])),_:1}),(0,a.createVNode)(c),(0,a.createVNode)(w,{ref:"formRef",loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.leave.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leave.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.leave.type,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leave.type=e),rules:n.rules.type,"eligible-only":!1,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{"leave-data":n.leave},null,8,["leave-data"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{modelValue:n.leave.fromDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leave.fromDate=e),label:e.$t("general.from_date"),rules:n.rules.fromDate,years:n.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{modelValue:n.leave.toDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.leave.toDate=e),label:e.$t("general.to_date"),rules:n.rules.toDate,years:n.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),1==r.appliedLeaveDuration?((0,a.openBlock)(),(0,a.createBlock)(h,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y,{duration:n.leave.duration.type,"onUpdate:duration":t[4]||(t[4]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[5]||(t[5]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[6]||(t[6]=e=>n.leave.duration.toTime=e),label:e.$t("general.duration"),"work-shift":n.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),r.appliedLeaveDuration>1?((0,a.openBlock)(),(0,a.createBlock)(h,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C,{modelValue:n.leave.partialOptions,"onUpdate:modelValue":t[7]||(t[7]=e=>n.leave.partialOptions=e),type:"select",label:e.$t("leave.partial_days"),options:n.partialOptions},null,8,["modelValue","label","options"])])),_:1}),r.showDuration?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,duration:n.leave.duration.type,"onUpdate:duration":t[8]||(t[8]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[9]||(t[9]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[10]||(t[10]=e=>n.leave.duration.toTime=e),partial:!0,label:e.$t("general.duration"),"work-shift":n.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0),r.showStartDay?((0,a.openBlock)(),(0,a.createBlock)(y,{key:1,duration:n.leave.duration.type,"onUpdate:duration":t[11]||(t[11]=e=>n.leave.duration.type=e),fromTime:n.leave.duration.fromTime,"onUpdate:fromTime":t[12]||(t[12]=e=>n.leave.duration.fromTime=e),toTime:n.leave.duration.toTime,"onUpdate:toTime":t[13]||(t[13]=e=>n.leave.duration.toTime=e),partial:!0,label:e.$t("leave.start_day"),"work-shift":n.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0),r.showEndDay?((0,a.openBlock)(),(0,a.createBlock)(y,{key:2,duration:n.leave.endDuration.type,"onUpdate:duration":t[14]||(t[14]=e=>n.leave.endDuration.type=e),fromTime:n.leave.endDuration.fromTime,"onUpdate:fromTime":t[15]||(t[15]=e=>n.leave.endDuration.fromTime=e),toTime:n.leave.endDuration.toTime,"onUpdate:toTime":t[16]||(t[16]=e=>n.leave.endDuration.toTime=e),partial:!0,label:e.$t("leave.end_day"),"work-shift":n.workShift},null,8,["duration","fromTime","toTime","label","work-shift"])):(0,a.createCommentVNode)("",!0)])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C,{modelValue:n.leave.comment,"onUpdate:modelValue":t[17]||(t[17]=e=>n.leave.comment=e),type:"textarea",label:e.$t("general.comments"),rules:n.rules.comment},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(c),(0,a.createVNode)(x,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(V),(0,a.createVNode)(b,{label:e.$t("leave.assign")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const J$={key:0,class:"deleted-tag"};function X$(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("leave.leave_type"),options:l.options,"show-empty-selector":o.showEmptySelector},{option:(0,a.withCtx)((({data:t})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(t.label),1),t.isDeleted?((0,a.openBlock)(),(0,a.createElementBlock)("div",J$,(0,a.toDisplayString)(e.$t("general.deleted")),1)):(0,a.createCommentVNode)("",!0)])),_:1},8,["label","options","show-empty-selector"])}var K$={name:"LeaveTypeDropdown",props:{eligibleOnly:{type:Boolean,default:!0},employeeId:{type:Number,required:!1,default:null},showEmptySelector:{type:Boolean,default:!0},includeAllocated:{type:Boolean,default:!1}},setup(e,t){const o=(0,a.ref)([]),l=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-types"+(e.eligibleOnly?"/eligible":""));return(0,a.watchEffect)((async()=>{!e.eligibleOnly&&e.includeAllocated&&console.error("`includeAllocated` prop can true only if `eligibleOnly` prop true"),l.getAll({empNumber:e.employeeId,includeAllocated:!(!e.eligibleOnly||!e.includeAllocated)||void 0,...!1===e.eligibleOnly&&{limit:0}}).then((({data:a})=>{o.value=a.data.map((e=>({id:e.id,label:e.name,isDeleted:e.deleted}))),!e.showEmptySelector&&o.value.length>0&&t.emit("update:modelValue",o.value[0])}))})),{options:o}}};const Z$=(0,r.c)(K$,[["render",X$],["__scopeId","data-v-1e0133f0"]]);var eD=Z$;const tD={class:"orangehrm-modal-header"},oD={class:"orangehrm-text-center-align"},aD={class:"orangehrm-modal-footer"};function lD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,style:{maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",tD,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.confirm_leave_assignment")),1)])),_:1})]),(0,a.createElementVNode)("div",oD,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.employee_does_not_have_enough_balance_for_leave_request"))+" "+(0,a.toDisplayString)(e.$t("leave.click_ok_to_confirm_leave_assignment")),1)])),_:1})]),(0,a.createElementVNode)("div",aD,[(0,a.createVNode)(d,{"display-type":"ghost",class:"orangehrm-button-margin",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{"display-type":"secondary",class:"orangehrm-button-margin",label:e.$t("general.ok"),onClick:r.onConfirm},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var nD={name:"LeaveAssignConfirmModal",components:{"oxd-dialog":q.OxdDialog},data(){return{show:!1,reject:null,resolve:null}},methods:{showDialog(){return new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const rD=(0,r.c)(nD,[["render",lD],["__scopeId","data-v-54b79656"]]);var iD=rD;const dD={employee:null,type:null,fromDate:null,toDate:null,comment:"",partialOptions:null,duration:{type:null,fromTime:null,toTime:null},endDuration:{type:null,fromTime:null,toTime:null}},sD={startTime:"9:00",endTime:"17:00"};var cD={name:"LeaveAssign",components:{"leave-type-dropdown":eD,"leave-duration-input":m$,"leave-balance":B$,"employee-autocomplete":$a,"leave-conflict":j$,"leave-assign-confirm-modal":iD},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/employees/leave-requests"),{serializeBody:t,validateLeaveBalance:o,validateOverlapLeaves:a}=E$(e),{formRef:l,reset:n}=qc(),{userDateFormat:r}=R();return{http:e,reset:n,formRef:l,serializeBody:t,userDateFormat:r,validateLeaveBalance:o,validateOverlapLeaves:a}},data(){return{isLoading:!1,leave:{...dD},rules:{type:[Ht],fromDate:[Ht,Yt(this.userDateFormat)],toDate:[Ht,Yt(this.userDateFormat),ro((()=>this.leave.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})],comment:[Wt(250)],employee:[Ht,So]},partialOptions:[{id:1,label:this.$t("leave.all_days"),key:"all"},{id:2,label:this.$t("leave.start_day_only"),key:"start"},{id:3,label:this.$t("leave.end_day_only"),key:"end"},{id:4,label:this.$t("leave.start_and_end_day"),key:"start_end"}],showLeaveConflict:!1,isWorkShiftExceeded:!1,leaveConflictData:null,yearsArray:[...Uy()],workShift:{...sD}}},computed:{appliedLeaveDuration(){return Ve(this.leave.fromDate,this.leave.toDate)},showDuration(){const e=this.leave.partialOptions?.id;return e&&1===e},showStartDay(){const e=this.leave.partialOptions?.id;return e&&(2===e||4===e)},showEndDay(){const e=this.leave.partialOptions?.id;return e&&(3===e||4===e)}},watch:{"leave.employee":function(e){e?.id?this.http.request({method:"GET",url:`/api/v2/pim/employees/${e.id}/work-shift`}).then((e=>{const{data:t}=e.data;this.workShift=t})):this.workShift={...sD}},appliedLeaveDuration:function(e){this.leave.duration.type=1===e?{id:1,label:"Full Day",key:"full_day"}:null},"leave.fromDate":function(e){e&&!this.leave.toDate&&(this.leave.toDate=e)}},methods:{onSave(){this.isLoading=!0,this.leaveConflictData=null,this.showLeaveConflict=!1,this.validateLeaveBalance(this.leave).then((async({balance:e})=>{if(e<=0){const e=await this.$refs.confirmDialog.showDialog();if("ok"!==e)return Promise.reject()}return this.validateOverlapLeaves(this.leave)})).then((({isConflict:e,isOverWorkshift:t,data:o})=>e?(this.leaveConflictData=o,this.showLeaveConflict=!0,this.isWorkShiftExceeded=t,Promise.reject()):this.http.create(this.serializeBody(this.leave)))).then((()=>{this.$toast.saveSuccess(),this.reset()})).catch((()=>{this.showLeaveConflict&&this.$toast.warn({title:this.$t("general.warning"),message:this.$t("leave.failed_to_submit")})})).finally((()=>{this.isLoading=!1}))}}};const mD=(0,r.c)(cD,[["render",Y$]]);var uD=mD;const pD={class:"orangehrm-background-container"},hD={class:"orangehrm-paper-container"},gD={class:"orangehrm-header-container"},vD={class:"orangehrm-container"},fD={class:"orangehrm-bottom-container"};function yD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",pD,[(0,a.createElementVNode)("div",hD,[(0,a.createElementVNode)("div",gD,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.leave_types")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",vD,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),loading:l.isLoading,headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","loading","headers","items"])]),(0,a.createElementVNode)("div",fD,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var CD={components:{"delete-confirmation":At},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-types"),{showPaginator:t,currentPage:o,total:a,pages:l,pageSize:n,response:r,isLoading:i,execQuery:d}=Dt(e);return{http:e,showPaginator:t,currentPage:o,isLoading:i,total:a,pages:l,pageSize:n,execQuery:d,items:r}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:6}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/leave/defineLeaveType")},onClickEdit(e){U("/leave/defineLeaveType/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const VD=(0,r.c)(CD,[["render",yD]]);var bD=VD;const xD={class:"orangehrm-background-container"},wD={class:"orangehrm-card-container"},ND={class:"label-is-entitlement-situational"};function _D(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-label"),u=(0,a.resolveComponent)("oxd-icon-button"),p=(0,a.resolveComponent)("oxd-input-group"),h=(0,a.resolveComponent)("oxd-grid-item"),g=(0,a.resolveComponent)("oxd-grid"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("entitlement-situational-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",xD,[(0,a.createElementVNode)("div",wD,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.edit_leave_type")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveType.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leaveType.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{classes:{wrapper:"--status-grouped-field"}},{label:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",ND,[(0,a.createVNode)(m,{label:e.$t("leave.is_entitlement_situational")},null,8,["label"]),(0,a.createVNode)(u,{class:"--help",name:"exclamation-circle","with-container":!1,onClick:r.onModalOpen},null,8,["onClick"])])])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveType.situational,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leaveType.situational=e),type:"radio","option-label":e.$t("general.yes"),value:!0},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.leaveType.situational,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leaveType.situational=e),type:"radio","option-label":e.$t("general.no"),value:!1},null,8,["modelValue","option-label"])])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"]),n.showModal?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,onClose:r.onModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)])])}const kD={class:"orangehrm-modal-header"},SD={class:"orangehrm-text-center-align"},$D={class:"orangehrm-modal-footer"};function DD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-form-actions"),c=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(c,{class:"orangehrm-dialog-popup","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",kD,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.situational_leave")),1)])),_:1})]),(0,a.createElementVNode)("div",SD,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.entitlement_situational_description")),1)])),_:1})]),(0,a.createElementVNode)("div",$D,[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"submit","display-type":"secondary",label:e.$t("general.ok"),onClick:r.onCancel},null,8,["label","onClick"])])),_:1})])])),_:1},8,["onUpdate:show"])}var ED={name:"EntitlementSituationalModal",components:{"oxd-dialog":q.OxdDialog},emits:["close"],methods:{onCancel(){this.$emit("close",!0)}}};const TD=(0,r.c)(ED,[["render",DD],["__scopeId","data-v-f6a36e74"]]);var ID=TD;const BD={id:"",name:"",situational:""};var LD={components:{"oxd-label":q.OxdLabel,"entitlement-situational-modal":ID},props:{leaveTypeId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-types"),{createUniqueValidator:o}=qo(t),a=o("LeaveType","name",{entityId:e.leaveTypeId});return{http:t,leaveTypeUniqueValidation:a}},data(){return{showModal:!1,isLoading:!1,leaveType:{...BD},rules:{name:[Ht,this.leaveTypeUniqueValidation,Wt(50)]}}},created(){this.isLoading=!0,this.http.get(this.leaveTypeId).then((e=>{const{data:t}=e.data;this.leaveType.id=t.id,this.leaveType.name=t.name,this.leaveType.situational=t.situational})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.leaveTypeId,{name:this.leaveType.name,situational:this.leaveType.situational}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/leave/leaveTypeList")},onModalOpen(){this.showModal=!0},onModalClose(){this.showModal=!1}}};const UD=(0,r.c)(LD,[["render",_D],["__scopeId","data-v-094f309e"]]);var AD=UD;const PD={class:"orangehrm-background-container"},qD={class:"orangehrm-card-container"},FD={class:"label-is-entitlement-situational"};function MD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-label"),u=(0,a.resolveComponent)("oxd-icon-button"),p=(0,a.resolveComponent)("oxd-input-group"),h=(0,a.resolveComponent)("oxd-grid-item"),g=(0,a.resolveComponent)("oxd-grid"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("entitlement-situational-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",PD,[(0,a.createElementVNode)("div",qD,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.add_leave_type")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveType.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leaveType.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{classes:{wrapper:"--status-grouped-field"}},{label:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",FD,[(0,a.createVNode)(m,{label:e.$t("leave.is_entitlement_situational")},null,8,["label"]),(0,a.createVNode)(u,{class:"--help",name:"exclamation-circle","with-container":!1,onClick:r.onModalOpen},null,8,["onClick"])])])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveType.situational,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leaveType.situational=e),type:"radio","option-label":e.$t("general.yes"),value:!0},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.leaveType.situational,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leaveType.situational=e),type:"radio","option-label":e.$t("general.no"),value:!1},null,8,["modelValue","option-label"])])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"]),n.showModal?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,onClose:r.onModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)])])}const zD={id:"",name:"",situational:!1};var jD={components:{"oxd-label":q.OxdLabel,"entitlement-situational-modal":ID},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-types"),{createUniqueValidator:t}=qo(e),o=t("LeaveType","name");return{http:e,leaveTypeUniqueValidation:o}},data(){return{showModal:!1,isLoading:!1,leaveType:{...zD},rules:{name:[Ht,this.leaveTypeUniqueValidation,Wt(50)]},errors:[]}},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.leaveType.name,situational:this.leaveType.situational}).then((()=>this.$toast.saveSuccess())).then((()=>{this.leaveType={...zD},this.onCancel()}))},onCancel(){U("/leave/leaveTypeList")},onModalOpen(){this.showModal=!0},onModalClose(){this.showModal=!1}}};const RD=(0,r.c)(jD,[["render",MD],["__scopeId","data-v-f429dbb4"]]);var OD=RD;const GD={class:"orangehrm-background-container"},QD={class:"orangehrm-card-container"};function HD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-input-group"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("employee-autocomplete"),g=(0,a.resolveComponent)("leave-type-dropdown"),v=(0,a.resolveComponent)("leave-period-dropdown"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form"),x=(0,a.resolveComponent)("entitlement-update-modal"),w=(0,a.resolveComponent)("entitlement-bulk-update-modal"),N=(0,a.resolveComponent)("entitlement-no-match-modal");return(0,a.openBlock)(),(0,a.createElementBlock)("div",GD,[(0,a.createElementVNode)("div",QD,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.add_leave_entitlement")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(b,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{label:e.$t("leave.add_to"),classes:{wrapper:"--grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.bulkAssign,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leaveEntitlement.bulkAssign=e),type:"radio","option-label":e.$t("leave.individual_employee"),value:"0"},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.bulkAssign,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leaveEntitlement.bulkAssign=e),type:"radio","option-label":e.$t("leave.multiple_employees"),value:"1"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),0==n.leaveEntitlement.bulkAssign?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.leaveEntitlement.employee,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leaveEntitlement.employee=e),params:{includeEmployees:"currentAndPast"},rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1})):((0,a.openBlock)(),(0,a.createBlock)(p,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.location,"onUpdate:modelValue":t[3]||(t[3]=e=>n.leaveEntitlement.location=e),type:"select",label:e.$t("general.location"),options:o.locations},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.subunit,"onUpdate:modelValue":t[4]||(t[4]=e=>n.leaveEntitlement.subunit=e),type:"select",label:e.$t("general.sub_unit"),options:o.subunits},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-leave-entitled"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-entitled-text",type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.matches_emp_count_employees",{empMatchCount:n.empMatchCount})),1)])),_:1})])),_:1})])),_:1})])),_:1})),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.leaveEntitlement.leaveType,"onUpdate:modelValue":t[5]||(t[5]=e=>n.leaveEntitlement.leaveType=e),"empty-text":e.$t("leave.no_leave_types_defined"),rules:n.rules.leaveType,"eligible-only":!1,required:""},null,8,["modelValue","empty-text","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{modelValue:n.leaveEntitlement.leavePeriod,"onUpdate:modelValue":t[6]||(t[6]=e=>n.leaveEntitlement.leavePeriod=e),rules:n.rules.leavePeriod,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.entitlement,"onUpdate:modelValue":t[7]||(t[7]=e=>n.leaveEntitlement.entitlement=e),rules:n.rules.entitlement,label:e.$t("leave.entitlement"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(C)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(x,{ref:"updateModal",data:n.leaveEntitlement},null,8,["data"]),(0,a.createVNode)(w,{ref:"bulkUpdateModal",data:n.leaveEntitlement},null,8,["data"]),(0,a.createVNode)(N,{ref:"noMatchModal"},null,512)])}function WD(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("leave.leave_period"),options:l.options,"model-value":l.selectedPeriod,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:modelValue",t))},null,8,["label","options","model-value"])}var YD={name:"LeavePeriodDropdown",props:{modelValue:{type:Object,default:null}},emits:["update:modelValue"],setup(e){const t=(0,a.ref)([]),o=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-periods"),{jsDateFormat:l}=R(),{locale:n}=Le();(0,a.onBeforeMount)((()=>{o.getAll().then((({data:e})=>{t.value=e.data.map((e=>{const t=pe(ue(e.startDate),l,{locale:n}),o=pe(ue(e.endDate),l,{locale:n});return{id:`${e.startDate}_${e.endDate}`,label:`${t} - ${o}`,startDate:e.startDate,endDate:e.endDate}}))}))}));const r=(0,a.computed)((()=>t.value.find((t=>t.id===e.modelValue?.id))));return{options:t,selectedPeriod:r}}};const JD=(0,r.c)(YD,[["render",WD]]);var XD=JD;const KD={class:"orangehrm-modal-header"},ZD={class:"orangehrm-text-center-align"},eE={class:"orangehrm-modal-footer"};function tE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,style:{maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",KD,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.updating_entitlement")),1)])),_:1})]),(0,a.createElementVNode)("div",ZD,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.entitlement_value_confirmation_message",{oldvalue:n.current,newvalue:n.updateAs})),1)])),_:1})]),(0,a.createElementVNode)("div",eE,[(0,a.createVNode)(d,{"display-type":"ghost",class:"orangehrm-button-margin",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{"display-type":"secondary",class:"orangehrm-button-margin",label:e.$t("general.confirm"),onClick:r.onConfirm},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var oE={name:"EntitlementUpdateModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"");return{http:e}},data(){return{show:!1,reject:null,resolve:null,current:"0.00",updateAs:"0.00"}},methods:{showDialog(){return this.http.request({method:"GET",url:`/api/v2/leave/employees/${this.data.employee?.id}/leave-entitlements`,params:{leaveTypeId:this.data.leaveType?.id,fromDate:this.data.leavePeriod?.startDate,toDate:this.data.leavePeriod?.endDate,entitlement:this.data.entitlement}}).then((e=>{const{data:t}=e.data;return this.current=t.entitlement?.current?parseFloat(t.entitlement.current).toFixed(2):"0.00",this.updateAs=t.entitlement?.updateAs?parseFloat(t.entitlement.updateAs).toFixed(2):"0.00",new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))}))},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const aE=(0,r.c)(oE,[["render",tE],["__scopeId","data-v-1eee2e9c"]]);var lE=aE;const nE={class:"orangehrm-dialog-header-container"},rE={class:"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding"},iE={class:"orangehrm-container"},dE={class:"orangehrm-dialog-horizontal-padding orangehrm-dialog-vertical-padding"};function sE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-card-table"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("submit-button"),u=(0,a.resolveComponent)("oxd-form-actions"),p=(0,a.resolveComponent)("oxd-dialog");return n.show?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,gutters:!1,class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",nE,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.updating_entitlement"))+" - "+(0,a.toDisplayString)(e.$t("leave.matching_employees")),1)])),_:1})]),(0,a.createVNode)(d,{class:"orangehrm-dialog-horizontal-margin orangehrm-clear-margins"}),(0,a.createElementVNode)("div",rE,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.selected_leave_entitlement_applied_to_following_employees")),1)])),_:1})]),(0,a.createElementVNode)("div",iE,[(0,a.createVNode)(s,{headers:n.headers,items:n.items,clickable:!1,class:"orangehrm-horizontal-padding","row-decorator":"oxd-table-decorator-card"},null,8,["headers","items"])]),(0,a.createElementVNode)("div",dE,[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(m,{label:e.$t("general.confirm"),onClick:r.onConfirm},null,8,["label","onClick"])])),_:1})])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)}var cE={name:"EntitlementBulkUpdateModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/employees/leave-entitlements");return{http:e}},data(){return{show:!1,reject:null,resolve:null,headers:[{title:this.$t("general.employee"),name:"employee",slot:"title",style:{flex:1}},{title:this.$t("leave.old_entitlement"),name:"current",style:{flex:1}},{title:this.$t("leave.new_entitlement"),name:"updateAs",style:{flex:1}}],items:[]}},methods:{showDialog(){return this.http.getAll({leaveTypeId:this.data.leaveType?.id,fromDate:this.data.leavePeriod?.startDate,toDate:this.data.leavePeriod?.endDate,entitlement:this.data.entitlement,locationId:this.data.location?.id,subunitId:this.data.subunit?.id}).then((e=>{const{data:t}=e.data;return this.items=Array.isArray(t)?t.map((e=>({employee:`${e.firstName} ${e.lastName}`,current:e.entitlement?.current?parseFloat(e.entitlement.current).toFixed(2):"0.00",updateAs:e.entitlement?.updateAs?parseFloat(e.entitlement.updateAs).toFixed(2):"0.00"}))):[],new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))}))},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const mE=(0,r.c)(cE,[["render",sE],["__scopeId","data-v-c94a08c2"]]);var uE=mE;const pE={class:"orangehrm-modal-header"},hE={class:"orangehrm-text-center-align"},gE={class:"orangehrm-modal-footer"};function vE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,style:{maxWidth:"450px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",pE,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.no_matching_employees")),1)])),_:1})]),(0,a.createElementVNode)("div",hE,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.no_employees_match_filters")),1)])),_:1})]),(0,a.createElementVNode)("div",gE,[(0,a.createVNode)(d,{"display-type":"secondary",label:e.$t("general.ok"),onClick:r.onCancel},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var fE={name:"EntitlementNoMatchModal",components:{"oxd-dialog":q.OxdDialog},data(){return{show:!1}},methods:{showDialog(){this.show=!0},onCancel(){this.show=!1}}};const yE=(0,r.c)(fE,[["render",vE],["__scopeId","data-v-39bebef2"]]);var CE=yE;const VE={bulkAssign:0,employee:null,leaveType:null,leavePeriod:null,entitlement:"",subunit:null,location:null};var bE={components:{"leave-type-dropdown":eD,"leave-period-dropdown":XD,"employee-autocomplete":$a,"entitlement-update-modal":lE,"entitlement-bulk-update-modal":uE,"entitlement-no-match-modal":CE},props:{locations:{type:Array,default:()=>[]},subunits:{type:Array,default:()=>[]},leavePeriod:{type:Object,required:!1,default:()=>null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-entitlements");return{http:e}},data(){return{isLoading:!1,leaveEntitlement:{...VE},leavePeriodDefined:!1,rules:{employee:[Ht,So],leaveType:[Ht],leavePeriod:[Ht],entitlement:[Ht,e=>/^\d+(\.\d{1,2})?$/.test(e)||this.$t("leave.should_be_a_number_with_2_decimal_places"),Kt(1e4)]},empMatchCount:0}},watch:{"leaveEntitlement.location":"fetchEmployeeCount","leaveEntitlement.subunit":"fetchEmployeeCount"},beforeMount(){this.fetchEmployeeCount(),this.leavePeriod&&(this.leaveEntitlement.leavePeriod=this.leavePeriod)},methods:{onCancel(){U("/leave/viewLeaveEntitlements")},async onSave(){let e=null;this.isLoading=!0;const t=1==this.leaveEntitlement.bulkAssign;if(t){if(0===this.empMatchCount)return this.isLoading=!1,this.$refs.noMatchModal.showDialog();e=await this.$refs.bulkUpdateModal.showDialog()}else e=await this.$refs.updateModal.showDialog();if("ok"!==e)return void(this.isLoading=!1);const o={empNumber:void 0,bulkAssign:void 0,locationId:void 0,subunitId:void 0,leaveTypeId:this.leaveEntitlement.leaveType?.id,fromDate:this.leaveEntitlement.leavePeriod?.startDate,toDate:this.leaveEntitlement.leavePeriod?.endDate,entitlement:this.leaveEntitlement.entitlement};t?(o.bulkAssign=!0,o.locationId=this.leaveEntitlement.location?.id,o.subunitId=this.leaveEntitlement.subunit?.id):o.empNumber=this.leaveEntitlement.employee?.id,this.http.create(o).then((e=>{let t=null,o=null;const{data:a}=e.data;return Array.isArray(a)?t=this.$toast.success({title:this.$t("general.success"),message:this.$t("leave.entitlement_added_to_n_employees",{count:a.length})}):(o={empNumber:a.employee.empNumber,leaveTypeId:a.leaveType.id,startDate:a.fromDate,endDate:a.toDate},t=this.$toast.saveSuccess()),new Promise((e=>{t.then((()=>{e(o)}))}))})).then((e=>{e?U("/leave/viewLeaveEntitlements",void 0,e):U("/leave/viewLeaveEntitlements")}))},async fetchEmployeeCount(){this.http.request({method:"GET",url:"/api/v2/pim/employees/count",params:{locationId:this.leaveEntitlement.location?.id,subunitId:this.leaveEntitlement.subunit?.id}}).then((e=>{const{data:t}=e.data;this.empMatchCount=parseInt(t.count)}))}}};const xE=(0,r.c)(bE,[["render",HD],["__scopeId","data-v-da722d4c"]]);var wE=xE;const NE={class:"orangehrm-background-container"},_E={class:"orangehrm-card-container"};function kE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("leave-type-dropdown"),h=(0,a.resolveComponent)("oxd-input-field"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",NE,[(0,a.createElementVNode)("div",_E,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.edit_leave_entitlement")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.leaveEntitlement.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.leaveEntitlement.employee=e),disabled:"",required:""},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.leaveEntitlement.leaveType,"onUpdate:modelValue":t[1]||(t[1]=e=>n.leaveEntitlement.leaveType=e),"eligible-only":!1,required:"",disabled:""},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.leaveEntitlement.leavePeriod,"onUpdate:modelValue":t[2]||(t[2]=e=>n.leaveEntitlement.leavePeriod=e),type:"select",label:e.$t("leave.leave_period"),options:n.leavePeriods,rules:n.rules.leavePeriod,required:""},null,8,["modelValue","label","options","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.leaveEntitlement.entitlement,"onUpdate:modelValue":t[3]||(t[3]=e=>n.leaveEntitlement.entitlement=e),rules:n.rules.entitlement,label:e.$t("leave.entitlement"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const SE={employee:null,leaveType:null,leavePeriod:null,entitlement:""};var $E={components:{"leave-type-dropdown":eD,"employee-autocomplete":$a},props:{entitlementId:{type:String,required:!0},employee:{type:Object,default:()=>({})}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-entitlements");e.setIgnorePath("/api/v2/leave/leave-entitlements/[0-9]+/validation/entitlements");const{jsDateFormat:t}=R(),{locale:o}=Le();return{http:e,jsDateFormat:t,locale:o}},data(){return{isLoading:!1,leaveEntitlement:{...SE},rules:{employee:[Ht,So],leaveType:[Ht],leavePeriod:[Ht],entitlement:[Ht,e=>/^\d+(\.\d{1,2})?$/.test(e)||this.$t("leave.should_be_a_number_with_2_decimal_places"),Kt(1e4),(0,q.promiseDebounce)(this.validateEntitlement,500)]},leavePeriods:[]}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET",url:"/api/v2/leave/leave-periods"}).then((({data:e})=>(this.leavePeriods=e.data.map((e=>{const t=pe(ue(e.startDate),this.jsDateFormat,{locale:this.locale}),o=pe(ue(e.endDate),this.jsDateFormat,{locale:this.locale});return{id:`${e.startDate}_${e.endDate}`,label:`${t} - ${o}`,startDate:e.startDate,endDate:e.endDate}})),this.http.get(this.entitlementId)))).then((e=>{const{data:t}=e.data;this.leaveEntitlement.employee={id:t.employee.empNumber,label:`${t.employee.firstName} ${t.employee.lastName}`,isPastEmployee:t.employee.terminationId},this.leaveEntitlement.leaveType={id:t.leaveType.id,label:t.leaveType.name},this.leaveEntitlement.leavePeriod=this.leavePeriods.find((e=>e.id===`${t.fromDate}_${t.toDate}`)),this.leaveEntitlement.entitlement=t.entitlement})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/leave/viewLeaveEntitlements",void 0,{empNumber:this.leaveEntitlement.employee?.id,leaveTypeId:this.leaveEntitlement.leaveType?.id,startDate:this.leaveEntitlement.leavePeriod?.startDate,endDate:this.leaveEntitlement.leavePeriod?.endDate})},onSave(){this.isLoading=!0;const e={fromDate:this.leaveEntitlement.leavePeriod?.startDate,toDate:this.leaveEntitlement.leavePeriod?.endDate,entitlement:this.leaveEntitlement.entitlement};this.http.update(this.entitlementId,e).then((()=>{this.$toast.updateSuccess(),this.onCancel()}))},validateEntitlement(e){const t=parseFloat(e);return new Promise((e=>{isNaN(t)?e(!0):this.http.request({method:"GET",url:`/api/v2/leave/leave-entitlements/${this.entitlementId}/validation/entitlements`,params:{entitlement:t}}).then((t=>{const{data:o}=t.data;return!0===o.valid?e(!0):e(this.$t("leave.used_amount_exceeds_the_current_amount"))}))}))}}};const DE=(0,r.c)($E,[["render",kE]]);var EE=DE;function TE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("leave-type-dropdown"),c=(0,a.resolveComponent)("leave-period-dropdown"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-divider"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("leave-entitlement-table");return(0,a.openBlock)(),(0,a.createBlock)(C,{prefetch:!1},{default:(0,a.withCtx)((({filters:t,filterItems:o})=>[(0,a.createVNode)(y,{"filter-title":e.$t("leave.leave_entitlements")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.employee,"onUpdate:modelValue":e=>t.employee=e,rules:n.rules.employee,params:{includeEmployees:"currentAndPast"},required:""},null,8,["modelValue","onUpdate:modelValue","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:t.leaveType,"onUpdate:modelValue":e=>t.leaveType=e,"eligible-only":!1},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:t.leavePeriod,"onUpdate:modelValue":e=>t.leavePeriod=e,"show-empty-selector":!1},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(p),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"])])),_:1})}const IE={class:"orangehrm-background-container"},BE=(0,a.createElementVNode)("br",null,null,-1),LE={key:0,class:"orangehrm-paper-container"},UE={class:"orangehrm-header-container"},AE={class:"orangehrm-container"},PE={class:"orangehrm-bottom-container"};function qE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-button"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",IE,[(0,a.renderSlot)(e.$slots,"default",{filters:l.filters,filterItems:r.filterItems}),BE,l.showDatatable?((0,a.openBlock)(),(0,a.createElementBlock)("div",LE,[(0,a.createElementVNode)("div",UE,[(0,a.createElementVNode)("div",null,[e.$can.create("leave_entitlements")?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(d,{tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.totalEntitlements),1)])),_:1})]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",AE,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:r.headers,items:l.items?.data,selectable:e.$can.delete("leave_entitlements"),clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","loading"])]),(0,a.createElementVNode)("div",PE,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var FE={name:"LeaveEntitlementTable",components:{"delete-confirmation":At},props:{prefetch:{type:Boolean,default:!0},employee:{type:Object,required:!1,default:()=>null},leaveType:{type:Object,required:!1,default:()=>null},leavePeriod:{type:Object,required:!1,default:()=>null}},setup(e){const t=(0,a.ref)({leaveType:e.leaveType?e.leaveType:null,leavePeriod:e.leavePeriod?e.leavePeriod:null,employee:e.employee?{id:e.employee.empNumber,label:`${e.employee.firstName} ${e.employee.middleName} ${e.employee.lastName}`,isPastEmployee:e.employee.terminationId}:null}),o=(0,a.computed)((()=>({empNumber:t.value.employee?.id,leaveTypeId:t.value.leaveType?.id,fromDate:t.value.leavePeriod?.startDate,toDate:t.value.leavePeriod?.endDate}))),l=new P(window.appGlobal.baseUrl,"/api/v2/leave/leave-entitlements"),{$t:n}=Be(),{jsDateFormat:r}=R(),{locale:i}=Le(),d=e=>e.map((e=>({id:e.id,leaveType:e.leaveType.name+`${e.leaveType.deleted?n("general.deleted"):""}`,entitlementType:e.entitlementType.name,fromDate:pe(ue(e.fromDate),r,{locale:i}),toDate:pe(ue(e.toDate),r,{locale:i}),days:e.entitlement,isSelectable:e.deletable}))),{showPaginator:s,currentPage:c,total:m,pages:u,pageSize:p,response:h,isLoading:g,execQuery:v}=Dt(l,{query:o,normalizer:d,prefetch:e.employee||e.prefetch}),f=(0,a.computed)((()=>{const e=h.value.meta?.sum?h.value.meta.sum:0;return`Total ${parseFloat(e).toFixed(2)} Day(s)`})),y=(0,a.computed)((()=>void 0!==h.value.data));return{http:l,showPaginator:s,currentPage:c,isLoading:g,total:m,pages:u,pageSize:p,execQuery:v,items:h,filters:t,totalEntitlements:f,showDatatable:y}},data(){return{checkedItems:[]}},computed:{headers(){const e=[{name:"leaveType",slot:"title",title:this.$t("leave.leave_type"),style:{flex:1}},{name:"entitlementType",title:this.$t("leave.entitlement_type"),style:{flex:1}},{name:"fromDate",title:this.$t("leave.valid_from"),style:{flex:1}},{name:"toDate",title:this.$t("leave.valid_to"),style:{flex:1}},{name:"days",title:this.$t("leave.days"),style:{flex:1}}],t={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.$can.delete("leave_entitlements")&&(t.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),this.$can.update("leave_entitlements")&&(t.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),Object.keys(t.cellConfig).length>0?e.concat([t]):e}},methods:{onClickAdd(){U("/leave/addLeaveEntitlement")},onClickEdit(e){U("/leave/editLeaveEntitlement/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){if(!e.isSelectable)return this.$toast.error({title:this.$t("general.error"),message:this.$t("leave.entitlements_will_not_be_deleted_since_already_in_use")});this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()}}};const ME=(0,r.c)(FE,[["render",qE]]);var zE=ME,jE={components:{"leave-entitlement-table":zE,"employee-autocomplete":$a,"leave-type-dropdown":eD,"leave-period-dropdown":XD},data(){return{rules:{employee:[Ht,Wt(100),So]}}}};const RE=(0,r.c)(jE,[["render",TE]]);var OE=RE;function GE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("leave-type-dropdown"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("leave-period-dropdown"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("leave-entitlement-table");return(0,a.openBlock)(),(0,a.createBlock)(f,null,{default:(0,a.withCtx)((({filters:t,filterItems:o})=>[(0,a.createVNode)(v,{"filter-title":e.$t("leave.my_leave_entitlements")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.leaveType,"onUpdate:modelValue":e=>t.leaveType=e},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:t.leavePeriod,"onUpdate:modelValue":e=>t.leavePeriod=e,"show-empty-selector":!1},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"])])),_:1})}var QE={components:{"leave-entitlement-table":zE,"leave-type-dropdown":eD,"leave-period-dropdown":XD}};const HE=(0,r.c)(QE,[["render",GE]]);var WE=HE;const YE={class:"orangehrm-background-container"},JE={class:"orangehrm-card-container"};function XE(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",YE,[(0,a.createElementVNode)("div",JE,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.work_week")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.monday,"onUpdate:modelValue":t[0]||(t[0]=e=>n.workWeek.monday=e),type:"select",options:o.dayTypes,rules:n.rules.monday,label:e.$t("general.monday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.tuesday,"onUpdate:modelValue":t[1]||(t[1]=e=>n.workWeek.tuesday=e),type:"select",options:o.dayTypes,rules:n.rules.tuesday,label:e.$t("general.tuesday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.wednesday,"onUpdate:modelValue":t[2]||(t[2]=e=>n.workWeek.wednesday=e),type:"select",options:o.dayTypes,rules:n.rules.wednesday,label:e.$t("general.wednesday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.thursday,"onUpdate:modelValue":t[3]||(t[3]=e=>n.workWeek.thursday=e),type:"select",options:o.dayTypes,rules:n.rules.thursday,label:e.$t("general.thursday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.friday,"onUpdate:modelValue":t[4]||(t[4]=e=>n.workWeek.friday=e),type:"select",options:o.dayTypes,rules:n.rules.friday,label:e.$t("general.friday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.saturday,"onUpdate:modelValue":t[5]||(t[5]=e=>n.workWeek.saturday=e),type:"select",options:o.dayTypes,rules:n.rules.saturday,label:e.$t("general.saturday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.workWeek.sunday,"onUpdate:modelValue":t[6]||(t[6]=e=>n.workWeek.sunday=e),type:"select",options:o.dayTypes,rules:n.rules.sunday,label:e.$t("general.sunday"),required:""},null,8,["modelValue","options","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const KE={monday:null,tuesday:null,wednesday:null,thursday:null,friday:null,saturday:null,sunday:null};var ZE={props:{dayTypes:{type:Array,default:()=>[]}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/workweek");return{http:e}},data(){return{isLoading:!1,workWeek:{...KE},rules:{monday:[Ht],tuesday:[Ht],wednesday:[Ht],thursday:[Ht],friday:[Ht],saturday:[Ht],sunday:[Ht]}}},beforeMount(){this.isLoading=!0,this.http.request({method:"GET"}).then((e=>{const{data:t}=e.data;this.workWeek.monday=this.dayTypes.find((e=>e.id===t.monday)),this.workWeek.tuesday=this.dayTypes.find((e=>e.id===t.tuesday)),this.workWeek.wednesday=this.dayTypes.find((e=>e.id===t.wednesday)),this.workWeek.thursday=this.dayTypes.find((e=>e.id===t.thursday)),this.workWeek.friday=this.dayTypes.find((e=>e.id===t.friday)),this.workWeek.saturday=this.dayTypes.find((e=>e.id===t.saturday)),this.workWeek.sunday=this.dayTypes.find((e=>e.id===t.sunday))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){const e=Object.values(this.workWeek).find((e=>8!==e.id));if(void 0===e)return this.$toast.warn({title:this.$t("general.warning"),message:this.$t("leave.at_least_one_day_should_be_a_working_day")});this.isLoading=!0,this.http.request({method:"PUT",data:{monday:this.workWeek.monday.id,tuesday:this.workWeek.tuesday.id,wednesday:this.workWeek.wednesday.id,thursday:this.workWeek.thursday.id,friday:this.workWeek.friday.id,saturday:this.workWeek.saturday.id,sunday:this.workWeek.sunday.id}}).then((()=>{this.$toast.saveSuccess(),this.isLoading=!1}))}}};const eT=(0,r.c)(ZE,[["render",XE]]);var tT=eT;const oT={class:"orangehrm-background-container"},aT=(0,a.createElementVNode)("br",null,null,-1),lT={class:"orangehrm-paper-container"},nT={class:"orangehrm-header-container"},rT={class:"orangehrm-container"},iT={class:"orangehrm-bottom-container"};function dT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("date-input"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-table-filter"),v=(0,a.resolveComponent)("table-header"),f=(0,a.resolveComponent)("oxd-card-table"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",oT,[(0,a.createVNode)(g,{"filter-title":e.$t("leave.holidays")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{onSubmitValid:r.filterItems,onReset:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.fromDate=e),label:e.$t("general.from"),rules:n.rules.fromDate,years:n.yearArray},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.toDate=e),label:e.$t("general.to"),rules:n.rules.toDate,years:n.yearArray},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),aT,(0,a.createElementVNode)("div",lT,[(0,a.createElementVNode)("div",nT,[(0,a.createVNode)(u,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(v,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",rT,[(0,a.createVNode)(f,{selected:n.checkedItems,"onUpdate:selected":t[2]||(t[2]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",iT,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(C,{ref:"deleteDialog"},null,512)])}var sT={components:{"delete-confirmation":At},props:{leavePeriod:{type:Object,required:!0}},setup(e){const t=(0,a.ref)({fromDate:e.leavePeriod.startDate,toDate:e.leavePeriod.endDate}),o=(0,a.computed)((()=>({fromDate:t.value.fromDate,toDate:t.value.toDate}))),{jsDateFormat:l,userDateFormat:n}=R(),{locale:r}=Le(),i=e=>e.map((e=>({id:e.id,name:e.name,date:pe(ue(e.date),l,{locale:r}),recurring:e.recurring?"Yes":"No",length:e.lengthName}))),d=new P(window.appGlobal.baseUrl,"/api/v2/leave/holidays"),{showPaginator:s,currentPage:c,total:m,pages:u,pageSize:p,response:h,isLoading:g,execQuery:v}=Dt(d,{query:o,normalizer:i});return{http:d,showPaginator:s,currentPage:c,isLoading:g,total:m,pages:u,pageSize:p,execQuery:v,items:h,filters:t,userDateFormat:n}},data(){return{yearArray:[...Uy(201)],rules:{fromDate:[Ht,Yt(this.userDateFormat)],toDate:[Ht,Yt(this.userDateFormat),ro((()=>this.filters.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]},headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:2}},{name:"date",title:this.$t("general.date"),style:{flex:2}},{name:"length",title:this.$t("leave.full_day_half_day"),style:{flex:2}},{name:"recurring",title:this.$t("leave.repeats_annually"),style:{flex:2}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/leave/saveHolidays")},onClickEdit(e){U("/leave/saveHolidays/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()}}};const cT=(0,r.c)(sT,[["render",dT]]);var mT=cT;const uT={class:"orangehrm-background-container"},pT={class:"orangehrm-card-container"};function hT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",uT,[(0,a.createElementVNode)("div",pT,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.add_holiday")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.holiday.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.holiday.date,"onUpdate:modelValue":t[1]||(t[1]=e=>n.holiday.date=e),label:e.$t("general.date"),rules:n.rules.date,years:n.yearArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.length,"onUpdate:modelValue":t[2]||(t[2]=e=>n.holiday.length=e),type:"select",label:e.$t("leave.full_day_half_day"),options:o.holidayLengthList,rules:n.rules.length,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{classes:{wrapper:"--status-grouped-field"},label:e.$t("leave.repeats_annually")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.recurring,"onUpdate:modelValue":t[3]||(t[3]=e=>n.holiday.recurring=e),type:"radio","option-label":e.$t("general.yes"),value:!0},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.holiday.recurring,"onUpdate:modelValue":t[4]||(t[4]=e=>n.holiday.recurring=e),type:"radio","option-label":e.$t("general.no"),value:!1},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const gT={name:"",date:"",recurring:!1,length:{id:0,label:"Full Day"}};var vT={props:{holidayLengthList:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/holidays"),{userDateFormat:t}=R();return{http:e,userDateFormat:t}},data(){return{yearArray:[...Uy(201)],isLoading:!1,holiday:{...gT},rules:{name:[Ht,Wt(200)],date:[Ht,Yt(this.userDateFormat)],length:[Ht]},errors:[]}},created(){this.isLoading=!0;const e=new Date,t=e.getFullYear()-100+"-"+(e.getMonth()+1)+"-"+e.getDate(),o=e.getFullYear()+100+"-"+(e.getMonth()+1)+"-"+e.getDate();this.http.getAll({fromDate:t,toDate:o,limit:0}).then((e=>{const{data:t}=e.data;this.rules.date.push((e=>{const o=t.findIndex((t=>t.date==e));return-1===o||this.$t("general.already_exists")}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({name:this.holiday.name,date:this.holiday.date,recurring:this.holiday.recurring,length:this.holiday.length.id}).then((()=>this.$toast.saveSuccess())).then((()=>{this.holiday={...gT},this.onCancel()}))},onCancel(){U("/leave/viewHolidayList")}}};const fT=(0,r.c)(vT,[["render",hT],["__scopeId","data-v-e8574f8e"]]);var yT=fT;const CT={class:"orangehrm-background-container"},VT={class:"orangehrm-card-container"};function bT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-input-group"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",CT,[(0,a.createElementVNode)("div",VT,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.edit_holiday")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.holiday.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.holiday.date,"onUpdate:modelValue":t[1]||(t[1]=e=>n.holiday.date=e),label:e.$t("general.date"),rules:n.rules.date,years:n.yearArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.length,"onUpdate:modelValue":t[2]||(t[2]=e=>n.holiday.length=e),type:"select",label:e.$t("leave.full_day_half_day"),options:o.holidayLengthList,rules:n.rules.length,required:""},null,8,["modelValue","label","options","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{classes:{wrapper:"--status-grouped-field"},label:e.$t("leave.repeats_annually")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.holiday.recurring,"onUpdate:modelValue":t[3]||(t[3]=e=>n.holiday.recurring=e),type:"radio","option-label":e.$t("general.yes"),value:!0},null,8,["modelValue","option-label"]),(0,a.createVNode)(s,{modelValue:n.holiday.recurring,"onUpdate:modelValue":t[4]||(t[4]=e=>n.holiday.recurring=e),type:"radio","option-label":e.$t("general.no"),value:!1},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const xT={id:"",name:"",date:"",recurring:!1,length:0};var wT={props:{holidayId:{type:Number,required:!0},holidayLengthList:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/leave/holidays"),{userDateFormat:t}=R();return{http:e,userDateFormat:t}},data(){return{yearArray:[...Uy(201)],isLoading:!1,holiday:{...xT},rules:{name:[Ht,Wt(200)],date:[Ht,Yt(this.userDateFormat)],length:[Ht]}}},created(){this.isLoading=!0,this.http.get(this.holidayId).then((e=>{const{data:t}=e.data;this.holiday.id=t.id,this.holiday.name=t.name,this.holiday.date=t.date,this.holiday.recurring=t.recurring,""!==t.length&&null!==t.length&&(this.holiday.length=this.holidayLengthList.find((e=>e.id===t.length)));const o=new Date,a=o.getFullYear()-100+"-"+(o.getMonth()+1)+"-"+o.getDate(),l=o.getFullYear()+100+"-"+(o.getMonth()+1)+"-"+o.getDate();return this.http.getAll({fromDate:a,toDate:l,limit:0})})).then((e=>{const{data:t}=e.data;this.rules.date.push((e=>{const o=t.findIndex((t=>t.date===e));if(o>-1){const e=t[o].id;return e==this.holidayId||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.holidayId,{name:this.holiday.name,date:this.holiday.date,recurring:this.holiday.recurring,length:this.holiday.length.id}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},onCancel(){U("/leave/viewHolidayList")}}};const NT=(0,r.c)(wT,[["render",bT],["__scopeId","data-v-1af91fd8"]]);var _T=NT;function kT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("date-input"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("leave-type-dropdown"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("employee-autocomplete"),h=(0,a.resolveComponent)("oxd-text"),g=(0,a.resolveComponent)("oxd-switch-input"),v=(0,a.resolveComponent)("oxd-divider"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("oxd-table-filter"),x=(0,a.resolveComponent)("leave-list-table");return(0,a.openBlock)(),(0,a.createBlock)(x,{"leave-statuses":o.leaveStatuses},{default:(0,a.withCtx)((({filters:t,filterItems:l,rules:n,onReset:r})=>[(0,a.createVNode)(b,{"filter-title":e.$t("leave.leave_list")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(V,{onSubmitValid:l,onReset:r},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.fromDate,"onUpdate:modelValue":e=>t.fromDate=e,label:e.$t("general.from_date"),rules:n.fromDate},null,8,["modelValue","onUpdate:modelValue","label","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.toDate,"onUpdate:modelValue":e=>t.toDate=e,label:e.$t("general.to_date"),rules:n.toDate},null,8,["modelValue","onUpdate:modelValue","label","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:t.statuses,"onUpdate:modelValue":e=>t.statuses=e,value:e.$t("general.select"),type:"multiselect",label:e.$t("leave.show_leave_with_status"),options:o.leaveStatuses,rules:n.statuses,required:""},null,8,["modelValue","onUpdate:modelValue","value","label","options","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:t.leaveType,"onUpdate:modelValue":e=>t.leaveType=e,"eligible-only":!1},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:t.employee,"onUpdate:modelValue":e=>t.employee=e,rules:n.employee,params:{includeEmployees:t.includePastEmps?"currentAndPast":"onlyCurrent"}},null,8,["modelValue","onUpdate:modelValue","rules","params"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:t.subunit,"onUpdate:modelValue":e=>t.subunit=e,type:"select",label:e.$t("general.sub_unit"),options:o.subunits},null,8,["modelValue","onUpdate:modelValue","label","options"])])),_:2},1024),(0,a.createVNode)(d,{class:"orangehrm-leave-filter --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{class:"orangehrm-leave-filter-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.include_past_employees")),1)])),_:1}),(0,a.createVNode)(g,{modelValue:t.includePastEmps,"onUpdate:modelValue":e=>t.includePastEmps=e},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(v),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(y,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid","onReset"])])),_:2},1032,["filter-title"])])),_:1},8,["leave-statuses"])}const ST=e=>((0,a.pushScopeId)("data-v-a0f5562c"),e=e(),(0,a.popScopeId)(),e),$T={class:"orangehrm-background-container"},DT=ST((()=>(0,a.createElementVNode)("br",null,null,-1))),ET={class:"orangehrm-paper-container"},TT={class:"orangehrm-container"},IT={class:"orangehrm-bottom-container"};function BT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("leave-list-table-header"),d=(0,a.resolveComponent)("oxd-card-table"),s=(0,a.resolveComponent)("oxd-pagination"),c=(0,a.resolveComponent)("leave-comment-modal"),m=(0,a.resolveComponent)("leave-bulk-action-modal");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",$T,[(0,a.renderSlot)(e.$slots,"default",{filters:l.filters,rules:l.rules,filterItems:r.filterItems,onReset:r.onReset},void 0,!0),DT,(0,a.createElementVNode)("div",ET,[(0,a.createVNode)(i,{selected:l.checkedItems.length,total:l.total,loading:l.isLoading,"bulk-actions":l.leaveBulkActions,onOnActionClick:r.onLeaveActionBulk},null,8,["selected","total","loading","bulk-actions","onOnActionClick"]),(0,a.createElementVNode)("div",TT,[(0,a.createVNode)(d,{selected:l.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>l.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",IT,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])]),n.showCommentModal?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,id:n.commentModalState,onClose:r.onCommentModalClose},null,8,["id","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(m,{ref:"bulkActionModal",data:n.bulkActionModalState},null,8,["data"])],64)}const LT=(e,{length:t=50,ellipsis:o="..."}={})=>"string"===typeof e?e.length>t?e.substr(0,t)+o:e:"",UT={component:"oxd-button",props:{label:"Approve",displayType:"label-success",size:"medium",onClick:null}},AT={component:"oxd-button",props:{label:"Reject",displayType:"label-danger",size:"medium",onClick:null}},PT={component:"oxd-button",props:{label:"Cancel",displayType:"label-warn",size:"medium",onClick:null}},qT={component:"oxd-table-dropdown",props:{options:[],style:{"margin-left":"auto"},onClick:null}};function FT(e,{primaryActions:t={approve:UT,reject:AT,cancel:PT,more:qT}}={}){const o=(t,o)=>e.request({method:"PUT",url:`/api/v2/leave/leaves/${t}`,data:{action:o}}),a=(t,o)=>e.request({method:"PUT",url:`/api/v2/leave/employees/leave-requests/${t}`,data:{action:o}}),l=(t,o)=>e.request({method:"PUT",url:"/api/v2/leave/employees/leave-requests/bulk",data:{data:t.map((e=>({leaveRequestId:e,action:o})))}});return{leaveActions:t,processLeaveAction:o,processLeaveRequestAction:a,processLeaveRequestBulkAction:l}}const MT={class:"orangehrm-modal-header"},zT={key:0,class:"orangehrm-modal-content"};function jT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("leave-comment"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",MT,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.leave_request_comments")),1)])),_:1})]),(0,a.createVNode)(d),n.isLoading?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",zT,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.comments,(e=>((0,a.openBlock)(),(0,a.createBlock)(s,{key:e.id,data:e},null,8,["data"])))),128))])),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.comment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.comment=e),type:"textarea",placeholder:e.$t("general.comment_here"),rules:n.rules.comment},null,8,["modelValue","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const RT={class:"orangehrm-comment"},OT={class:"orangehrm-comment-profile"},GT={class:"orangehrm-comment-profile-image-wrapper"},QT=["src"],HT={class:"orangehrm-comment-body"},WT={class:"orangehrm-comment-profile-name"},YT={class:"orangehrm-comment-message"},JT={class:"orangehrm-comment-timestamp"};function XT(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",RT,[(0,a.createElementVNode)("div",OT,[(0,a.createElementVNode)("div",GT,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"orangehrm-comment-profile-image",src:l.imgSrc},null,8,QT)])]),(0,a.createElementVNode)("div",HT,[(0,a.createElementVNode)("div",WT,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.fullName),1)])),_:1})]),(0,a.createElementVNode)("div",YT,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.data.comment),1)])),_:1})]),(0,a.createElementVNode)("div",JT,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.commentDate)+" - "+(0,a.toDisplayString)(o.data.time),1)])),_:1})])])])}const KT=`${window.appGlobal.publicPath}/images/default-photo.png`;var ZT={name:"LeaveComment",props:{data:{type:Object,required:!0}},setup(e){const t=(0,a.computed)((()=>{const t=e.data.createdByEmployee;return t?`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${t.empNumber}`:KT})),o=(0,a.computed)((()=>{const t=e.data.createdByEmployee;return t&&`${t.firstName} ${t.lastName}`})),{jsDateFormat:l}=R(),{locale:n}=Le(),r=(0,a.computed)((()=>pe(ue(e.data?.date),l,{locale:n})));return{imgSrc:t,fullName:o,commentDate:r}}};const eI=(0,r.c)(ZT,[["render",XT],["__scopeId","data-v-a9484aaa"]]);var tI=eI,oI={name:"LeaveCommentModal",components:{"oxd-dialog":q.OxdDialog,"leave-comment":tI},props:{id:{type:Number,required:!1,default:null},leaveRequest:{type:Boolean,default:!0}},emits:["close"],setup(e){const t=e.leaveRequest?"leave-requests":"leaves",o=new P(window.appGlobal.baseUrl,`/api/v2/leave/${t}/${e.id}/leave-comments`);return{http:o}},data(){return{isLoading:!1,comment:null,rules:{comment:[Ht,Wt(255)]},comments:[]}},beforeMount(){this.isLoading=!0,this.http.getAll({limit:0}).then((e=>{const{data:t}=e.data;this.comments=t})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.create({comment:this.comment}).then((()=>{this.$toast.saveSuccess(),this.onCancel()}))},onCancel(){this.comment=null,this.$emit("close",!0)}}};const aI=(0,r.c)(oI,[["render",jT],["__scopeId","data-v-cfa4c0f2"]]);var lI=aI;const nI={class:"orangehrm-modal-header"},rI={class:"orangehrm-text-center-align"},iI={class:"orangehrm-modal-footer"};function dI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-dialog-popup","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",nI,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.leave_action",{action:r.action})),1)])),_:1})]),(0,a.createElementVNode)("div",rI,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.bulk_leave_action_confirm_message_one",{action:r.action,count:r.count}))+" "+(0,a.toDisplayString)(e.$t("leave.bulk_leave_action_confirm_message_two")),1)])),_:1})]),(0,a.createElementVNode)("div",iI,[(0,a.createVNode)(d,{label:e.$t("general.no_cancel"),"display-type":"text",class:"orangehrm-button-margin",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{label:e.$t("leave.yes_confirm"),"display-type":"secondary",onClick:r.onConfirm},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var sI={name:"LeaveBulkActionModal",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,default:()=>null}},data(){return{show:!1,reject:null,resolve:null}},computed:{count(){return this.data?.count?this.data.count:0},action(){return this.data?.action}},methods:{showDialog(){return new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")}}};const cI=(0,r.c)(sI,[["render",dI],["__scopeId","data-v-322b5550"]]);var mI=cI;const uI={class:"orangehrm-header-container"},pI={key:0,class:"actions"};function hI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",uI,[o.bulkActions&&o.selected>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",pI,[(0,a.createVNode)(i,{tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.n_records_selected",{count:o.selected})),1)])),_:1}),o.bulkActions.APPROVE?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,label:e.$t("general.approve"),"display-type":"label-success",onClick:t[0]||(t[0]=t=>e.$emit("onActionClick","APPROVE"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),o.bulkActions.REJECT?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,label:e.$t("general.reject"),"display-type":"label-danger",onClick:t[1]||(t[1]=t=>e.$emit("onActionClick","REJECT"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),o.bulkActions.CANCEL?((0,a.openBlock)(),(0,a.createBlock)(d,{key:2,label:e.$t("general.cancel"),"display-type":"label-warn",onClick:t[2]||(t[2]=t=>e.$emit("onActionClick","CANCEL"))},null,8,["label"])):(0,a.createCommentVNode)("",!0)])):((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.n_records_found",{count:o.total})),1)])),_:1}))])}var gI={name:"LeaveListTableHeader",props:{loading:{type:Boolean,required:!0},selected:{type:Number,required:!0},total:{type:Number,required:!0},bulkActions:{type:Object,required:!1,default:()=>({})}},emits:["onActionClick"]};const vI=(0,r.c)(gI,[["render",hI],["__scopeId","data-v-02dea898"]]);var fI=vI;const yI={employee:null,fromDate:null,toDate:null,statuses:[],subunit:null,includePastEmps:!1,leaveType:null};var CI={name:"LeaveListTable",components:{"leave-list-table-header":fI,"leave-comment-modal":lI,"leave-bulk-action-modal":mI},props:{myLeaveList:{type:Boolean,default:!1},leaveStatuses:{type:Array,default:()=>[]},employee:{type:Object,required:!1,default:()=>null},leaveType:{type:Object,required:!1,default:()=>null},fromDate:{type:String,required:!1,default:null},toDate:{type:String,required:!1,default:null},leaveStatus:{type:Object,required:!1,default:()=>null}},setup(e){const t=(0,a.ref)({...yI,...e.leaveType&&{leaveType:e.leaveType},...e.fromDate&&{fromDate:e.fromDate},...e.toDate&&{toDate:e.toDate},...e.leaveStatus&&{statuses:[e.leaveStatus]},...e.employee&&{employee:{id:e.employee.empNumber,label:`${e.employee.firstName} ${e.employee.middleName} ${e.employee.lastName}`,isPastEmployee:e.employee.terminationId}}}),o=(0,a.ref)([]),{$t:l}=Be(),{locale:n}=Le(),{jsDateFormat:r,userDateFormat:i}=R(),d={fromDate:[Ht,Yt(i)],toDate:[Ht,Yt(i),ro((()=>t.value.fromDate),l("general.to_date_should_be_after_from_date"),{allowSameDate:!0})],statuses:[Ht],employee:[Wt(100),So]},s=(0,a.computed)((()=>{const e=Array.isArray(t.value.statuses)?t.value.statuses:[];return{empNumber:t.value.employee?.id,fromDate:t.value.fromDate,toDate:t.value.toDate,subunitId:t.value.subunit?.id,includeEmployees:t.value.includePastEmps?"currentAndPast":"onlyCurrent",statuses:e.map((e=>e.id)),leaveTypeId:t.value.leaveType?.id}})),c=new P(window.appGlobal.baseUrl,"/api/v2/leave/"+(e.myLeaveList?"leave-requests":"employees/leave-requests")),m=e=>e.map((e=>{let t,o,a="";const i=e.dates.durationType?.type;if(e.dates.fromDate&&(t=pe(ue(e.dates.fromDate),r,{locale:n})),e.dates.toDate&&(t+=` to ${pe(ue(e.dates.toDate),r,{locale:n})}`),e.dates.startTime&&e.dates.endTime&&(t+=` (${e.dates.startTime} - ${e.dates.endTime})`),"half_day_morning"!==i&&"half_day_afternoon"!==i||(t+=` ${l("leave.half_day")}`),Array.isArray(e.leaveBreakdown)&&(o=e.leaveBreakdown.map((e=>`${e.name} (${parseFloat(e.lengthDays).toFixed(2)})`)).join(", ")),Array.isArray(e.leaveBalances))if(e.leaveBalances.length>1)a=e.leaveBalances.map((({period:e,balance:t})=>{const o=parseFloat(t.balance).toFixed(2),a=pe(ue(e.startDate),r,{locale:n}),l=pe(ue(e.endDate),r,{locale:n});return`${o} (${a} - ${l})`})).join(", ");else{const t=e.leaveBalances[0]?.balance.balance;a=t?parseFloat(t).toFixed(2):"0.00"}const d=`${e.employee?.firstName} ${e.employee?.middleName} ${e.employee?.lastName}`,s=e.leaveType?.name;return e.employee?.terminationId&&l("general.past_employee"),e.leaveType?.deleted&&l("general.deleted"),{id:e.id,empNumber:e.employee?.empNumber,date:t,employeeName:d,leaveType:s,leaveBalance:a,days:parseFloat(e.noOfDays).toFixed(2),status:o,comment:LT(e.lastComment?.comment),actions:e.allowedActions}})),{leaveActions:u,processLeaveRequestAction:p,processLeaveRequestBulkAction:h}=FT(c),{showPaginator:g,currentPage:v,total:f,pages:y,pageSize:C,response:V,isLoading:b,execQuery:x}=Dt(c,{query:s,normalizer:m}),w=(0,a.computed)((()=>{if(o.value.length>0&&V.value.data){const e=o.value.map((e=>V.value.data[e].actions));return{APPROVE:e.reduce(((e,t)=>e&&t.find((e=>"APPROVE"===e.action))),!0),REJECT:e.reduce(((e,t)=>e&&t.find((e=>"REJECT"===e.action))),!0),CANCEL:e.reduce(((e,t)=>e&&t.find((e=>"CANCEL"===e.action))),!0)}}return null}));return{http:c,showPaginator:g,currentPage:v,isLoading:b,total:f,pages:y,pageSize:C,execQuery:x,items:V,rules:d,filters:t,checkedItems:o,leaveActions:u,leaveBulkActions:w,processLeaveRequestAction:p,processLeaveRequestBulkAction:h}},data(){return{headers:[{name:"date",title:this.$t("general.date"),style:{flex:1}},{name:"employeeName",title:this.$t("general.employee_name"),style:{flex:1}},{name:"leaveType",title:this.$t("leave.leave_type"),style:{flex:1}},{name:"leaveBalance",title:this.$t("leave.leave_balance_days"),style:{flex:1}},{name:"days",title:this.$t("leave.number_of_days"),style:{flex:1}},{name:"status",title:this.$t("general.status"),style:{flex:1}},{name:"comment",title:this.$t("general.comments"),style:{flex:"5%"}},{name:"action",slot:"footer",title:this.$t("general.actions"),cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer,style:{flex:this.myLeaveList?"10%":"20%"}}],showCommentModal:!1,commentModalState:null,bulkActionModalState:null}},beforeMount(){this.isLoading=!0,0===this.filters.statuses.length&&(this.filters.statuses=this.myLeaveList?this.leaveStatuses:this.leaveStatuses.filter((e=>1===e.id))),this.http.request({method:"GET",url:"/api/v2/leave/leave-periods"}).then((e=>{const{data:t,meta:o}=e.data;o.leavePeriodDefined?(this.filters.fromDate=this.filters.fromDate??o?.currentLeavePeriod.startDate,this.filters.toDate=this.filters.toDate??o?.currentLeavePeriod.endDate):(this.filters.fromDate=this.filters.fromDate??t[0]?.startDate,this.filters.toDate=this.filters.toDate??t[0]?.endDate)})).finally((()=>{this.isLoading=!1,Object.assign(yI,this.filters)}))},methods:{cellRenderer(...[,,,e]){const t={},{approve:o,reject:a,cancel:l,more:n}=this.leaveActions,r=[{label:this.$t("general.add_comment"),context:"add_comment"},{label:this.$t("leave.view_leave_details"),context:"leave_details"},{label:this.$t("leave.view_pim_info"),context:"pim_details"}];return e.actions.map((n=>{"APPROVE"===n.action&&(o.props.label=this.$t("general.approve"),o.props.onClick=()=>this.onLeaveAction(e.id,"APPROVE"),t.approve=o),"REJECT"===n.action&&(a.props.label=this.$t("general.reject"),a.props.onClick=()=>this.onLeaveAction(e.id,"REJECT"),t.reject=a),"CANCEL"===n.action&&(this.myLeaveList?(l.props.label=this.$t("general.cancel"),l.props.onClick=()=>this.onLeaveAction(e.id,"CANCEL"),t.reject=l):r.push({label:this.$t("leave.cancel_leave"),context:"cancel_leave"}))})),n.props.options=r,n.props.onClick=t=>this.onLeaveDropdownAction(t,e),t.more=n,{props:{header:{cellConfig:t}}}},onLeaveDropdownAction(e,t){switch(e.context){case"add_comment":this.commentModalState=t.id,this.showCommentModal=!0;break;case"cancel_leave":this.onLeaveAction(t.id,"CANCEL");break;case"pim_details":U("/pim/viewPersonalDetails/empNumber/{id}",{id:t.empNumber});break;default:U("/leave/viewLeaveRequest/{id}",{id:t.id},this.myLeaveList&&{mode:"my-leave"})}},onLeaveAction(e,t){this.isLoading=!0,this.processLeaveRequestAction(e,t).then((()=>{this.$toast.updateSuccess()})).finally(this.resetDataTable)},async onLeaveActionBulk(e){this.isLoading=!0,this.bulkActionModalState={count:this.checkedItems.length,action:e};const t=this.checkedItems.map((e=>this.items.data[e].id)),o=await this.$refs.bulkActionModal.showDialog();"ok"===o?this.processLeaveRequestBulkAction(t,e).then((t=>{const{data:o}=t.data;Array.isArray(o)&&this.$toast.success({title:this.$t("general.success"),message:this.$t("leave.leave_requests_action",{action:e,count:o.length})})})).finally((()=>{this.bulkActionModalState=null,this.resetDataTable()})):this.isLoading=!1},onCommentModalClose(){this.commentModalState=null,this.showCommentModal=!1,this.resetDataTable()},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onReset(){this.filters={...yI},this.resetDataTable()}}};const VI=(0,r.c)(CI,[["render",BT],["__scopeId","data-v-a0f5562c"]]);var bI=VI,xI={components:{"leave-list-table":bI,"employee-autocomplete":$a,"oxd-switch-input":q.OxdSwitchInput,"leave-type-dropdown":eD},props:{subunits:{type:Array,default:()=>[]},leaveStatuses:{type:Array,default:()=>[]}}};const wI=(0,r.c)(xI,[["render",kT],["__scopeId","data-v-6108426a"]]);var NI=wI;const _I=e=>((0,a.pushScopeId)("data-v-4a6fef18"),e=e(),(0,a.popScopeId)(),e),kI={class:"orangehrm-background-container"},SI={class:"orangehrm-paper-container"},$I={class:"orangehrm-header-container"},DI=_I((()=>(0,a.createElementVNode)("br",null,null,-1))),EI={class:"orangehrm-horizontal-padding"},TI=_I((()=>(0,a.createElementVNode)("br",null,null,-1))),II={class:"orangehrm-container"},BI={class:"orangehrm-bottom-container"};function LI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("table-header"),p=(0,a.resolveComponent)("oxd-card-table"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-pagination"),v=(0,a.resolveComponent)("leave-comment-modal");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",kI,[(0,a.createElementVNode)("div",SI,[(0,a.createElementVNode)("div",$I,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.myLeaveRequest?e.$t("leave.my_leave_request_details"):e.$t("leave.leave_request_details")),1)])),_:1})]),(0,a.createVNode)(d,{class:"orangehrm-horizontal-margin orangehrm-clear-margins"}),DI,(0,a.createElementVNode)("div",EI,[(0,a.createVNode)(m,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.employee_name")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-request-details-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.employeeName),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("leave.requested_for")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-request-details-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.leavePeriod),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})]),TI,(0,a.createVNode)(u,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",II,[(0,a.createVNode)(p,{headers:n.headers,items:l.response&&l.response.data,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items","loading"])]),(0,a.createElementVNode)("div",BI,[(0,a.createElementVNode)("span",null,[(0,a.createVNode)(h,{"display-type":"ghost",label:e.$t("general.back"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(h,{class:"orangehrm-left-space","display-type":"secondary","icon-name":"chat-right-text-fill",label:e.$t("general.comments"),onClick:r.onClickComments},null,8,["label","onClick"])]),l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(g,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])]),n.showCommentModal?((0,a.openBlock)(),(0,a.createBlock)(v,{key:0,id:n.commentModalState,"leave-request":n.isLeaveRequest,onClose:r.onCommentModalClose},null,8,["id","leave-request","onClose"])):(0,a.createCommentVNode)("",!0)],64)}var UI={name:"LeaveViewRequest",components:{"leave-comment-modal":lI},props:{leaveRequestId:{type:String,required:!0},myLeaveRequest:{type:Boolean,default:!1}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/leave/leave-requests/${e.leaveRequestId}/leaves`),{leaveActions:o,processLeaveAction:a}=FT(t),{$t:l}=Be(),{jsDateFormat:n}=R(),{locale:r}=Le(),{$tEmpName:i}=Da(),d=e=>e.map((e=>{let t="";const o=e.dates.durationType?.type;e.dates.fromDate&&(t=pe(ue(e.dates.fromDate),n,{locale:r})),e.dates.startTime&&e.dates.endTime&&(t+=` (${e.dates.startTime} - ${e.dates.endTime})`),"half_day_morning"!==o&&"half_day_afternoon"!==o||(t+=` ${l("leave.half_day")}`);const a=e.leaveType?.name;return e.leaveType?.deleted&&l("general.deleted"),{id:e.id,date:t,leaveType:a,leaveBalance:e.leaveBalance?.balance.balance?parseFloat(e.leaveBalance.balance.balance).toFixed(2):void 0,duration:parseFloat(e.lengthHours).toFixed(2),status:e.leaveStatus?.name,comment:LT(e.lastComment?.comment),actions:e.allowedActions,canComment:!(5===e.leaveStatus?.id||4===e.leaveStatus?.id)}})),{showPaginator:s,currentPage:c,total:m,pages:u,pageSize:p,response:h,isLoading:g,execQuery:v}=Dt(t,{normalizer:d});return{http:t,showPaginator:s,currentPage:c,isLoading:g,total:m,pages:u,pageSize:p,execQuery:v,response:h,leaveActions:o,processLeaveAction:a,jsDateFormat:n,locale:r,translateEmpName:i}},data(){return{headers:[{name:"date",title:this.$t("general.date"),style:{flex:1}},{name:"leaveType",title:this.$t("leave.leave_type"),style:{flex:1}},{name:"leaveBalance",title:this.$t("leave.leave_balance_days"),style:{flex:1}},{name:"duration",title:this.$t("attendance.duration_hours"),style:{flex:1}},{name:"status",title:this.$t("general.status"),style:{flex:1}},{name:"comment",title:this.$t("general.comments"),style:{flex:"10%"}},{name:"action",slot:"footer",title:this.$t("general.actions"),cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer,style:{flex:"20%"}}],showCommentModal:!1,commentModalState:null,isLeaveRequest:!1}},computed:{employeeName(){const e=this.response?.meta?.employee;return e?this.translateEmpName(e,{includeMiddle:!0,excludePastEmpTag:!1}):""},leavePeriod(){const e=pe(ue(this.response?.meta?.startDate),this.jsDateFormat,{locale:this.locale}),t=pe(ue(this.response?.meta?.endDate),this.jsDateFormat,{locale:this.locale});return e===t?e:`${e} - ${t}`}},methods:{cellRenderer(...[,,,e]){const t={},o=[],{approve:a,reject:l,cancel:n,more:r}=this.leaveActions;return e.canComment&&o.push({label:"Add Comment",context:"add_comment"}),e.actions.map((r=>{"APPROVE"===r.action&&(a.props.label=this.$t("general.approve"),a.props.onClick=()=>this.onLeaveAction(e.id,"APPROVE"),t.approve=a),"REJECT"===r.action&&(l.props.label=this.$t("general.reject"),l.props.onClick=()=>this.onLeaveAction(e.id,"REJECT"),t.reject=l),"CANCEL"===r.action&&(this.myLeaveRequest?(n.props.label=this.$t("general.cancel"),n.props.onClick=()=>this.onLeaveAction(e.id,"CANCEL"),t.cancel=n):o.push({label:"Cancel Leave",context:"cancel_leave"}))})),o.length>0&&(r.props.options=o,r.props.onClick=t=>this.onLeaveDropdownAction(t,e),t.more=r),{props:{header:{cellConfig:t}}}},onClickComments(){this.commentModalState=this.leaveRequestId,this.isLeaveRequest=!0,this.showCommentModal=!0},onCommentModalClose(){this.commentModalState=null,this.showCommentModal=!1,this.resetDataTable()},onLeaveDropdownAction(e,t){"cancel_leave"===e.context?this.onLeaveAction(t.id,"CANCEL"):(this.commentModalState=t.id,this.isLeaveRequest=!1,this.showCommentModal=!0)},onLeaveAction(e,t){this.isLoading=!0,this.processLeaveAction(e,t).then((()=>{this.$toast.updateSuccess()})).finally(this.resetDataTable)},onClickBack(){this.myLeaveRequest?U("/leave/viewMyLeaveList"):U("/leave/viewLeaveList")},async resetDataTable(){await this.execQuery()}}};const AI=(0,r.c)(UI,[["render",LI],["__scopeId","data-v-4a6fef18"]]);var PI=AI;function qI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("date-input"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("leave-type-dropdown"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-divider"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("leave-list-table");return(0,a.openBlock)(),(0,a.createBlock)(C,{"leave-statuses":o.leaveStatuses,"my-leave-list":!0},{default:(0,a.withCtx)((({filters:t,filterItems:l,rules:n,onReset:r})=>[(0,a.createVNode)(y,{"filter-title":e.$t("leave.my_leave_list")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:l,onReset:r},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.fromDate,"onUpdate:modelValue":e=>t.fromDate=e,label:e.$t("general.from_date"),rules:n.fromDate},null,8,["modelValue","onUpdate:modelValue","label","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:t.toDate,"onUpdate:modelValue":e=>t.toDate=e,label:e.$t("general.to_date"),rules:n.toDate},null,8,["modelValue","onUpdate:modelValue","label","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:t.statuses,"onUpdate:modelValue":e=>t.statuses=e,value:"Select",type:"multiselect",label:e.$t("leave.show_leave_with_status"),options:o.leaveStatuses,rules:n.statuses,required:""},null,8,["modelValue","onUpdate:modelValue","label","options","rules"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:t.leaveType,"onUpdate:modelValue":e=>t.leaveType=e,"eligible-only":!0,"include-allocated":!0},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(p),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(g,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid","onReset"])])),_:2},1032,["filter-title"])])),_:1},8,["leave-statuses"])}var FI={components:{"leave-list-table":bI,"leave-type-dropdown":eD},props:{leaveStatuses:{type:Array,default:()=>[]}}};const MI=(0,r.c)(FI,[["render",qI]]);var zI=MI;const jI=e=>((0,a.pushScopeId)("data-v-7096bb32"),e=e(),(0,a.popScopeId)(),e),RI=jI((()=>(0,a.createElementVNode)("br",null,null,-1)));function OI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-input-group"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("leave-type-dropdown"),p=(0,a.resolveComponent)("leave-period-dropdown"),h=(0,a.resolveComponent)("jobtitle-dropdown"),g=(0,a.resolveComponent)("oxd-text"),v=(0,a.resolveComponent)("oxd-switch-input"),f=(0,a.resolveComponent)("employee-autocomplete"),y=(0,a.resolveComponent)("oxd-divider"),C=(0,a.resolveComponent)("required-text"),V=(0,a.resolveComponent)("oxd-button"),b=(0,a.resolveComponent)("oxd-form-actions"),x=(0,a.resolveComponent)("oxd-form"),w=(0,a.resolveComponent)("oxd-table-filter"),N=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(N,{module:"leave",name:l.filters.type,filters:l.serializedFilters,"column-count":6},{default:(0,a.withCtx)((({generateReport:n})=>[(0,a.createVNode)(w,{"filter-title":e.$t("leave.leave_entitlement_and_usage_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(x,{onSubmitValid:n},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{label:e.$t("leave.generate_for"),classes:{wrapper:"--grouped-field"}},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.type,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.type=e),type:"radio","option-label":e.$t("leave.leave_type"),value:"leave_type_leave_entitlements_and_usage"},null,8,["modelValue","option-label"]),(0,a.createVNode)(i,{modelValue:l.filters.type,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.type=e),type:"radio","option-label":e.$t("general.employee"),value:"employee_leave_entitlements_and_usage"},null,8,["modelValue","option-label"])])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),"leave_type_leave_entitlements_and_usage"===l.filters.type?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.leaveType,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.leaveType=e),"empty-text":e.$t("leave.no_leave_types_defined"),"eligible-only":!1,"show-empty-selector":!1,rules:l.rules.leaveType},null,8,["modelValue","empty-text","rules"])])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.leavePeriod,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.leavePeriod=e),rules:l.rules.leavePeriod,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.location,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.location=e),type:"select",label:e.$t("general.location"),options:o.locations},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.subunit,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.subunit=e),type:"select",label:e.$t("general.sub_unit"),options:o.subunits},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:l.filters.jobTitle,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.jobTitle=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-leave-filter --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{class:"orangehrm-leave-filter-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("leave.include_past_employees")),1)])),_:1}),(0,a.createVNode)(v,{modelValue:l.filters.includePastEmps,"onUpdate:modelValue":t[7]||(t[7]=e=>l.filters.includePastEmps=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1})):((0,a.openBlock)(),(0,a.createBlock)(m,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{modelValue:l.filters.employee,"onUpdate:modelValue":t[8]||(t[8]=e=>l.filters.employee=e),rules:l.rules.employee,params:{includeEmployees:"currentAndPast"},required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.leavePeriod,"onUpdate:modelValue":t[9]||(t[9]=e=>l.filters.leavePeriod=e),rules:l.rules.leavePeriod,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1})),(0,a.createVNode)(y),(0,a.createVNode)(b,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C),(0,a.createVNode)(V,{type:"submit","display-type":"secondary",class:"orangehrm-left-space",label:e.$t("general.generate")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),RI])),_:1},8,["name","filters"])}const GI={type:"leave_type_leave_entitlements_and_usage",employee:null,leavePeriod:null,leaveType:null,subunit:null,location:null,jobTitle:null,includePastEmps:!1};var QI={components:{"reports-table":uw,"oxd-switch-input":q.OxdSwitchInput,"jobtitle-dropdown":jp,"leave-type-dropdown":eD,"leave-period-dropdown":XD,"employee-autocomplete":$a},props:{locations:{type:Array,default:()=>[]},subunits:{type:Array,default:()=>[]},leavePeriod:{type:Object,required:!1,default:()=>null}},setup(e){const t=(0,a.ref)({...GI,...e.leavePeriod&&{leavePeriod:e.leavePeriod}}),o=(0,a.ref)({employee:[Ht,Wt(100),So],leavePeriod:[Ht],leaveType:[Ht]}),l=(0,a.computed)((()=>"leave_type_leave_entitlements_and_usage"===t.value.type?{name:t.value.type,fromDate:t.value.leavePeriod?.startDate,toDate:t.value.leavePeriod?.endDate,subunitId:t.value.subunit?.id,leaveTypeId:t.value.leaveType?.id,locationId:t.value.location?.id,jobTitleId:t.value.jobTitle?.id,includeEmployees:t.value.includePastEmps?"currentAndPast":"onlyCurrent"}:{name:t.value.type,empNumber:t.value.employee?.id,fromDate:t.value.leavePeriod?.startDate,toDate:t.value.leavePeriod?.endDate}));return{rules:o,filters:t,serializedFilters:l}}};const HI=(0,r.c)(QI,[["render",OI],["__scopeId","data-v-7096bb32"]]);var WI=HI;const YI=(0,a.createElementVNode)("br",null,null,-1);function JI(e,t,o,l,n,r){const i=(0,a.resolveComponent)("leave-period-dropdown"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(f,{module:"leave",name:"my_leave_entitlements_and_usage",prefetch:!0,filters:l.serializedFilters,"column-count":6},{default:(0,a.withCtx)((({generateReport:o})=>[(0,a.createVNode)(v,{"filter-title":e.$t("leave.my_leave_entitlement_and_usage_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:o},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.leavePeriod,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.leavePeriod=e),rules:l.rules.leavePeriod,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{type:"submit","display-type":"secondary",class:"orangehrm-left-space",label:e.$t("general.generate")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),YI])),_:1},8,["filters"])}var XI={components:{"reports-table":uw,"leave-period-dropdown":XD},props:{leavePeriod:{type:Object,required:!1,default:()=>({})}},setup(e){const t=(0,a.ref)({leavePeriod:e.leavePeriod?e.leavePeriod:null}),o=(0,a.ref)({leavePeriod:[Ht]}),l=(0,a.computed)((()=>({fromDate:t.value.leavePeriod?.startDate,toDate:t.value.leavePeriod?.endDate})));return{rules:o,filters:t,serializedFilters:l}}};const KI=(0,r.c)(XI,[["render",JI]]);var ZI=KI,eB={"leave-period":e$,"leave-apply":Q$,"leave-assign":uD,"leave-type-edit":AD,"leave-type-list":bD,"leave-type-save":OD,"leave-add-entitlement":wE,"leave-edit-entitlement":EE,"leave-view-entitlement":OE,"leave-view-my-entitlement":WE,"work-week":tT,"holiday-list":mT,"holiday-save":yT,"holiday-edit":_T,"leave-list":NI,"leave-view-request":PI,"my-leave-list":zI,"leave-entitlement-report":WI,"my-leave-entitlement-report":ZI};const tB={class:"orangehrm-background-container"},oB={class:"orangehrm-paper-container"},aB={class:"orangehrm-header-container"},lB={class:"orangehrm-container"},nB={class:"orangehrm-bottom-container"};function rB(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination"),u=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",tB,[(0,a.createElementVNode)("div",oB,[(0,a.createElementVNode)("div",aB,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.oauth_client_list")),1)])),_:1}),(0,a.createElementVNode)("div",null,[(0,a.createVNode)(d,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])]),(0,a.createVNode)(s,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",lB,[(0,a.createVNode)(c,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",nB,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(u,{ref:"deleteDialog"},null,512)])}var iB={components:{"delete-confirmation":At},props:{unselectableClientIds:{type:Array,default:()=>[]}},setup(e){const{$t:t}=Be(),o=o=>o.map((o=>{const a=e.unselectableClientIds.findIndex((e=>e===o.clientId));return{id:o.id,name:o.name,redirectUri:o.redirectUri,enabled:o.enabled?t("general.enabled"):t("general.disabled"),isSelectable:-1===a,isDisabled:-1!==a}})),a=new P(window.appGlobal.baseUrl,"/api/v2/admin/oauth-clients"),{showPaginator:l,currentPage:n,total:r,pages:i,pageSize:d,response:s,isLoading:c,execQuery:m}=Dt(a,{normalizer:o});return{http:a,showPaginator:l,currentPage:n,isLoading:c,total:r,pages:i,pageSize:d,execQuery:m,items:s}},data(){return{headers:[{name:"name",slot:"title",title:this.$t("general.name"),style:{flex:2}},{name:"redirectUri",title:this.$t("admin.redirect_uri"),style:{flex:3}},{name:"enabled",title:this.$t("general.status"),style:{flex:2}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[]}},methods:{onClickAdd(){U("/admin/saveOAuthClient")},onClickEdit(e){U("/admin/editOAuthClient",{},{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const dB=(0,r.c)(iB,[["render",rB]]);var sB=dB;const cB={class:"orangehrm-background-container"},mB={class:"orangehrm-card-container"};function uB(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-alert"),u=(0,a.resolveComponent)("oxd-switch-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",cB,[(0,a.createElementVNode)("div",mB,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.editMode?e.$t("admin.edit_oauth_client"):e.$t("admin.add_oauth_client")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.oAuthClient.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.oAuthClient.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.oAuthClient.redirectUri,"onUpdate:modelValue":t[1]||(t[1]=e=>n.oAuthClient.redirectUri=e),label:e.$t("admin.redirect_uri"),rules:n.rules.redirectUri,required:""},null,8,["modelValue","label","rules"])])),_:1}),r.editMode?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(c,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.oAuthClient.clientId,"onUpdate:modelValue":t[2]||(t[2]=e=>n.oAuthClient.clientId=e),label:e.$t("admin.client_id"),disabled:""},null,8,["modelValue","label"])])),_:1}),r.showClientSecret?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,class:"--offset-row-4"},{default:(0,a.withCtx)((()=>[n.isSecretPlain?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,type:"warn",show:!0,message:e.$t("admin.client_secret_warning_message")},null,8,["message"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{modelValue:n.oAuthClient.clientSecret,"onUpdate:modelValue":t[3]||(t[3]=e=>n.oAuthClient.clientSecret=e),label:e.$t("admin.client_secret"),disabled:""},null,8,["modelValue","label"])])),_:1})):(0,a.createCommentVNode)("",!0)],64)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,{class:"--offset-row-5"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-field-row"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.enable_client")),1)])),_:1}),(0,a.createVNode)(u,{modelValue:n.oAuthClient.enabled,"onUpdate:modelValue":t[4]||(t[4]=e=>n.oAuthClient.enabled=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),r.editMode?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(c,{key:1,class:"--offset-row-6"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-field-row"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("admin.confidential_client")),1)])),_:1}),(0,a.createVNode)(u,{modelValue:n.oAuthClient.confidential,"onUpdate:modelValue":t[5]||(t[5]=e=>n.oAuthClient.confidential=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}))])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const pB={id:null,name:"",redirectUri:"",enabled:!0,clientId:null,clientSecret:"********",confidential:!1};var hB={components:{"oxd-switch-input":q.OxdSwitchInput,"oxd-alert":q.OxdAlert},props:{id:{type:Number,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/admin/oauth-clients");return{http:e}},data(){return{isLoading:!1,isSecretPlain:!1,oAuthClient:{...pB},rules:{name:[Ht,Wt(80)],redirectUri:[Ht,Wt(2e3)]}}},computed:{editMode(){return null!==this.oAuthClient.clientId},showClientSecret(){return!0===this.oAuthClient.confidential}},created(){this.isLoading=!0,this.getClient().then((e=>{const{data:t}=e.data;this.rules.name.push((e=>{const o=t.findIndex((t=>t.name===e));if(o>-1){const{id:e}=t[o];return e===this.id||this.$t("general.already_exists")}return!0}))})).finally((()=>{this.isLoading=!1}))},methods:{getClient(){return null!==this.id?this.http.get(this.id).then((e=>{const{data:t}=e.data;return this.setDataFromResponse(t),this.http.getAll({limit:0})})):this.http.getAll({limit:0})},onCancel(){U("/admin/registerOAuthClient")},onSave(){this.isLoading=!0,(this.editMode?this.update():this.create()).finally((()=>{this.isLoading=!1}))},create(){return this.http.create({name:this.oAuthClient.name,redirectUri:this.oAuthClient.redirectUri,enabled:this.oAuthClient.enabled,confidential:this.oAuthClient.confidential}).then((e=>{const{data:t,meta:o}=e.data;return this.setDataFromResponse(t),this.oAuthClient.clientSecret=o.clientSecret,this.isSecretPlain=!0,this.$toast.saveSuccess()}))},update(){return this.http.update(this.oAuthClient.id,{name:this.oAuthClient.name,redirectUri:this.oAuthClient.redirectUri,enabled:this.oAuthClient.enabled,confidential:this.oAuthClient.confidential}).then((e=>{const{data:t,meta:o}=e.data;return this.setDataFromResponse(t),!0===t.confidential&&null!==o.clientSecret&&(this.oAuthClient.clientSecret=o.clientSecret,this.isSecretPlain=!0),this.$toast.updateSuccess()}))},setDataFromResponse(e){this.oAuthClient.id=e.id,this.oAuthClient.name=e.name,this.oAuthClient.redirectUri=e.redirectUri,this.oAuthClient.enabled=e.enabled,this.oAuthClient.clientId=e.clientId,this.oAuthClient.confidential=e.confidential}}};const gB=(0,r.c)(hB,[["render",uB],["__scopeId","data-v-1da226e8"]]);var vB=gB;const fB=e=>((0,a.pushScopeId)("data-v-3dc24a78"),e=e(),(0,a.popScopeId)(),e),yB={class:"orangehrm-oauth-container"},CB={class:"orangehrm-card-container"},VB={class:"orangehrm-oauth-list"},bB=fB((()=>(0,a.createElementVNode)("br",null,null,-1))),xB=["value"],wB=["name","value"],NB={class:"orangehrm-oauth-button-container"};function _B(e,t,o,l,n,r){const i=(0,a.resolveComponent)("login-branding"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("oxd-form"),u=(0,a.resolveComponent)("oxd-alert");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yB,[(0,a.createElementVNode)("div",CB,[(0,a.createVNode)(i,{"img-src":o.loginBannerSrc,class:"orangehrm-oauth-branding"},null,8,["img-src"]),(0,a.createVNode)(d),null===o.errorType?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.client_name_would_like_to",{clientName:o.clientName}))+": ",1)])),_:1}),(0,a.createElementVNode)("ul",VB,[(0,a.createElementVNode)("li",null,[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.access_and_manage_your_data")),1)])),_:1})]),(0,a.createElementVNode)("li",null,[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.perform_actions_on_your_behalf")),1)])),_:1})])]),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.do_you_want_to_allow_access")),1)])),_:1}),bB,(0,a.createVNode)(m,{ref:"authorizeForm",method:"GET",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("input",{name:"authorized",value:n.authorized,type:"hidden"},null,8,xB),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.params,((e,t)=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:t},[(0,a.createElementVNode)("input",{name:t,value:e,type:"hidden"},null,8,wB)])))),128)),(0,a.createElementVNode)("div",NB,[(0,a.createVNode)(c,{"display-type":"ghost",size:"large",class:"orangehrm-oauth-button",label:e.$t("auth.deny"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(c,{"display-type":"secondary",class:"orangehrm-oauth-button",size:"large",label:e.$t("auth.allow_access"),type:"submit"},null,8,["label"])])])),_:1},8,["action","onSubmitValid"])],64)):"orangehrm_mobile_app"===o.params["client_id"]?((0,a.openBlock)(),(0,a.createBlock)(u,{key:1,show:!0,type:"error",message:e.$t("auth.mobile_client_disabled_error")},null,8,["message"])):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:2},[(0,a.createVNode)(u,{show:!0,type:"error",message:e.$t("auth.this_request_is_invalid")},null,8,["message"]),(0,a.createVNode)(s,{class:"orangehrm-oauth-error"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.error"))+": "+(0,a.toDisplayString)(o.errorType),1)])),_:1})],64))]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}const kB={class:"orangehrm-login-branding"},SB=["src"];function $B(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",kB,[(0,a.createElementVNode)("img",{src:o.imgSrc,alt:"company-branding"},null,8,SB)])}var DB={name:"LoginBranding",props:{imgSrc:{type:String,required:!0}}};const EB=(0,r.c)(DB,[["render",$B],["__scopeId","data-v-17f5fb62"]]);var TB=EB,IB={name:"OAuthAuthorize",components:{"login-branding":TB,"oxd-alert":q.OxdAlert},props:{params:{type:Object,required:!0},clientName:{type:String,default:null},errorType:{type:String,default:null},loginBannerSrc:{type:String,required:!0}},data(){return{authorized:!0}},computed:{submitUrl(){return L("/oauth2/authorize/consent")}},methods:{onCancel(){this.authorized=!1,this.onSubmit()},onSubmit(){this.$nextTick((()=>{this.$refs.authorizeForm.$el.submit()}))}}};const BB=(0,r.c)(IB,[["render",_B],["__scopeId","data-v-3dc24a78"]]);var LB=BB,UB={"oauth-client-list":sB,"oauth-client-save":vB,"oauth-authorize":LB};const AB={class:"orangehrm-background-container"},PB={class:"orangehrm-card-container"},qB={class:"orangehrm-paper-container"};function FB(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("record-attendance");return(0,a.openBlock)(),(0,a.createElementBlock)("div",AB,[(0,a.createElementVNode)("div",PB,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.punch_in")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",qB,[(0,a.createVNode)(s,(0,a.normalizeProps)((0,a.guardReactiveProps)(e.$attrs)),null,16)])])])}function MB(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-input-group"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("date-input"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("timezone-dropdown"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createBlock)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[n.attendanceRecord.previousRecord?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(s,{class:(0,a.normalizeClass)(n.attendanceRecord.previousRecord.note?"":"--span-column-2")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{label:e.$t("attendance.punched_in_time")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.previousAttendanceRecordDate)+" - "+(0,a.toDisplayString)(r.previousAttendanceRecordTime)+" ",1),(0,a.createVNode)(i,{tag:"span",class:"orangehrm-attendance-punchedIn-timezone"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(`(GMT ${n.previousRecordTimezone})`),1)])),_:1})])),_:1})])),_:1},8,["label"])])),_:1},8,["class"]),n.attendanceRecord.previousRecord.note?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{label:e.$t("attendance.punched_in_note")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.attendanceRecord.previousRecord.note),1)])),_:1})])),_:1},8,["label"])])),_:1})):(0,a.createCommentVNode)("",!0)],64)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(),(0,a.createBlock)(c,{key:n.attendanceRecord.time,modelValue:n.attendanceRecord.date,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attendanceRecord.date=e),label:e.$t("general.date"),rules:n.rules.date,disabled:!o.isEditable,required:""},null,8,["modelValue","label","rules","disabled"]))])),_:1}),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendanceRecord.time,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attendanceRecord.time=e),label:e.$t("general.time"),disabled:!o.isEditable,rules:n.rules.time,type:"time",placeholder:e.$t("attendance.hh_mm"),required:""},null,8,["modelValue","label","disabled","rules","placeholder"])])),_:1})])),_:1})])),_:1}),o.isTimezoneEditable?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,cols:2},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.attendanceRecord.timezone,"onUpdate:modelValue":t[2]||(t[2]=e=>n.attendanceRecord.timezone=e),required:""},null,8,["modelValue"])])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendanceRecord.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.attendanceRecord.note=e),rules:n.rules.note,label:e.$t("general.note"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{label:o.attendanceRecordId?e.$t("attendance.out"):e.$t("attendance.in")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])}function zB(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",options:l.options,label:e.$t("attendance.timezone"),"show-empty-selector":!1},null,8,["options","label"])}var jB={name:"TimezoneDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/attendance/timezones");return(0,a.onBeforeMount)((()=>{t.getAll().then((({data:t})=>{e.value=t.data.map((e=>({id:e.name,label:`(GMT${e.label}) ${e.name}`,_offset:parseFloat(e.offset)})))}))})),{options:e}}};const RB=(0,r.c)(jB,[["render",zB]]);var OB=RB;const GB={date:null,time:null,note:null,timezone:null,previousRecord:null};var QB={name:"RecordAttendance",components:{"timezone-dropdown":OB},props:{isEditable:{type:Boolean,default:!1},isTimezoneEditable:{type:Boolean,default:!1},attendanceRecordId:{type:Number,default:null},employeeId:{type:Number,default:null},date:{type:String,default:null}},setup(e){const t=e.employeeId?`/api/v2/attendance/employees/${e.employeeId}/records`:"/api/v2/attendance/records",o=new P(window.appGlobal.baseUrl,t),{jsDateFormat:a,userDateFormat:l,timeFormat:n,jsTimeFormat:r}=R(),{locale:i}=Le();return{http:o,locale:i,timeFormat:n,jsTimeFormat:r,jsDateFormat:a,userDateFormat:l}},data(){return{isLoading:!1,attendanceRecord:{...GB},rules:{date:[Ht,Yt(this.userDateFormat),(0,q.promiseDebounce)(this.validateDate,500)],time:[Ht,(0,q.promiseDebounce)(this.validateDate,500)],note:[Wt(250)]},previousRecordTimezone:null}},computed:{previousAttendanceRecordDate(){return this.attendanceRecord?.previousRecord?pe(ue(this.attendanceRecord.previousRecord.userDate),this.jsDateFormat,{locale:this.locale}):null},previousAttendanceRecordTime(){return this.attendanceRecord?.previousRecord?ye(fe(this.attendanceRecord.previousRecord.userTime,this.timeFormat),this.jsTimeFormat):null}},beforeMount(){if(this.isLoading=!0,this.isTimezoneEditable){const e=ke();this.attendanceRecord.timezone={id:e.name,label:e.label,_name:e.name,_offset:e.offset}}this.setCurrentDateTime().then((()=>{!this.date&&!this.isEditable&&Ne(this.setCurrentDateTime,6e4);let e="/api/v2/attendance/records/latest";return this.employeeId&&(e=`/api/v2/attendance/records/latest?empNumber=${this.employeeId}`),this.attendanceRecordId?this.http.request({method:"GET",url:e}):null})).then((e=>{if(e){const{data:t}=e.data;this.attendanceRecord.previousRecord=t.punchIn}})).then((()=>{this.previousRecordTimezone=_e(this.attendanceRecord.previousRecord?.offset)})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0;const e=ke();this.http.request({method:this.attendanceRecordId?"PUT":"POST",data:{date:this.attendanceRecord.date,time:this.attendanceRecord.time,note:this.attendanceRecord.note,timezoneOffset:this.attendanceRecord.timezone?._offset??e.offset,timezoneName:this.attendanceRecord.timezone?.id??e.name}}).then((()=>this.$toast.saveSuccess())).then((()=>{this.employeeId?U("/attendance/viewAttendanceRecord",void 0,{employeeId:this.employeeId,date:this.date}):A()}))},setCurrentDateTime(){return new Promise(((e,t)=>{this.http.request({method:"GET",url:"/api/v2/attendance/current-datetime"}).then((t=>{const{utcDate:o,utcTime:a}=t.data.data,l=ue(`${o} ${a} +00:00`,"yyyy-MM-dd HH:mm xxx");this.attendanceRecord.date=this.date??pe(l,"yyyy-MM-dd"),this.attendanceRecord.time=pe(l,"HH:mm"),e()})).catch((e=>t(e)))}))},validateDate(){if(!this.attendanceRecord.date||!this.attendanceRecord.time)return!0;if(null===ue(this.attendanceRecord.date))return!0;const e=(new Date).getTimezoneOffset()/60*-1;return new Promise((t=>{this.http.request({method:"GET",url:`/api/v2/attendance/${this.attendanceRecordId?"punch-out":"punch-in"}/overlaps`,params:{date:this.attendanceRecord.date,time:this.attendanceRecord.time,timezoneOffset:this.attendanceRecord.timezone?._offset??e,empNumber:this.employeeId},validateStatus:e=>e>=200&&e<300||400==e}).then((e=>{const{data:o,error:a}=e.data;return a?t(a.message):!0===o.valid?t(!0):t(this.$t("attendance.overlapping_records_found"))}))}))}}};const HB=(0,r.c)(QB,[["render",MB],["__scopeId","data-v-597e1f38"]]);var WB=HB,YB={components:{"record-attendance":WB},inheritAttrs:!1};const JB=(0,r.c)(YB,[["render",FB]]);var XB=JB;const KB={class:"orangehrm-background-container"},ZB={class:"orangehrm-card-container"},eL={class:"orangehrm-paper-container"};function tL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("record-attendance");return(0,a.openBlock)(),(0,a.createElementBlock)("div",KB,[(0,a.createElementVNode)("div",ZB,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.punch_out")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",eL,[(0,a.createVNode)(s,(0,a.normalizeProps)((0,a.guardReactiveProps)(e.$attrs)),null,16)])])])}var oL={components:{"record-attendance":WB},inheritAttrs:!1};const aL=(0,r.c)(oL,[["render",tL]]);var lL=aL;const nL={class:"orangehrm-background-container"},rL={class:"orangehrm-card-container"},iL={class:"orangehrm-header"},dL={class:"orangehrm-paper-container"};function sL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("date-input"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("timezone-dropdown"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",nL,[(0,a.createElementVNode)("div",rL,[(0,a.createElementVNode)("div",iL,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.edit_attendance_records")),1)])),_:1}),r.totalDuration?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,tag:"span",class:"orangehrm-header-total"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(r.totalDuration),1)])),_:1})):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(d),(0,a.createElementVNode)("div",dL,[(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid no-gap"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.punch_in")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.attendance.punchIn.userDate,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attendance.punchIn.userDate=e),label:e.$t("general.date"),rules:n.rules.punchIn.userDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendance.punchIn.userTime,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attendance.punchIn.userTime=e),label:e.$t("general.time"),rules:n.rules.punchIn.userTime,type:"time",placeholder:e.$t("attendance.hh_mm"),required:""},null,8,["modelValue","label","rules","placeholder"])])),_:1}),o.isTimezoneEditable?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"--offset-row-3 --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.attendance.punchIn.timezone,"onUpdate:modelValue":t[2]||(t[2]=e=>n.attendance.punchIn.timezone=e),required:""},null,8,["modelValue"])])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendance.punchIn.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.attendance.punchIn.note=e),rules:n.rules.punchIn.note,label:e.$t("general.note"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),n.attendance.punchOut?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-punch-out-record"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.punch_out")),1)])),_:1})])),_:1}),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.attendance.punchOut.userDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.attendance.punchOut.userDate=e),label:e.$t("general.date"),rules:n.rules.punchOut.userDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(s,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendance.punchOut.userTime,"onUpdate:modelValue":t[5]||(t[5]=e=>n.attendance.punchOut.userTime=e),label:e.$t("general.time"),rules:n.rules.punchOut.userTime,type:"time",placeholder:e.$t("attendance.hh_mm"),required:""},null,8,["modelValue","label","rules","placeholder"])])),_:1}),o.isTimezoneEditable?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"--offset-row-3 --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.attendance.punchOut.timezone,"onUpdate:modelValue":t[6]||(t[6]=e=>n.attendance.punchOut.timezone=e),required:""},null,8,["modelValue"])])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.attendance.punchOut.note,"onUpdate:modelValue":t[7]||(t[7]=e=>n.attendance.punchOut.note=e),rules:n.rules.punchOut.note,label:e.$t("general.note"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])])}const cL={userDate:null,userTime:null,utcDate:null,utcTime:null,note:null,timezone:null,timezoneOffset:null};var mL={components:{"timezone-dropdown":OB},props:{attendanceId:{type:Number,required:!0},isEmployeeEdit:{type:Boolean,default:!1},isTimezoneEditable:{type:Boolean,default:!1}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/attendance/records"),{userDateFormat:t}=R();return{http:e,userDateFormat:t}},data(){return{isLoading:!1,attendance:{employee:null,punchIn:{...cL},punchOut:{...cL}},rules:{punchIn:{userDate:[Ht,Yt(this.userDateFormat),(0,q.promiseDebounce)((()=>this.validateRecord("punch-in-overlaps")),500)],userTime:[Ht,(0,q.promiseDebounce)((()=>this.validateRecord("punch-in-overlaps")),500)],note:[Wt(250)]},punchOut:{userDate:[Ht,Yt(this.userDateFormat),(0,q.promiseDebounce)((()=>this.validateRecord("punch-out-overlaps")),500)],userTime:[Ht,(0,q.promiseDebounce)((()=>this.validateRecord("punch-out-overlaps")),500)],note:[Wt(250)]}}}},computed:{totalDuration(){if(!this.attendance.punchOut?.userDate)return null;if(null===ue(this.attendance.punchIn.userDate)||null===ue(this.attendance.punchOut.userDate))return null;const e=`${this.attendance.punchIn.userDate} ${this.attendance.punchIn.userTime}`,t=this.attendance.punchIn.timezone?._offset??parseFloat(this.attendance.punchIn.timezoneOffset),o=(t>0?" +":" -")+xe(3600*Math.abs(t)),a=`${this.attendance.punchOut.userDate} ${this.attendance.punchOut.userTime}`,l=this.attendance.punchOut.timezone?._offset??parseFloat(this.attendance.punchOut.timezoneOffset),n=(l>0?" +":" -")+xe(3600*Math.abs(l));return parseFloat(be(e+o,a+n,"yyyy-MM-dd HH:mm xxx")/3600).toFixed(2)}},beforeMount(){this.isLoading=!0,this.http.get(this.attendanceId).then((e=>{const{data:t}=e.data;this.attendance.employee=t.employee,this.attendance.punchIn={...t.punchIn,timezone:{id:t.punchIn.timezone.name,label:t.punchIn.timezone.label,_offset:t.punchIn.timezoneOffset}},this.attendance.punchOut=t.punchOut?.userDate?{...t.punchOut,timezone:{id:t.punchOut.timezone.name,label:t.punchOut.timezone.label,_offset:t.punchOut.timezoneOffset}}:null})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){this.isEmployeeEdit?U("/attendance/viewAttendanceRecord",void 0,{employeeId:this.attendance.employee?.empNumber,date:this.attendance.punchIn?.userDate}):U("/attendance/viewMyAttendanceRecord",void 0,{date:this.attendance.punchIn?.userDate})},onSave(){this.isLoading=!0;const e={punchInDate:this.attendance.punchIn.userDate,punchInTime:this.attendance.punchIn.userTime,punchInNote:this.attendance.punchIn.note,...this.isTimezoneEditable&&{punchInOffset:this.attendance.punchIn.timezone?this.attendance.punchIn.timezone._offset:this.attendance.punchIn.timezoneOffset,punchInTimezoneName:this.attendance.punchIn.timezone?this.attendance.punchIn.timezone.id:this.attendance.punchIn.timezone.name}};this.attendance.punchOut&&(e.punchOutDate=this.attendance.punchOut.userDate,e.punchOutTime=this.attendance.punchOut.userTime,e.punchOutNote=this.attendance.punchOut.note,this.isTimezoneEditable&&(e.punchOutOffset=this.attendance.punchOut.timezone?this.attendance.punchOut.timezone._offset:this.attendance.punchOut.timezoneOffset,e.punchOutTimezoneName=this.attendance.punchOut.timezone?this.attendance.punchOut.timezone.id:this.attendance.punchOut.timezone.name)),this.http.update(this.attendanceId,e).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))},validateRecord(e){return null===ue(this.attendance.punchIn.userDate)||(!(!this.attendance.punchOut||null!==ue(this.attendance.punchOut.userDate))||new Promise((t=>{this.http.request({method:"GET",url:`/api/v2/attendance/records/${e}`,params:{recordId:this.attendanceId,punchInTimezoneOffset:this.attendance.punchIn.timezone?this.attendance.punchIn.timezone._offset:this.attendance.punchIn.timezoneOffset,punchInDate:this.attendance.punchIn.userDate,punchInTime:this.attendance.punchIn.userTime,punchOutTimezoneOffset:this.attendance.punchOut?.timezone?this.attendance.punchOut.timezone._offset:this.attendance.punchOut?.timezoneOffset,punchOutDate:this.attendance.punchOut?.userDate,punchOutTime:this.attendance.punchOut?.userTime},validateStatus:e=>e>=200&&e<300||400==e}).then((e=>{const{data:o,error:a}=e.data;return a?t(a.message):!0===o.valid?t(!0):t(this.$t("attendance.overlapping_records_found"))}))})))}}};const uL=(0,r.c)(mL,[["render",sL],["__scopeId","data-v-0d2237c8"]]);var pL=uL;const hL=e=>((0,a.pushScopeId)("data-v-0dcb785a"),e=e(),(0,a.popScopeId)(),e),gL=hL((()=>(0,a.createElementVNode)("br",null,null,-1))),vL={class:"orangehrm-paper-container"},fL={class:"orangehrm-header-container"},yL={class:"orangehrm-container"},CL={class:"orangehrm-bottom-container"};function VL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("date-input"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("oxd-text"),y=(0,a.resolveComponent)("table-header"),C=(0,a.resolveComponent)("oxd-card-table"),V=(0,a.resolveComponent)("oxd-pagination"),b=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(v,{"filter-title":e.$t("attendance.my_attendance_records")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.date,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.date=e),rules:l.rules.date,label:e.$t("general.date"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{"display-type":"secondary",label:e.$t("general.view"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),gL,(0,a.createElementVNode)("div",vL,[(0,a.createElementVNode)("div",fL,[(0,a.createVNode)(f,{class:"orangehrm-header-total",tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(l.totalDuration),1)])),_:1})]),(0,a.createVNode)(y,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",yL,[(0,a.createVNode)(C,{selected:n.checkedItems,"onUpdate:selected":t[1]||(t[1]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:o.isEditable,clickable:!1,loading:l.isLoading,class:"orangehrm-my-attendance","row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","loading"])]),(0,a.createElementVNode)("div",CL,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0,current:l.currentPage,"onUpdate:current":t[2]||(t[2]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(b,{ref:"deleteDialog"},null,512)])],64)}const bL={class:"oxd-table-card-cell"},xL={class:"data"};function wL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.withDirectives)(((0,a.openBlock)(),(0,a.createElementBlock)("div",bL,[(0,a.withDirectives)((0,a.createElementVNode)("div",{class:"header"},(0,a.toDisplayString)(o.header.title),513),[[a.vShow,r.showHeader]]),(0,a.createElementVNode)("div",xL,[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.date)+" "+(0,a.toDisplayString)(o.time)+" ",1),(0,a.createVNode)(i,{tag:"span",class:"timezone"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" GMT "+(0,a.toDisplayString)(o.offset?o.offset:"00:00"),1)])),_:1})])),_:1})])],512)),[[a.vShow,o.date]])}var NL={name:"RecordCell",props:{header:{type:Object,required:!0},date:{type:String,default:null},time:{type:String,default:null},offset:{type:String,default:null}},setup(){const{screenState:e}=(0,q.useInjectTableProps)();return{screenState:e}},computed:{showHeader(){return!("lg"===this.screenState.screenType||"xl"===this.screenState.screenType)}}};const _L=(0,r.c)(NL,[["render",wL],["__scopeId","data-v-32150e8a"]]);var kL=_L,SL={components:{"delete-confirmation":At},props:{date:{type:String,default:null},isEditable:{type:Boolean,default:!1}},setup(e){const{locale:t}=Le(),{jsDateFormat:o,userDateFormat:l,timeFormat:n,jsTimeFormat:r}=R(),i={date:[Ht,Yt(l)]},d=(0,a.ref)({date:e.date?e.date:pe(me(),"yyyy-MM-dd")}),s=(0,a.computed)((()=>({date:d.value.date}))),c=new P(window.appGlobal.baseUrl,"/api/v2/attendance/records"),m=e=>e.map((e=>{const{punchIn:a,punchOut:l}=e,i=pe(ue(a?.userDate),o,{locale:t}),d=ye(fe(a?.userTime,n),r),s=pe(ue(l?.userDate),o,{locale:t}),c=ye(fe(l?.userTime,n),r);return{id:e.id,punchIn:{...a,userTime:d,userDate:i},punchOut:{...l,userTime:c,userDate:s},punchInNote:a.note,punchOutNote:l.note,duration:e.duration}})),{total:u,pages:p,pageSize:h,response:g,isLoading:v,execQuery:f,currentPage:y,showPaginator:C}=Dt(c,{query:s,normalizer:m}),V=(0,a.computed)((()=>{const e=g.value?.meta;return e?e.sum.label:"0.00"}));return{http:c,rules:i,total:u,pages:p,filters:d,pageSize:h,isLoading:v,execQuery:f,currentPage:y,showPaginator:C,items:g,totalDuration:V}},data(){return{headers:[{name:"punchIn",slot:"title",title:this.$t("attendance.punch_in"),style:{flex:1},cellRenderer:this.cellRenderer},{name:"punchInNote",slot:"title",cellType:"oxd-table-cell-truncate",title:this.$t("attendance.punch_in_note"),style:{flex:1}},{name:"punchOut",slot:"title",title:this.$t("attendance.punch_out"),style:{flex:1},cellRenderer:this.cellRenderer},{name:"punchOutNote",slot:"title",cellType:"oxd-table-cell-truncate",title:this.$t("attendance.punch_out_note"),style:{flex:1}},{name:"duration",slot:"title",title:this.$t("attendance.duration_hours"),style:{flex:1}},{...this.isEditable&&{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}}],checkedItems:[]}},methods:{cellRenderer(...e){const t=e[1];return{component:kL,props:{date:t.userDate,time:t.userTime,offset:_e(t.offset)}}},onClickEdit(e){U("/attendance/editAttendanceRecord/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()}}};const $L=(0,r.c)(SL,[["render",VL],["__scopeId","data-v-0dcb785a"]]);var DL=$L;const EL={class:"orangehrm-background-container"},TL={class:"orangehrm-card-container"},IL={class:"orangehrm-attendance-field-row"},BL={class:"orangehrm-attendance-field-row"},LL={class:"orangehrm-attendance-field-row"};function UL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-switch-input"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("submit-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",EL,[(0,a.createElementVNode)("div",TL,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.attendance_configuration")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",IL,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.employee_can_change_current_time_when_punching_in_out")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.config.canUserChangeCurrentTime,"onUpdate:modelValue":t[0]||(t[0]=e=>n.config.canUserChangeCurrentTime=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",BL,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.employee_can_edit_delete_own_attendance_records")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.config.canUserModifyAttendance,"onUpdate:modelValue":t[1]||(t[1]=e=>n.config.canUserModifyAttendance=e)},null,8,["modelValue"])]),(0,a.createElementVNode)("div",LL,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("attendance.supervisor_can_add_edit_delete_attendance_records_of_subordinates")),1)])),_:1}),(0,a.createVNode)(s,{modelValue:n.config.canSupervisorModifyAttendance,"onUpdate:modelValue":t[2]||(t[2]=e=>n.config.canSupervisorModifyAttendance=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const AL={canUserChangeCurrentTime:!1,canUserModifyAttendance:!1,canSupervisorModifyAttendance:!1};var PL={components:{"oxd-switch-input":q.OxdSwitchInput},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/attendance/configs");return{http:e}},data(){return{config:{...AL},isLoading:!1}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.config={...t}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{...this.config}}).then((e=>{const{data:t}=e.data;return this.config={...t},this.$toast.saveSuccess()})).finally((()=>{this.isLoading=!1}))}}};const qL=(0,r.c)(PL,[["render",UL],["__scopeId","data-v-77c6da4e"]]);var FL=qL;const ML=(0,a.createElementVNode)("br",null,null,-1);function zL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("jobtitle-dropdown"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("employment-status-dropdown"),u=(0,a.resolveComponent)("date-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("oxd-table-filter"),V=(0,a.resolveComponent)("reports-table");return(0,a.openBlock)(),(0,a.createBlock)(V,{module:"time",name:"attendance",prefetch:!1,filters:l.serializedFilters,"column-count":2},{default:(0,a.withCtx)((({generateReport:n})=>[(0,a.createVNode)(C,{"filter-title":e.$t("attendance.attendance_total_summary_report")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y,{onSubmitValid:n},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:l.rules.employee,params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.jobTitle=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.subunit,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.subunit=e),type:"select",label:e.$t("general.sub_unit"),options:o.subunits},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.empStatus,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.empStatus=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.fromDate=e),placeholder:e.$t("general.from"),rules:l.rules.fromDate,label:e.$t("general.date_range")},null,8,["modelValue","placeholder","rules","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.toDate=e),label:" ",placeholder:e.$t("general.to"),rules:l.rules.toDate},null,8,["modelValue","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{type:"submit","display-type":"secondary",label:e.$t("general.view")},null,8,["label"])])),_:1})])),_:2},1032,["onSubmitValid"])])),_:2},1032,["filter-title"]),ML])),footer:(0,a.withCtx)((({data:t})=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(t.meta?t.meta.sum.label:"0.00"),1)])),_:1},8,["filters"])}const jL={employee:null,fromDate:null,toDate:null,jobTitle:null,subunit:null,empStatus:null};var RL={components:{"reports-table":uw,"jobtitle-dropdown":jp,"employee-autocomplete":$a,"employment-status-dropdown":Jp},props:{subunits:{type:Array,default:()=>[]}},setup(){const e=(0,a.ref)({...jL}),{$t:t}=Be(),{userDateFormat:o}=R(),l={fromDate:[Yt(o),vo((()=>e.value.toDate),t("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(o),ro((()=>e.value.fromDate),t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})],employee:[Wt(100),So]},n=(0,a.computed)((()=>({empNumber:e.value.employee?.id,fromDate:e.value.fromDate,toDate:e.value.toDate,jobTitleId:e.value.jobTitle?.id,subunitId:e.value.subunit?.id,employmentStatusId:e.value.empStatus?.id})));return{rules:l,filters:e,serializedFilters:n}}};const OL=(0,r.c)(RL,[["render",zL]]);var GL=OL;const QL=e=>((0,a.pushScopeId)("data-v-1755a182"),e=e(),(0,a.popScopeId)(),e),HL=QL((()=>(0,a.createElementVNode)("br",null,null,-1))),WL={class:"orangehrm-paper-container"},YL={class:"orangehrm-container"},JL={class:"orangehrm-bottom-container"};function XL(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("date-input"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("oxd-table-filter"),y=(0,a.resolveComponent)("table-header"),C=(0,a.resolveComponent)("oxd-card-table"),V=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(f,{"filter-title":e.$t("attendance.employee_attendance_records")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:l.rules.employee,params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.date,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.date=e),rules:l.rules.date,years:n.yearArray,label:e.$t("general.date"),required:""},null,8,["modelValue","rules","years","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"secondary",label:e.$t("general.view"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),HL,(0,a.createElementVNode)("div",WL,[(0,a.createVNode)(y,{total:l.total,selected:0,loading:l.isLoading,"show-divider":!1},null,8,["total","loading"]),(0,a.createElementVNode)("div",YL,[(0,a.createVNode)(C,{headers:n.headers,items:l.items?.data,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items","loading"])]),(0,a.createElementVNode)("div",JL,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0,current:l.currentPage,"onUpdate:current":t[2]||(t[2]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])],64)}var KL={components:{"employee-autocomplete":$a},props:{date:{type:String,default:null}},setup(e){const{$tEmpName:t}=Da(),{userDateFormat:o}=R(),l={date:[Ht,Yt(o)],employee:[Wt(100)]},n=(0,a.ref)({date:e.date?e.date:pe(me(),"yyyy-MM-dd"),employee:null}),r=(0,a.computed)((()=>({date:n.value.date,empNumber:n.value.employee?.id}))),i=e=>e.map((e=>({id:e.empNumber,empName:t(e,{includeMiddle:!1,excludePastEmpTag:!1}),duration:e.sum?.label}))),d=new P(window.appGlobal.baseUrl,"/api/v2/attendance/employees/summary"),{total:s,pages:c,response:m,isLoading:u,execQuery:p,currentPage:h,showPaginator:g}=Dt(d,{query:r,normalizer:i});return{http:d,rules:l,total:s,pages:c,filters:n,isLoading:u,execQuery:p,currentPage:h,showPaginator:g,items:m}},data(){return{yearArray:[...Uy()],headers:[{name:"empName",slot:"title",title:this.$t("general.employee_name"),style:{flex:"40%"}},{name:"duration",title:this.$t("time.total_duration"),style:{flex:"40%"}},{name:"actions",slot:"footer",title:this.$t("general.actions"),style:{flex:"20%"},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{label:this.$t("general.view"),displayType:"text",size:"medium"}}}}]}},methods:{async resetDataTable(){await this.execQuery()},async filterItems(){if(this.filters.employee&&this.filters.date)return U("/attendance/viewAttendanceRecord",void 0,{employeeId:this.filters.employee.id,date:this.filters.date});await this.execQuery()},onClickView(e){U("/attendance/viewAttendanceRecord",void 0,{employeeId:e.id,date:this.filters.date})}}};const ZL=(0,r.c)(KL,[["render",XL],["__scopeId","data-v-1755a182"]]);var eU=ZL;const tU=(0,a.createElementVNode)("br",null,null,-1),oU={class:"orangehrm-paper-container"},aU={key:0,class:"orangehrm-header-container"},lU={class:"orangehrm-container"},nU={class:"orangehrm-bottom-container"};function rU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("date-input"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("oxd-table-filter"),y=(0,a.resolveComponent)("oxd-text"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("oxd-card-table"),b=(0,a.resolveComponent)("oxd-pagination"),x=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(f,{"filter-title":e.$t("attendance.employee_attendance_records")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{onSubmitValid:r.onClickView},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:l.rules.employee,params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.date,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.date=e),rules:l.rules.date,years:n.yearArray,label:e.$t("general.date"),required:""},null,8,["modelValue","rules","years","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"secondary",label:e.$t("general.view"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),tU,(0,a.createElementVNode)("div",oU,[o.isEditable&&l.filters.employee?((0,a.openBlock)(),(0,a.createElementBlock)("div",aU,[(0,a.createVNode)(h,{"icon-name":"plus","display-type":"secondary",label:e.$t("general.add"),onClick:r.onClickAdd},null,8,["label","onClick"]),(0,a.createVNode)(y,{class:"orangehrm-header-total",tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("time.total_duration"))+": "+(0,a.toDisplayString)(l.totalDuration),1)])),_:1})])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(C,{total:l.total,loading:l.isLoading,"show-divider":o.isEditable,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","show-divider","selected","onDelete"]),(0,a.createElementVNode)("div",lU,[(0,a.createVNode)(V,{selected:n.checkedItems,"onUpdate:selected":t[2]||(t[2]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,selectable:o.isEditable,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","selectable","loading"])]),(0,a.createElementVNode)("div",nU,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(x,{ref:"deleteDialog"},null,512)])],64)}var iU={components:{"employee-autocomplete":$a,"delete-confirmation":At},props:{date:{type:String,default:null},employee:{type:Object,required:!0},isEditable:{type:Boolean,default:!1}},setup(e){const t=(0,a.ref)({date:e.date?e.date:pe(me(),"yyyy-MM-dd"),employee:e.employee?{id:e.employee.empNumber,label:`${e.employee.firstName} ${e.employee.middleName} ${e.employee.lastName}`,isPastEmployee:e.employee.terminationId}:null}),o=(0,a.computed)((()=>({date:t.value.date,empNumber:t.value.employee?.id}))),l=new P(window.appGlobal.baseUrl,`/api/v2/attendance/employees/${e.employee.empNumber}/records`),{locale:n}=Le(),{jsDateFormat:r,userDateFormat:i,timeFormat:d,jsTimeFormat:s}=R(),c={date:[Ht,Yt(i)],employee:[Wt(100),So]},m=e=>e.map((e=>{const{punchIn:t,punchOut:o}=e,a=pe(ue(t?.userDate),r,{locale:n}),l=ye(fe(t?.userTime,d),s),i=pe(ue(o?.userDate),r,{locale:n}),c=ye(fe(o?.userTime,d),s);return{id:e.id,punchIn:{...t,userTime:l,userDate:a},punchOut:{...o,userTime:c,userDate:i},duration:e.duration,punchInNote:t.note,punchOutNote:o.note}})),{total:u,pages:p,pageSize:h,response:g,isLoading:v,execQuery:f,currentPage:y,showPaginator:C}=Dt(l,{query:o,normalizer:m,prefetch:!0}),V=(0,a.computed)((()=>{const e=g.value?.meta;return e?e.sum.label:"0.00"}));return{http:l,rules:c,total:u,pages:p,filters:t,pageSize:h,isLoading:v,execQuery:f,currentPage:y,showPaginator:C,items:g,totalDuration:V}},data(){return{yearArray:[...Uy()],headers:[{name:"punchIn",slot:"title",title:this.$t("attendance.punch_in"),style:{flex:1},cellRenderer:this.cellRenderer},{name:"punchInNote",slot:"title",cellType:"oxd-table-cell-truncate",title:this.$t("attendance.punch_in_note"),style:{flex:1}},{name:"punchOut",slot:"title",title:this.$t("attendance.punch_out"),style:{flex:1},cellRenderer:this.cellRenderer},{name:"punchOutNote",slot:"title",cellType:"oxd-table-cell-truncate",title:this.$t("attendance.punch_out_note"),style:{flex:1}},{name:"duration",slot:"title",title:this.$t("attendance.duration_hours"),style:{flex:1}},{...this.isEditable&&{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}}],checkedItems:[]}},methods:{cellRenderer(...e){const t=e[1];return{component:kL,props:{date:t.userDate,time:t.userTime,offset:_e(t.offset)}}},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickView(){return U("/attendance/viewAttendanceRecord",void 0,{employeeId:this.filters.employee?.id,date:this.filters?.date})},onClickAdd(){return U("/attendance/proxyPunchInPunchOut",void 0,{employeeId:this.filters.employee?.id,date:this.filters?.date})},onClickEdit(e){return U("/attendance/editEmployeeAttendanceRecord/{id}",{id:e.id})}}};const dU=(0,r.c)(iU,[["render",rU]]);var sU=dU,cU={"attendance-punch-in":XB,"attendance-punch-out":lL,"edit-attendance":pL,"view-my-attendance":DL,"attendance-configuration":FL,"attendance-summary-report":GL,"view-employee-attendance-summary":eU,"view-employee-attendance-detailed":sU};const mU={class:"orangehrm-background-container"},uU=(0,a.createElementVNode)("br",null,null,-1),pU={key:1};function hU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("purge-employee-records"),d=(0,a.resolveComponent)("selected-employee"),s=(0,a.resolveComponent)("maintenance-note"),c=(0,a.resolveComponent)("purge-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",mU,[(0,a.createVNode)(i,{"include-employees-param":"onlyPast","title-label":e.$t("maintenance.purge_employee_records"),"autocomplete-label":e.$t("maintenance.past_employee"),onSearch:r.onClickSearch},null,8,["title-label","autocomplete-label","onSearch"]),uU,n.showPurgeableEmployee?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,loading:n.isLoading,"selected-employee":n.selectedEmployee,"button-label":e.$t("maintenance.purge"),onSubmit:r.onClickPurge},null,8,["loading","selected-employee","button-label","onSubmit"])):(0,a.createCommentVNode)("",!0),n.showPurgeableEmployee?((0,a.openBlock)(),(0,a.createElementBlock)("br",pU)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(s,{"instance-identifier":o.instanceIdentifier},null,8,["instance-identifier"]),(0,a.createVNode)(c,{ref:"purgeDialog",title:e.$t("maintenance.purge_employee"),subtitle:e.$t("maintenance.purge_employee_warning"),"cancel-label":e.$t("general.no_cancel"),"confirm-label":e.$t("maintenance.yes_purge")},null,8,["title","subtitle","cancel-label","confirm-label"])])}const gU={class:"orangehrm-card-container"},vU={class:"orangehrm-selected-employee"},fU={class:"orangehrm-selected-employee-imagesection"},yU={class:"orangehrm-selected-employee-image-wrapper"},CU={class:"orangehrm-selected-employee-image"},VU=["src"],bU={class:"orangehrm-selected-employee-content"};function xU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("full-name-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",gU,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("maintenance.selected_employee")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{loading:o.loading,onSubmit:r.emitEmpNumber},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",vU,[(0,a.createElementVNode)("div",fU,[(0,a.createElementVNode)("div",yU,[(0,a.createElementVNode)("div",CU,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:l.imgSrc},null,8,VU)])])]),(0,a.createElementVNode)("div",bU,[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{"first-name":o.selectedEmployee.firstName,"middle-name":o.selectedEmployee.middleName,"last-name":o.selectedEmployee.lastName,rules:n.rules,"show-middle-name-placeholder":!1,disabled:""},null,8,["first-name","middle-name","last-name","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"model-value":o.selectedEmployee.employeeId,label:e.$t("general.employee_id"),rules:n.rules.employeeId,disabled:""},null,8,["model-value","label","rules"])])),_:1})])),_:1})])),_:1})])]),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{"display-type":"secondary",label:o.buttonLabel,type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmit"])])}var wU={name:"SelectedEmployee",components:{"full-name-input":Np},props:{selectedEmployee:{type:Object,required:!0},buttonLabel:{type:String,required:!0},loading:{type:Boolean,default:!1}},emits:["submit"],setup(e){const t=(0,a.computed)((()=>`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.selectedEmployee.empNumber}`));return{imgSrc:t}},data(){return{rules:{firstName:[Wt(30)],middleName:[Wt(30)],lastName:[Wt(30)],employeeId:[Wt(10)]}}},methods:{emitEmpNumber(){this.$emit("submit",this.selectedEmployee.empNumber)}}};const NU=(0,r.c)(wU,[["render",xU],["__scopeId","data-v-27663eb7"]]);var _U=NU;const kU={class:"orangehrm-card-container"};function SU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",kU,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.titleLabel),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{onSubmit:r.emitEmployee},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employee=e),rules:n.rules.employee,params:{includeEmployees:o.includeEmployeesParam},label:o.autocompleteLabel,required:""},null,8,["modelValue","rules","params","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmit"])])}var $U={name:"EmployeeRecords",components:{"required-text":C,"employee-autocomplete":$a},props:{includeEmployeesParam:{type:String,required:!0},titleLabel:{type:String,required:!0},autocompleteLabel:{type:String,required:!0}},emits:["search"],data(){return{employee:null,rules:{employee:[Ht,Wt(100),So]}}},methods:{emitEmployee(){this.$emit("search",this.employee?._employee)}}};const DU=(0,r.c)($U,[["render",SU]]);var EU=DU;const TU={class:"orangehrm-modal-header"},IU={class:"orangehrm-text-center-align"},BU={class:"orangehrm-modal-footer"};function LU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-confirmation-dialog orangehrm-dialog-popup","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",TU,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.title),1)])),_:1})]),(0,a.createElementVNode)("div",IU,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.subtitle),1)])),_:1})]),(0,a.createElementVNode)("div",BU,[(0,a.createVNode)(d,{label:o.cancelLabel,"display-type":o.cancelButtonType,class:"orangehrm-button-margin",onClick:r.onCancel},null,8,["label","display-type","onClick"]),(0,a.createVNode)(d,{"icon-name":o.icon,label:o.confirmLabel,"display-type":o.confirmButtonType,class:"orangehrm-button-margin",onClick:r.onConfirm},null,8,["icon-name","label","display-type","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var UU={components:{"oxd-dialog":q.OxdDialog},props:{title:{type:String,required:!0},subtitle:{type:String,required:!0},cancelLabel:{type:String,required:!0},confirmLabel:{type:String,required:!0},icon:{type:String,required:!1,default:""},confirmButtonType:{type:String,required:!1,default:"label-danger"},cancelButtonType:{type:String,required:!1,default:"text"}},data(){return{show:!1,reject:null,resolve:null}},methods:{showDialog(){return new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const AU=(0,r.c)(UU,[["render",LU],["__scopeId","data-v-2cee3bd5"]]);var PU=AU;const qU={key:0,class:"orangehrm-maintenance-note"},FU={class:"orangehrm-maintenance-note-header"};function MU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return null!==o.instanceIdentifier?((0,a.openBlock)(),(0,a.createElementBlock)("div",qU,[(0,a.createElementVNode)("div",FU,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.note")),1)])),_:1})]),(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("maintenance.gdpr_note",{instanceIdentifier:o.instanceIdentifier})),1)])),_:1})])):(0,a.createCommentVNode)("",!0)}var zU={name:"MaintenanceNote",props:{instanceIdentifier:{type:String,required:!0}}};const jU=(0,r.c)(zU,[["render",MU],["__scopeId","data-v-d63cb296"]]);var RU=jU;const OU={firstName:"",middleName:"",lastName:"",employeeId:"",empNumber:""};var GU={name:"PurgeEmployee",components:{"purge-confirmation":PU,"purge-employee-records":EU,"selected-employee":_U,"maintenance-note":RU},props:{instanceIdentifier:{type:String,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/maintenance/purge");return{http:e}},data(){return{isLoading:!1,showPurgeableEmployee:!1,selectedEmployee:{...OU}}},methods:{onClickSearch(e){this.selectedEmployee={...OU},e?(this.selectedEmployee={...e},this.showPurgeableEmployee=!0):this.showPurgeableEmployee=!1},onClickPurge(e){this.$refs.purgeDialog.showDialog().then((t=>{"ok"===t&&this.purgeEmployee(e)}))},purgeEmployee(e){this.isLoading=!0,this.http.deleteAll({empNumber:e}).then((()=>this.$toast.success({title:this.$t("general.success"),message:this.$t("maintenance.purge_success")}))).then((()=>{this.showPurgeableEmployee=!1,this.selectedEmployee={...OU},this.isLoading=!1,U("/maintenance/purgeEmployee")}))}}};const QU=(0,r.c)(GU,[["render",hU]]);var HU=QU;const WU={class:"orangehrm-background-container"},YU=(0,a.createElementVNode)("br",null,null,-1);function JU(e,t,o,l,n,r){const i=(0,a.resolveComponent)("selected-candidates"),d=(0,a.resolveComponent)("maintenance-note"),s=(0,a.resolveComponent)("purge-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",WU,[(0,a.createVNode)(i,{loading:n.isLoading,onPurge:r.onClickPurge},null,8,["loading","onPurge"]),YU,(0,a.createVNode)(d,{"instance-identifier":o.instanceIdentifier},null,8,["instance-identifier"]),(0,a.createVNode)(s,{ref:"purgeDialog",title:e.$t("maintenance.purge_candidates"),subtitle:e.$t("maintenance.purge_candidates_warning"),"cancel-label":e.$t("general.no_cancel"),"confirm-label":e.$t("maintenance.yes_purge")},null,8,["title","subtitle","cancel-label","confirm-label"])])}const XU={key:0,class:"orangehrm-paper-container"},KU={class:"orangehrm-header-container"},ZU={class:"orangehrm-container"},eA={class:"orangehrm-bottom-container"};function tA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("purge-candidate-records"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("table-header"),c=(0,a.resolveComponent)("oxd-card-table"),m=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(i,{onSearch:r.onClickSearch},null,8,["onSearch"]),l.vacancy?((0,a.openBlock)(),(0,a.createElementBlock)("div",XU,[(0,a.withDirectives)((0,a.createElementVNode)("div",KU,[(0,a.createVNode)(d,{label:e.$t("maintenance.purge_all"),"display-type":"secondary",onClick:r.onClickPurge},null,8,["label","onClick"])],512),[[a.vShow,l.total>0]]),(0,a.createVNode)(s,{total:l.total,selected:0,"show-divider":l.total>0,loading:l.isLoading||o.loading},null,8,["total","show-divider","loading"]),(0,a.createElementVNode)("div",ZU,[(0,a.createVNode)(c,{headers:n.headers,clickable:!1,selectable:!1,loading:l.isLoading||o.loading,items:l.items.data,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","loading","items"])]),(0,a.createElementVNode)("div",eA,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])):(0,a.createCommentVNode)("",!0)],64)}const oA={class:"orangehrm-card-container"};function aA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("vacancy-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",oA,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("maintenance.purge_candidate_records")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,{onSubmitValid:t[1]||(t[1]=t=>e.$emit("search",n.vacancy.id))},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy,"onUpdate:modelValue":t[0]||(t[0]=e=>n.vacancy=e),rules:n.rules.vacancy,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1})])}function lA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("recruitment.vacancy"),clear:!1,"create-options":r.loadVacancies},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var nA={name:"VacancyAutocomplete",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancies");return{http:e}},methods:{async loadVacancies(e){return new Promise((t=>{e.trim()?this.http.getAll({name:e.trim()}).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:e.name}))))})):t([])}))}}};const rA=(0,r.c)(nA,[["render",lA]]);var iA=rA,dA={name:"CandidateRecords",components:{"required-text":C,"vacancy-autocomplete":iA},emits:["search"],data(){return{vacancy:null,rules:{vacancy:[Ht,So]}}}};const sA=(0,r.c)(dA,[["render",aA]]);var cA=sA,mA={name:"SelectedCandidates",components:{"purge-candidate-records":cA},props:{loading:{type:Boolean,default:!1}},emits:["purge"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/maintenance/candidates"),t=(0,a.ref)(null),{locale:o}=Le(),{jsDateFormat:l}=R(),{$tEmpName:n}=Da(),r=(0,a.computed)((()=>({vacancyId:t.value}))),i=e=>e.map((e=>({name:n({firstName:e.firstName,middleName:e.middleName,lastName:e.lastName,terminationId:null},{includeMiddle:!0}),date:pe(ue(e.dateOfApplication),l,{locale:o}),status:e.status.label}))),{total:d,pages:s,response:c,isLoading:m,currentPage:u,showPaginator:p,execQuery:h}=Dt(e,{prefetch:!1,query:r,normalizer:i});return{http:e,total:d,pages:s,vacancy:t,isLoading:m,currentPage:u,showPaginator:p,items:c,execQuery:h}},data(){return{headers:[{name:"name",title:this.$t("recruitment.candidate_name"),style:{flex:"45%"}},{name:"date",title:this.$t("recruitment.date_of_application"),style:{flex:"45%"}},{name:"status",title:this.$t("general.status"),style:{flex:"10%"}}]}},methods:{onClickSearch(e){this.vacancy=e,this.execQuery()},onClickPurge(){this.vacancy&&this.$emit("purge",this.vacancy)}}};const uA=(0,r.c)(mA,[["render",tA],["__scopeId","data-v-ad9e804e"]]);var pA=uA,hA={name:"PurgeCandidate",components:{"maintenance-note":RU,"purge-confirmation":PU,"selected-candidates":pA},props:{instanceIdentifier:{type:String,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/maintenance/candidates/purge");return{http:e}},data(){return{isLoading:!1}},methods:{onClickPurge(e){const t=e;this.$refs.purgeDialog.showDialog().then((e=>{"ok"===e&&this.purgeCandidates(t)}))},purgeCandidates(e){this.isLoading=!0,this.http.deleteAll({vacancyId:e}).then((()=>this.$toast.success({title:this.$t("general.success"),message:this.$t("maintenance.purge_success")}))).then((()=>{A()}))}}};const gA=(0,r.c)(hA,[["render",JU]]);var vA=gA;const fA={key:0,class:"orangehrm-background-container"},yA={key:1};function CA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-records"),d=(0,a.resolveComponent)("selected-employee"),s=(0,a.resolveComponent)("maintenance-note");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(i,{"title-label":e.$t("maintenance.download_personal_data"),"include-employees-param":"currentAndPast","autocomplete-label":e.$t("general.employee_name"),onSearch:r.search},null,8,["title-label","autocomplete-label","onSearch"]),n.employee?((0,a.openBlock)(),(0,a.createElementBlock)("div",fA,[(0,a.createVNode)(d,{"button-label":e.$t("general.download"),"selected-employee":n.employee,onSubmit:r.downloadEmployeeData},null,8,["button-label","selected-employee","onSubmit"])])):(0,a.createCommentVNode)("",!0),n.employee?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("br",yA)),(0,a.createVNode)(s,{"instance-identifier":o.instanceIdentifier},null,8,["instance-identifier"])],64)}var VA={components:{"employee-records":EU,"selected-employee":_U,"maintenance-note":RU},props:{instanceIdentifier:{type:String,default:null}},data(){return{employee:null}},methods:{search(e){this.employee=e},downloadEmployeeData(e){const t=`${window.appGlobal.baseUrl}/maintenance/accessEmployeeData/${e}`;window.open(t,"_blank")}}};const bA=(0,r.c)(VA,[["render",CA]]);var xA=bA,wA={"purge-employee":HU,"purge-candidate":vA,"access-employee-search":xA};const NA=e=>((0,a.pushScopeId)("data-v-3c60b9fd"),e=e(),(0,a.popScopeId)(),e),_A={class:"orangehrm-background-container"},kA=NA((()=>(0,a.createElementVNode)("br",null,null,-1))),SA={class:"orangehrm-paper-container"},$A={class:"orangehrm-header-container"},DA={class:"orangehrm-container"},EA={class:"orangehrm-bottom-container"};function TA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("jobtitle-dropdown"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("vacancy-dropdown"),c=(0,a.resolveComponent)("hiring-manager-dropdown"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-divider"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("oxd-card-table"),b=(0,a.resolveComponent)("oxd-pagination"),x=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",_A,[(0,a.createVNode)(y,{"filter-title":e.$t("general.vacancies")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.jobTitleId,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.jobTitleId=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.vacancyId,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.vacancyId=e),label:e.$t("recruitment.vacancy")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.hiringManagerId,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.hiringManagerId=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.status,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.status=e),type:"select",label:e.$t("general.status"),clear:!1,options:n.statusOptions},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(g,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),kA,(0,a.createElementVNode)("div",SA,[(0,a.createElementVNode)("div",$A,[(0,a.createVNode)(g,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(C,{selected:n.checkedItems.length,loading:l.isLoading,total:l.total,onDelete:r.onClickDeleteSelected},null,8,["selected","loading","total","onDelete"]),(0,a.createElementVNode)("div",DA,[(0,a.createVNode)(V,{selected:n.checkedItems,"onUpdate:selected":t[4]||(t[4]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[5]||(t[5]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card",class:"orangehrm-vacancy-list"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",EA,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,current:l.currentPage,"onUpdate:current":t[6]||(t[6]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(x,{ref:"deleteDialog"},null,512)])}function IA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("recruitment.vacancy"),options:l.options},null,8,["label","options"])}var BA={name:"VacancyDropdown",props:{status:{type:Boolean,required:!1,default:null},excludeInterviewers:{type:Boolean,required:!1,default:!1}},setup(e){const t=(0,a.ref)([]),{$t:o}=Be(),l=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancies");return(0,a.onBeforeMount)((()=>{const a={model:"summary",limit:0};null!==e.status&&(a.status=e.status),a.excludeInterviewers=e.excludeInterviewers,l.getAll(a).then((({data:e})=>{t.value=e.data.map((e=>({id:e.id,label:!1===e.status?`${e.name} (${o("general.closed")})`:e.name})))}))})),{options:t}}};const LA=(0,r.c)(BA,[["render",IA]]);var UA=LA;function AA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("recruitment.hiring_manager"),options:l.options},null,8,["label","options"])}var PA={name:"HiringManagerDropdown",setup(){const e=(0,a.ref)([]),{$tEmpName:t}=Da(),o=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/hiring-managers");return(0,a.onBeforeMount)((()=>{o.getAll({limit:0}).then((({data:o})=>{e.value=o.data.map((e=>({id:e.empNumber,label:t(e,{includeMiddle:!1,excludePastEmpTag:!1})})))}))})),{options:e}}};const qA=(0,r.c)(PA,[["render",AA]]);var FA=qA;const MA={jobTitleId:null,hiringManagerId:null,vacancyId:null,status:null},zA={"vacancy.name":"ASC","vacancy.status":"DEFAULT","jobTitle.jobTitleName":"DEFAULT","hiringManager.lastName":"DEFAULT"};var jA={name:"ViewJobVacancy",components:{"delete-confirmation":At,"jobtitle-dropdown":jp,"vacancy-dropdown":UA,"hiring-manager-dropdown":FA},setup(){const{$t:e}=Be(),{$tEmpName:t}=Da(),o=(0,a.ref)({...MA}),{sortDefinition:l,sortField:n,sortOrder:r,onSort:i}=Pt({sortDefinition:zA}),d=(0,a.computed)((()=>({vacancyId:o.value.vacancyId?.id,jobTitleId:o.value.jobTitleId?.id,hiringManagerId:o.value.hiringManagerId?.id,status:o.value.status?.id,sortField:n.value,sortOrder:r.value,model:"detailed"}))),s=o=>o.map((o=>({id:o.id,vacancy:o.name,jobTitle:o.jobTitle?.isDeleted?o.jobTitle.title+e("general.deleted"):o.jobTitle?.title,hiringManager:o.hiringManager?.id?t(o.hiringManager):e("general.deleted"),status:o.status?e("general.active"):e("general.closed")}))),c=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancies"),{showPaginator:m,currentPage:u,total:p,pages:h,pageSize:g,response:v,isLoading:f,execQuery:y}=Dt(c,{query:d,normalizer:s});return i(y),{http:c,showPaginator:m,currentPage:u,isLoading:f,total:p,pages:h,pageSize:g,execQuery:y,items:v,filters:o,sortDefinition:l}},data(){return{headers:[{name:"vacancy",slot:"title",title:this.$t("recruitment.vacancy"),sortField:"vacancy.name",style:{flex:3}},{name:"jobTitle",title:this.$t("general.job_title"),sortField:"jobTitle.jobTitleName",style:{flex:3}},{name:"hiringManager",title:this.$t("recruitment.hiring_manager"),sortField:"hiringManager.lastName",style:{flex:3}},{name:"status",title:this.$t("general.status"),sortField:"vacancy.status",style:{flex:2}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:2},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],statusOptions:[{id:!0,param:"active",label:this.$t("general.active")},{id:!1,param:"closed",label:this.$t("general.closed")}],vacancies:[],checkedItems:[]}},methods:{onClickAdd(){U("/recruitment/addJobVacancy")},onClickEdit(e){U("/recruitment/addJobVacancy/{id}",{id:e.id})},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData([e.id])}))},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData(e)}))},async deleteData(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...MA},this.filterItems()}}};const RA=(0,r.c)(jA,[["render",TA],["__scopeId","data-v-3c60b9fd"]]);var OA=RA;const GA=e=>((0,a.pushScopeId)("data-v-c0f2c7c8"),e=e(),(0,a.popScopeId)(),e),QA={class:"orangehrm-background-container"},HA={class:"orangehrm-card-container"},WA=GA((()=>(0,a.createElementVNode)("br",null,null,-1))),YA=GA((()=>(0,a.createElementVNode)("br",null,null,-1))),JA={class:"orangehrm-vacancy-links"},XA=GA((()=>(0,a.createElementVNode)("br",null,null,-1)));function KA(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("jobtitle-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("employee-autocomplete"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("vacancy-link-card"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",QA,[(0,a.createElementVNode)("div",HA,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.add_vacancy")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.vacancy.name=e),label:e.$t("recruitment.vacancy_name"),required:"",rules:n.rules.name},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.vacancy.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.vacancy.jobTitle=e),rules:n.rules.jobTitle,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-grid-item-span-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.vacancy.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.vacancy.hiringManager,"onUpdate:modelValue":t[3]||(t[3]=e=>n.vacancy.hiringManager=e),params:{includeEmployees:"onlyCurrent"},required:"",rules:n.rules.hiringManager,label:e.$t("recruitment.hiring_manager")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.numOfPositions,"onUpdate:modelValue":t[4]||(t[4]=e=>n.vacancy.numOfPositions=e),label:e.$t("recruitment.num_of_positions"),rules:n.rules.numOfPositions},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangerhrm-switch-wrapper"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.vacancy.status,"onUpdate:modelValue":t[5]||(t[5]=e=>n.vacancy.status=e)},null,8,["modelValue"])])),_:1})])),_:1}),WA,(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangerhrm-switch-wrapper"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.publish_in_rss_feed_and_web_page")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.vacancy.isPublished,"onUpdate:modelValue":t[6]||(t[6]=e=>n.vacancy.isPublished=e)},null,8,["modelValue"])])),_:1})])),_:1}),YA,(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-grid-item-span-2"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",JA,[(0,a.createVNode)(g,{label:e.$t("recruitment.rss_feed_url"),url:n.rssFeedUrl},null,8,["label","url"]),(0,a.createVNode)(g,{label:e.$t("recruitment.web_page_url"),url:n.webUrl},null,8,["label","url"])])])),_:1})])),_:1}),XA,(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const ZA={class:"orangehrm-label-link-wrapper"},eP=["href"];function tP(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",ZA,[(0,a.createVNode)(i,{class:"orangehrm-text-label",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.label)+" : ",1)])),_:1}),(0,a.createElementVNode)("a",{href:o.url,target:"_blank",class:"orangehrm-vacancy-link"},(0,a.toDisplayString)(o.url),9,eP)])}var oP={name:"VacancyLinkCard",props:{label:{type:String,required:!0},url:{type:String,required:!0}}};const aP=(0,r.c)(oP,[["render",tP],["__scopeId","data-v-0c1e0bb4"]]);var lP=aP;const nP={jobTitle:null,name:"",hiringManager:null,numOfPositions:"",description:"",status:!0,isPublished:!0},rP=`${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`;var iP={components:{"oxd-switch-input":q.OxdSwitchInput,"employee-autocomplete":$a,"jobtitle-dropdown":jp,"vacancy-link-card":lP},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancies"),{createUniqueValidator:t}=qo(e),o=t("Vacancy","name");return{http:e,vacancyNameUniqueValidation:o}},data(){return{isLoading:!1,vacancy:{...nP},rules:{jobTitle:[Ht],name:[Ht,this.vacancyNameUniqueValidation,Wt(50)],hiringManager:[Ht,So],numOfPositions:[e=>null===e||""===e||("string"===typeof eo(e)?eo(e):xo(1,99)(e))],description:[],status:[Ht],isPublished:[Ht]},rssFeedUrl:`${rP}/recruitmentApply/jobs.rss`,webUrl:`${rP}/recruitmentApply/jobs.html`}},methods:{onCancel(){U("/recruitment/viewJobVacancy")},onSave(){this.isLoading=!0,this.vacancy={name:this.vacancy.name,jobTitleId:this.vacancy.jobTitle.id,employeeId:this.vacancy.hiringManager.id,numOfPositions:this.vacancy.numOfPositions?parseInt(this.vacancy.numOfPositions):null,description:this.vacancy.description,status:this.vacancy.status,isPublished:this.vacancy.isPublished},this.http.create({...this.vacancy}).then((e=>{const{data:t}=e.data;this.$toast.saveSuccess(),U("/recruitment/addJobVacancy/{id}",{id:t.id})}))}}};const dP=(0,r.c)(iP,[["render",KA],["__scopeId","data-v-c0f2c7c8"]]);var sP=dP;const cP=e=>((0,a.pushScopeId)("data-v-01351da0"),e=e(),(0,a.popScopeId)(),e),mP={class:"orangehrm-background-container"},uP={class:"orangehrm-card-container"},pP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),hP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),gP={class:"orangehrm-vacancy-links"},vP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),fP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),yP={key:0,class:"orangehrm-card-container"},CP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),VP={key:1,class:"orangehrm-card-container"},bP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),xP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),wP={class:"orangehrm-paper-container"},NP={class:"orangehrm-header-container orangehrm-attachment-header"},_P={class:"orangehrm-container"},kP=cP((()=>(0,a.createElementVNode)("br",null,null,-1))),SP=cP((()=>(0,a.createElementVNode)("br",null,null,-1)));function $P(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("jobtitle-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("employee-autocomplete"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("vacancy-link-card"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("submit-button"),C=(0,a.resolveComponent)("oxd-form-actions"),V=(0,a.resolveComponent)("oxd-form"),b=(0,a.resolveComponent)("file-upload-input"),x=(0,a.resolveComponent)("table-header"),w=(0,a.resolveComponent)("oxd-card-table"),N=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",mP,[(0,a.createElementVNode)("div",uP,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.edit_vacancy")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.vacancy.name=e),label:e.$t("recruitment.vacancy_name"),required:"",rules:n.rules.name},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.vacancy.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.vacancy.jobTitle=e),rules:n.rules.jobTitle,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-grid-item-span-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.description,"onUpdate:modelValue":t[2]||(t[2]=e=>n.vacancy.description=e),type:"textarea",label:e.$t("general.description"),placeholder:e.$t("general.type_description_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.vacancy.hiringManager,"onUpdate:modelValue":t[3]||(t[3]=e=>n.vacancy.hiringManager=e),params:{includeEmployees:"onlyCurrent"},required:"",rules:n.rules.hiringManager,label:e.$t("recruitment.hiring_manager")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancy.numOfPositions,"onUpdate:modelValue":t[4]||(t[4]=e=>n.vacancy.numOfPositions=e),label:e.$t("recruitment.num_of_positions"),rules:n.rules.numOfPositions},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangerhrm-switch-wrapper"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.vacancy.status,"onUpdate:modelValue":t[5]||(t[5]=e=>n.vacancy.status=e)},null,8,["modelValue"])])),_:1})])),_:1}),pP,(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangerhrm-switch-wrapper"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-text",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.publish_in_rss_feed_and_web_page")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.vacancy.isPublished,"onUpdate:modelValue":t[6]||(t[6]=e=>n.vacancy.isPublished=e)},null,8,["modelValue"])])),_:1})])),_:1}),hP,(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-grid-item-span-2"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",gP,[(0,a.createVNode)(g,{label:e.$t("recruitment.rss_feed_url"),url:n.rssFeedUrl},null,8,["label","url"]),(0,a.createVNode)(g,{label:e.$t("recruitment.web_page_url"),url:n.webUrl},null,8,["label","url"])])])),_:1})])),_:1}),vP,(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(y)])),_:1})])),_:1},8,["loading","onSubmitValid"])]),fP,n.isAddClicked&&!n.isEditClicked?((0,a.openBlock)(),(0,a.createElementBlock)("div",yP,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title orangehrm-attachment-header__title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoadingAttachment,onSubmitValid:r.onSaveAttachment},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(b,{newFile:n.vacancyAttachment.newAttachment,"onUpdate:newFile":t[7]||(t[7]=e=>n.vacancyAttachment.newAttachment=e),method:n.vacancyAttachment.method,"onUpdate:method":t[8]||(t[8]=e=>n.vacancyAttachment.method=e),label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),file:n.vacancyAttachment.oldAttachment,rules:n.rules.addAttachment,url:"recruitment/vacancyAttachment/attachId",hint:e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize}),required:""},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancyAttachment.comment,"onUpdate:modelValue":t[9]||(t[9]=e=>n.vacancyAttachment.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1}),CP,(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.updateVisibility},null,8,["label","onClick"]),(0,a.createVNode)(y,{label:e.$t("general.save")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])):(0,a.createCommentVNode)("",!0),n.isEditClicked&&!n.isAddClicked?((0,a.openBlock)(),(0,a.createElementBlock)("div",VP,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title orangehrm-attachment-header__title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,{loading:n.isLoadingAttachment,onSubmitValid:r.onUpdateAttachment},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(b,{newFile:n.vacancyAttachment.newAttachment,"onUpdate:newFile":t[10]||(t[10]=e=>n.vacancyAttachment.newAttachment=e),method:n.vacancyAttachment.method,"onUpdate:method":t[11]||(t[11]=e=>n.vacancyAttachment.method=e),label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),file:n.vacancyAttachment.oldAttachment,rules:n.rules.updateAttachment,url:"recruitment/viewVacancyAttachment/attachId",hint:e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize}),deletable:!1,required:""},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1})])),_:1}),(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.vacancyAttachment.comment,"onUpdate:modelValue":t[12]||(t[12]=e=>n.vacancyAttachment.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1}),bP,(0,a.createVNode)(d),(0,a.createVNode)(C,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v),(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.updateVisibility},null,8,["label","onClick"]),(0,a.createVNode)(y,{label:e.$t("general.save")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])):(0,a.createCommentVNode)("",!0),xP,(0,a.createElementVNode)("div",wP,[(0,a.createElementVNode)("div",NP,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title orangehrm-attachment-header__title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.attachments")),1)])),_:1}),n.isAddClicked||n.isEditClicked?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(f,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"text",onClick:r.onClickAdd},null,8,["label","onClick"]))]),(0,a.createVNode)(x,{selected:n.checkedItems.length,loading:n.isLoadingTable,total:n.attachments.length,onDelete:r.onClickDeleteSelected},null,8,["selected","loading","total","onDelete"]),(0,a.createElementVNode)("div",_P,[(0,a.createVNode)(w,{selected:n.checkedItems,"onUpdate:selected":t[13]||(t[13]=e=>n.checkedItems=e),headers:n.headers,items:n.attachments,selectable:!0,clickable:!1,loading:n.isLoadingTable,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createVNode)(N,{ref:"deleteDialog"},null,512),kP,SP])])}const DP={jobTitle:null,name:"",hiringManager:null,numOfPositions:"",description:"",status:!1,isPublished:!1},EP={id:null,comment:"",oldAttachment:{},newAttachment:null,method:"keepCurrent"},TP=`${window.location.protocol}//${window.location.host}${window.appGlobal.baseUrl}`,IP=e=>e.map((e=>({id:e.id,vacancyId:e.vacancyId,fileName:e.attachment.fileName,fileSize:+(e.attachment.fileSize/1024).toFixed(2)+" kb",fileType:e.attachment.fileType,comment:e.comment,attachmentType:e.attachmentType})));var BP={components:{"oxd-switch-input":q.OxdSwitchInput,"employee-autocomplete":$a,"jobtitle-dropdown":jp,"vacancy-link-card":lP,"delete-confirmation":At,"file-upload-input":Po},props:{vacancyId:{type:String,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancies"),o=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/vacancy/attachments"),{createUniqueValidator:a}=qo(t),l=a("Vacancy","name",{entityId:e.vacancyId});return{http:t,httpAttachments:o,vacancyNameUniqueValidation:l}},data(){return{isLoading:!1,isLoadingAttachment:!1,isLoadingTable:!1,isAddClicked:!1,isEditClicked:!1,currentName:"",vacancy:{...DP},vacancyAttachment:{...EP},rules:{jobTitle:[Ht],name:[Ht,this.vacancyNameUniqueValidation,Wt(50)],hiringManager:[Ht,So,e=>!e?.isPastEmployee||this.$t("general.invalid")],numOfPositions:[e=>null===e||""===e||("string"===typeof eo(e)?eo(e):xo(1,99)(e))],description:[],status:[Ht],isPublished:[Ht],addAttachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)],updateAttachment:[e=>"replaceCurrent"!=this.vacancyAttachment.method||Ht(e),po(this.allowedFileTypes),uo(this.maxFileSize)],comment:[Wt(200)]},headers:[{name:"fileName",slot:"title",title:this.$t("general.file_name"),style:{flex:3}},{name:"fileSize",title:this.$t("general.file_size"),style:{flex:2}},{name:"fileType",title:this.$t("general.file_type"),style:{flex:2}},{name:"comment",title:this.$t("general.comment"),style:{flex:4}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:2},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},download:{onClick:this.downloadFile,props:{name:"download"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],attachments:[],checkedItems:[],rssFeedUrl:`${TP}/recruitmentApply/jobs.rss`,webUrl:`${TP}/recruitmentApply/jobs.html`}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},created(){this.isLoading=!0,this.isLoadingTable=!0,this.http.get(this.vacancyId).then((e=>{const{data:t}=e.data;this.currentName=t.name,this.vacancy.name=t.name,this.vacancy.description=t.description,this.vacancy.numOfPositions=t.numOfPositions||"",this.vacancy.status=t.status,this.vacancy.isPublished=t.isPublished,this.vacancy.hiringManager=t.hiringManager.id?{id:t.hiringManager.id,label:`${t.hiringManager.firstName} ${t.hiringManager.middleName} ${t.hiringManager.lastName}`,isPastEmployee:!!t.hiringManager.terminationId}:this.$t("general.deleted"),this.vacancy.jobTitle=t.jobTitle.isDeleted?null:{id:t.jobTitle.id,label:t.jobTitle.title}})).then((()=>{this.httpAttachments.request({method:"GET",url:`/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`}).then((e=>{const{data:t}=e.data;this.attachments=IP(t)}))})).finally((()=>{this.isLoadingTable=!1,this.isLoading=!1}))},methods:{onCancel(){U("/recruitment/viewJobVacancy")},onSave(){this.isLoading=!0,this.vacancy={name:this.vacancy.name,jobTitleId:this.vacancy.jobTitle.id,employeeId:this.vacancy.hiringManager.id,numOfPositions:this.vacancy.numOfPositions?parseInt(this.vacancy.numOfPositions):null,description:this.vacancy.description,status:this.vacancy.status,isPublished:this.vacancy.isPublished},this.http.update(this.vacancyId,{...this.vacancy}).then((()=>this.$toast.saveSuccess())).then((()=>{U("/recruitment/addJobVacancy/{id}",{id:this.vacancyId})}))},onSaveAttachment(){this.isLoadingAttachment=!0,this.isLoadingTable=!0,this.httpAttachments.create({vacancyId:parseInt(this.vacancyId),attachment:this.vacancyAttachment.newAttachment?this.vacancyAttachment.newAttachment:void 0,comment:this.vacancyAttachment.comment,attachmentType:1}).then((()=>this.$toast.saveSuccess())).then((()=>{this.updateVisibility(),this.resetDataTable(),this.isLoadingAttachment=!1,this.isLoadingTable=!1}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData([e.id])}))},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.attachments[e]?.id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteData(e)}))},async deleteData(e){e instanceof Array&&(this.isLoadingTable=!0,this.httpAttachments.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.resetDataTable(),this.isLoadingTable=!1})))},resetDataTable(){this.checkedItems=[],this.httpAttachments.request({method:"GET",url:`/api/v2/recruitment/vacancies/${this.vacancyId}/attachments`}).then((e=>{const{data:t}=e.data;this.attachments=IP(t)}))},onClickAdd(){this.isEditClicked=!1,this.isAddClicked=!0},onClickEdit(e){this.vacancyAttachment.id=e.id,this.vacancyAttachment.comment=e.comment,this.vacancyAttachment.oldAttachment={id:e.id,filename:e.fileName,fileType:e.fileType,fileSize:e.filefileSize},this.vacancyAttachment.newAttachment=null,this.vacancyAttachment.method="keepCurrent",this.isAddClicked=!1,this.isEditClicked=!0},onUpdateAttachment(){this.isLoadingAttachment=!0,this.isLoadingTable=!0,this.httpAttachments.request({method:"PUT",url:`/api/v2/recruitment/vacancies/${this.vacancyId}/attachments/${this.vacancyAttachment.id}`,data:{vacancyId:parseInt(this.vacancyId),currentAttachment:this.vacancyAttachment.oldAttachment?this.vacancyAttachment.method:void 0,attachment:this.vacancyAttachment.newAttachment?this.vacancyAttachment.newAttachment:void 0,comment:this.vacancyAttachment.comment,attachmentType:1}}).then((()=>this.$toast.saveSuccess())).then((()=>{this.updateVisibility(),this.resetDataTable(),this.isLoadingAttachment=!1,this.isLoadingTable=!1}))},updateVisibility(){this.isAddClicked=!1,this.isEditClicked=!1,this.vacancyAttachment={...EP}},downloadFile(e){if(!e?.id)return;const t="recruitment/viewVacancyAttachment/attachId",o=`${window.appGlobal.baseUrl}/${t}/${e.id}`;window.open(o,"_blank")}}};const LP=(0,r.c)(BP,[["render",$P],["__scopeId","data-v-01351da0"]]);var UP=LP;const AP={class:"orangehrm-background-container"};function PP(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",AP,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.hire_candidate"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}const qP={class:"orangehrm-card-container"};function FP(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",qP,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.title),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,(0,a.mergeProps)({loading:o.loading},e.$attrs),{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.candidate.candidateName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.candidate.candidateName=e),label:e.$t("recruitment.candidate"),readonly:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.candidate.vacancyName,"onUpdate:modelValue":t[1]||(t[1]=e=>n.candidate.vacancyName=e),label:e.$t("recruitment.vacancy"),readonly:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.candidate.hiringManagerName,"onUpdate:modelValue":t[2]||(t[2]=e=>n.candidate.hiringManagerName=e),label:e.$t("recruitment.hiring_manager"),readonly:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:r.recruitmentStatus,"onUpdate:modelValue":t[3]||(t[3]=e=>r.recruitmentStatus=e),label:e.$t("recruitment.current_status"),readonly:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.renderSlot)(e.$slots,"default")])),_:3},16,["loading"])])}const MP={candidateName:"",vacancyName:"",hiringManagerName:"",status:null};var zP={name:"CandidateActionLayout",inheritAttrs:!1,props:{candidateId:{type:Number,required:!0},title:{type:String,required:!0},loading:{type:Boolean,required:!0}},emits:["update:loading"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates"),{$tEmpName:t}=Da();return{http:e,translateEmpName:t}},data(){return{candidate:{...MP},statuses:[{id:1,label:this.$t("recruitment.application_initiated")},{id:2,label:this.$t("recruitment.shortlisted")},{id:3,label:this.$t("leave.rejected")},{id:4,label:this.$t("recruitment.interview_scheduled")},{id:5,label:this.$t("recruitment.interview_passed")},{id:6,label:this.$t("recruitment.interview_failed")},{id:7,label:this.$t("recruitment.job_offered")},{id:8,label:this.$t("recruitment.offer_declined")},{id:9,label:this.$t("recruitment.hired")}]}},computed:{recruitmentStatus(){return this.statuses.find((e=>e.id===this.candidate.status?.id))?.label||null}},beforeMount(){this.$emit("update:loading",!0),this.http.get(this.candidateId).then((e=>{const{data:t}=e.data;this.candidate.status=t.status,this.candidate.candidateName=`${t?.firstName} ${t?.middleName||""} ${t?.lastName}`,t?.vacancy&&(this.candidate.vacancyName=t?.vacancy.name),t?.vacancy?.hiringManager&&(this.candidate.hiringManagerName=this.translateEmpName(t.vacancy.hiringManager,{includeMiddle:!0,excludePastEmpTag:!1}))})).finally((()=>{this.$emit("update:loading",!1)}))}};const jP=(0,r.c)(zP,[["render",FP]]);var RP=jP,OP={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/hire`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const GP=(0,r.c)(OP,[["render",PP]]);var QP=GP;const HP={class:"orangehrm-background-container"};function WP(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",HP,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.mark_interview_failed"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var YP={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0},interviewId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/interviews/${e.interviewId}/fail`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const JP=(0,r.c)(YP,[["render",WP]]);var XP=JP;const KP={class:"orangehrm-background-container"};function ZP(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",KP,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.mark_interview_passed"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var eq={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0},interviewId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/interviews/${e.interviewId}/pass`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const tq=(0,r.c)(eq,[["render",ZP]]);var oq=tq;const aq={class:"orangehrm-background-container"};function lq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("interviewer-autocomplete"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("date-input"),u=(0,a.resolveComponent)("time-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-form-row"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("required-text"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",aq,[(0,a.createVNode)(C,{loading:n.isLoading,"onUpdate:loading":t[4]||(t[4]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.schedule_interview"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.interview.interviewName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.interview.interviewName=e),rules:n.rules.interviewName,label:e.$t("recruitment.interview_title"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.interviewers,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(s,{key:t,modelValue:n.interviewers[t],"onUpdate:modelValue":e=>n.interviewers[t]=e,"show-delete":t>0,rules:n.rules.interviewerName.filter(((e,o)=>0===t||o>0)),"include-employees":"onlyCurrent",required:"",onRemove:e=>r.onRemoveInterviewer(t)},null,8,["modelValue","onUpdate:modelValue","show-delete","rules","onRemove"])))),128)),n.interviewers.length<5?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,"icon-name":"plus","display-type":"text",class:"orangehrm-input-field-bottom-space",label:e.$t("general.add_another"),onClick:r.onAddAnother},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.interview.interviewDate,"onUpdate:modelValue":t[1]||(t[1]=e=>n.interview.interviewDate=e),rules:n.rules.interviewDate,label:e.$t("general.date"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:n.interview.interviewTime,"onUpdate:modelValue":t[2]||(t[2]=e=>n.interview.interviewTime=e),rules:n.rules.interviewTime,label:e.$t("general.time")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-3 --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.interview.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.interview.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(v),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}const nq={class:"orangehrm-recruitment-interviewer-input"};function rq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-icon-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",nq,[(0,a.createVNode)(i,(0,a.mergeProps)({label:o.showDelete?null:e.$t("recruitment.interviewer"),disabled:o.disabled},e.$attrs,{"api-path":"/api/v2/recruitment/interviewers"}),null,16,["label","disabled"]),o.showDelete&&!o.disabled?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,name:"trash-fill",class:"orangehrm-recruitment-delete-icon","with-container":!1,onClick:r.remove},null,8,["onClick"])):(0,a.createCommentVNode)("",!0)])}var iq={name:"InterviewerAutocomplete",components:{"employee-autocomplete":$a},inheritAttrs:!1,props:{showDelete:{type:Boolean,required:!0},includeEmployee:{type:String,default:"currentAndPast"},disabled:{type:Boolean,required:!1,default:!1}},emits:["remove"],methods:{remove(){this.$emit("remove")}}};const dq=(0,r.c)(iq,[["render",rq],["__scopeId","data-v-5b055a39"]]);var sq=dq;const cq={interviewName:null,interviewDate:null,interviewTime:null,note:null};var mq={components:{"candidate-action-layout":RP,"interviewer-autocomplete":sq},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/shedule-interview`),{userDateFormat:o}=R();return{http:t,userDateFormat:o}},data(){return{isLoading:!1,interview:{...cq},interviewers:[null],rules:{interviewName:[Ht,Wt(100)],interviewDate:[Ht,Yt(this.userDateFormat)],interviewTime:[Xt],interviewerName:[Ht,So,e=>this.interviewers.filter((t=>t&&t.id===e?.id)).length<2||this.$t("general.already_exists")],note:[Wt(2e3)]}}},methods:{onAddAnother(){this.interviewers.length<5&&this.interviewers.push(null)},onRemoveInterviewer(e){this.interviewers.splice(e,1)},onSave(){this.isLoading=!0,this.http.create({...this.interview,interviewerEmpNumbers:this.interviewers.map((e=>e?.id)).filter(Number)}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const uq=(0,r.c)(mq,[["render",lq]]);var pq=uq;const hq={class:"orangehrm-background-container"};function gq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hq,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.offer_job"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var vq={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/job/offer`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const fq=(0,r.c)(vq,[["render",gq]]);var yq=fq;const Cq={class:"orangehrm-background-container"};function Vq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Cq,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.decline_offer"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var bq={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/job/decline`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const xq=(0,r.c)(bq,[["render",Vq]]);var wq=xq;const Nq={class:"orangehrm-background-container"};function _q(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Nq,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.reject_candidate"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var kq={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/reject`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const Sq=(0,r.c)(kq,[["render",_q]]);var $q=Sq;const Dq={class:"orangehrm-background-container"};function Eq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Dq,[(0,a.createVNode)(g,{loading:n.isLoading,"onUpdate:loading":t[1]||(t[1]=e=>n.isLoading=e),"candidate-id":o.candidateId,title:e.$t("recruitment.shortlist_candidate"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.note,"onUpdate:modelValue":t[0]||(t[0]=e=>n.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea"},null,8,["modelValue","rules","label","placeholder"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickBack},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}var Tq={components:{"candidate-action-layout":RP},props:{candidateId:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/shortlist`);return{http:t}},data(){return{isLoading:!1,note:null,rules:{note:[Wt(2e3)]}}},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{note:this.note}}).then((()=>this.$toast.updateSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:this.candidateId})}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const Iq=(0,r.c)(Tq,[["render",Eq]]);var Bq=Iq;const Lq={class:"orangehrm-background-container orangehrm-save-candidate-page"},Uq={class:"orangehrm-card-container"};function Aq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("full-name-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("vacancy-dropdown"),h=(0,a.resolveComponent)("oxd-input-field"),g=(0,a.resolveComponent)("file-upload-input"),v=(0,a.resolveComponent)("date-input"),f=(0,a.resolveComponent)("required-text"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Lq,[(0,a.createElementVNode)("div",Uq,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.add_candidate")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(b,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{"first-name":n.candidate.firstName,"onUpdate:firstName":t[0]||(t[0]=e=>n.candidate.firstName=e),"middle-name":n.candidate.middleName,"onUpdate:middleName":t[1]||(t[1]=e=>n.candidate.middleName=e),"last-name":n.candidate.lastName,"onUpdate:lastName":t[2]||(t[2]=e=>n.candidate.lastName=e),label:e.$t("general.full_name"),rules:n.rules,required:""},null,8,["first-name","middle-name","last-name","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.candidate.vacancyId,"onUpdate:modelValue":t[3]||(t[3]=e=>n.candidate.vacancyId=e),"exclude-interviewers":!0,status:!0},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.candidate.email,"onUpdate:modelValue":t[4]||(t[4]=e=>n.candidate.email=e),label:e.$t("general.email"),placeholder:e.$t("general.type_here"),rules:n.rules.email,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.candidate.contactNumber,"onUpdate:modelValue":t[5]||(t[5]=e=>n.candidate.contactNumber=e),label:e.$t("recruitment.contact_number"),placeholder:e.$t("general.type_here"),rules:n.rules.contactNumber},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{newFile:n.resume.newAttachment,"onUpdate:newFile":t[6]||(t[6]=e=>n.resume.newAttachment=e),method:n.resume.method,"onUpdate:method":t[7]||(t[7]=e=>n.resume.method=e),label:e.$t("recruitment.resume"),"button-label":e.$t("general.browse"),file:n.resume.oldAttachment,rules:n.rules.resume,hint:e.$t("general.accept_custom_format_file_up_to_n_mb",{count:r.formattedFileSize}),url:"recruitment/candidateAttachment/attachId"},null,8,["newFile","method","label","button-label","file","rules","hint"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-save-candidate-page-full-width"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.candidate.keywords,"onUpdate:modelValue":t[8]||(t[8]=e=>n.candidate.keywords=e),label:e.$t("recruitment.keywords"),placeholder:`${e.$t("recruitment.enter_comma_seperated_words")}...`,rules:n.rules.keywords},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{modelValue:n.candidate.dateOfApplication,"onUpdate:modelValue":t[9]||(t[9]=e=>n.candidate.dateOfApplication=e),label:e.$t("recruitment.date_of_application"),rules:n.rules.applyDate},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-save-candidate-page-full-width"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.candidate.comment,"onUpdate:modelValue":t[10]||(t[10]=e=>n.candidate.comment=e),label:e.$t("general.notes"),type:"textarea",placeholder:e.$t("general.type_here"),rules:n.rules.notes},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-save-candidate-page-full-width orangehrm-save-candidate-page-grid-checkbox"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.candidate.consentToKeepData,"onUpdate:modelValue":t[11]||(t[11]=e=>n.candidate.consentToKeepData=e),type:"checkbox",label:e.$t("recruitment.consent_to_keep_data")},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(V,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f),(0,a.createVNode)(y,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(C)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}var Pq={name:"SaveCandidate",components:{"submit-button":d,"full-name-input":Np,"vacancy-dropdown":UA,"file-upload-input":Po},props:{maxFileSize:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates"),{userDateFormat:t}=R();return{http:e,userDateFormat:t}},data(){return{isLoading:!1,candidate:{firstName:null,middleName:null,lastName:null,email:null,contactNumber:null,keywords:null,comment:null,dateOfApplication:pe(me(),"yyyy-MM-dd"),consentToKeepData:!1,vacancyId:null},resume:{id:null,oldAttachment:null,newAttachment:null,method:"keepCurrent"},rules:{firstName:[Ht,Wt(30)],lastName:[Ht,Wt(30)],middleName:[Wt(30)],email:[Ht,ho,Wt(50)],contactNumber:[go,Wt(25)],notes:[Wt(250)],keywords:[Wt(250)],resume:[uo(this.maxFileSize),po(this.allowedFileTypes)],applyDate:[Yt(this.userDateFormat),Jt()]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){let e;this.isLoading=!0,this.http.create({...this.candidate,vacancyId:this.candidate.vacancyId?.id}).then((({data:{data:t}})=>{if(e=parseInt(t.id),this.resume.newAttachment)return this.http.request({method:"POST",url:"/api/v2/recruitment/candidate/attachments",data:{candidateId:e,attachment:this.resume.newAttachment}})})).then((()=>this.$toast.saveSuccess())).then((()=>{U("/recruitment/addCandidate/{id}",{id:e})}))},onCancel(){U("/recruitment/viewCandidates")}}};const qq=(0,r.c)(Pq,[["render",Aq],["__scopeId","data-v-235bef90"]]);var Fq=qq;const Mq={class:"orangehrm-candidate-page"},zq=(0,a.createElementVNode)("br",null,null,-1),jq={class:"orangehrm-paper-container"},Rq={key:0,class:"orangehrm-header-container"},Oq={class:"orangehrm-container"},Gq={class:"orangehrm-bottom-container"};function Qq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("jobtitle-dropdown"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("vacancy-dropdown"),c=(0,a.resolveComponent)("hiring-manager-dropdown"),m=(0,a.resolveComponent)("candidate-status-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("candidate-autocomplete"),g=(0,a.resolveComponent)("oxd-input-field"),v=(0,a.resolveComponent)("date-input"),f=(0,a.resolveComponent)("oxd-divider"),y=(0,a.resolveComponent)("oxd-button"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form"),x=(0,a.resolveComponent)("oxd-table-filter"),w=(0,a.resolveComponent)("table-header"),N=(0,a.resolveComponent)("oxd-card-table"),_=(0,a.resolveComponent)("oxd-pagination"),k=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Mq,[(0,a.createVNode)(x,{"filter-title":e.$t("general.candidates")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(b,{onSubmitValid:r.filterItems,onReset:r.onReset},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.jobTitle,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.jobTitle=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.vacancy,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.vacancy=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.hiringManager,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.hiringManager=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.status,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.status=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:l.filters.candidate,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.candidate=e),rules:l.rules.candidate},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:l.filters.keywords,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.keywords=e),label:e.$t("recruitment.keywords"),placeholder:`${e.$t("recruitment.enter_comma_seperated_words")}...`},null,8,["modelValue","label","placeholder"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.fromDate=e),label:e.$t("recruitment.date_of_application"),placeholder:e.$t("general.from"),rules:l.rules.fromDate},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[7]||(t[7]=e=>l.filters.toDate=e),label:" ",placeholder:e.$t("general.to"),rules:l.rules.toDate},null,8,["modelValue","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:l.filters.methodOfApplication,"onUpdate:modelValue":t[8]||(t[8]=e=>l.filters.methodOfApplication=e),label:e.$t("recruitment.method_of_application"),type:"select",options:n.applications},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(f),(0,a.createVNode)(V,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y,{type:"reset","display-type":"ghost",label:e.$t("general.reset")},null,8,["label"]),(0,a.createVNode)(C,{label:e.$t("general.search")},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),zq,(0,a.createElementVNode)("div",jq,[e.$can.create("recruitment_candidates")?((0,a.openBlock)(),(0,a.createElementBlock)("div",Rq,[(0,a.createVNode)(y,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(w,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,"show-divider":e.$can.create("recruitment_candidates"),onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","show-divider","onDelete"]),(0,a.createElementVNode)("div",Oq,[(0,a.createVNode)(N,{selected:n.checkedItems,"onUpdate:selected":t[9]||(t[9]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[10]||(t[10]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",Gq,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(_,{key:0,current:l.currentPage,"onUpdate:current":t[11]||(t[11]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(k,{ref:"deleteDialog"},null,512)])}function Hq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("recruitment.candidate_name"),clear:!1,"create-options":r.loadCandidates},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var Wq={name:"CandidateAutocomplete",props:{params:{type:Object,default:()=>({})}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates");return{http:e}},methods:{async loadCandidates(e){return new Promise((t=>{e.trim()?this.http.getAll({candidateName:e.trim(),...this.params}).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:`${e.firstName} ${e.middleName||""} ${e.lastName}`,_candidate:e}))))})):t([])}))}}};const Yq=(0,r.c)(Wq,[["render",Hq],["__scopeId","data-v-6f64b287"]]);var Jq=Yq;function Xq(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.status"),options:l.options},null,8,["label","options"])}var Kq={name:"CandidateStatusDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates/statuses");return(0,a.onBeforeMount)((()=>{t.getAll().then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.label})))}))})),{options:e}}};const Zq=(0,r.c)(Kq,[["render",Xq]]);var eF=Zq;const tF={jobTitle:null,vacancy:null,hiringManager:null,status:null,keywords:null,application:null,candidate:null,fromDate:null,toDate:null},oF={"vacancy.name":"DEFAULT","candidate.lastName":"DEFAULT","hiringManager.lastName":"DEFAULT","candidate.dateOfApplication":"DESC","candidateVacancy.status":"DEFAULT"};var aF={components:{"vacancy-dropdown":UA,"jobtitle-dropdown":jp,"delete-confirmation":At,"candidate-autocomplete":Jq,"hiring-manager-dropdown":FA,"candidate-status-dropdown":eF},props:{status:{type:Object,required:!1,default:null}},setup(e){const{$t:t}=Be(),{locale:o}=Le(),{jsDateFormat:l,userDateFormat:n}=R(),{$tEmpName:r}=Da(),i=[{id:1,label:t("recruitment.application_initiated")},{id:2,label:t("recruitment.shortlisted")},{id:3,label:t("leave.rejected")},{id:4,label:t("recruitment.interview_scheduled")},{id:5,label:t("recruitment.interview_passed")},{id:6,label:t("recruitment.interview_failed")},{id:7,label:t("recruitment.job_offered")},{id:8,label:t("recruitment.offer_declined")},{id:9,label:t("recruitment.hired")}],d=e=>e.map((e=>({id:e.id,vacancy:!1===e.vacancy?.status?`${e.vacancy?.name} (${t("general.closed")})`:e.vacancy?.name,candidate:`${e.firstName} ${e.middleName||""} ${e.lastName}`,manager:e?.vacancy?.hiringManager?.id?r(e.vacancy.hiringManager,{includeMiddle:!0,excludePastEmpTag:!1}):t("general.deleted"),dateOfApplication:pe(ue(e.dateOfApplication),l,{locale:o}),status:i.find((t=>t.id===e.status?.id))?.label||"",resume:e.hasAttachment,isSelectable:e.deletable}))),s=(0,a.ref)({...tF,...e.status&&{status:e.status}}),c={candidate:[So],fromDate:[Yt(n),vo((()=>s.value.toDate),t("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(n),ro((()=>s.value.fromDate),t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]},{sortDefinition:m,sortField:u,sortOrder:p,onSort:h}=Pt({sortDefinition:oF}),g=(0,a.computed)((()=>({jobTitleId:s.value.jobTitle?.id,vacancyId:s.value.vacancy?.id,hiringManagerId:s.value.hiringManager?.id,keywords:s.value.keywords,candidateId:s.value.candidate?.id,fromDate:s.value.fromDate,toDate:s.value.toDate,status:s.value.status?.id,methodOfApplication:s.value.methodOfApplication?.id,model:"list",sortField:u.value,sortOrder:p.value}))),v=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates"),{showPaginator:f,currentPage:y,total:C,pages:V,pageSize:b,response:x,isLoading:w,execQuery:N}=Dt(v,{query:g,normalizer:d});return h(N),{http:v,showPaginator:f,currentPage:y,isLoading:w,total:C,pages:V,pageSize:b,execQuery:N,items:x,filters:s,sortDefinition:m,rules:c}},data(){return{checkedItems:[],headers:[{name:"vacancy",title:this.$t("recruitment.vacancy"),sortField:"vacancy.name",style:{flex:1}},{name:"candidate",slot:"title",title:this.$t("recruitment.candidate"),sortField:"candidate.lastName",style:{flex:1}},{name:"manager",title:this.$t("recruitment.hiring_manager"),sortField:"hiringManager.lastName",style:{flex:1}},{name:"dateOfApplication",title:this.$t("recruitment.date_of_application"),sortField:"candidate.dateOfApplication",style:{flex:1}},{name:"status",title:this.$t("general.status"),sortField:"candidateVacancy.status",style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer}],applications:[{id:1,label:this.$t("recruitment.manual")},{id:2,label:this.$t("recruitment.online")}]}},methods:{cellRenderer(...[,,,e]){const t={view:{onClick:this.onClickEdit,props:{name:"eye-fill"}}};return e.isSelectable&&(t.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),e.resume&&(t.download={onClick:this.onDownload,props:{name:"download"}}),{props:{header:{cellConfig:t}}}},onClickAdd(){U("/recruitment/addCandidate")},onClickEdit(e){U("/recruitment/addCandidate/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onDownload(e){if(!e?.id)return;const t="recruitment/viewCandidateAttachment/candidateId",o=`${window.appGlobal.baseUrl}/${t}/${e.id}`;window.open(o,"_blank")},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})).catch((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onReset(){this.filters={...tF},this.filterItems()}}};const lF=(0,r.c)(aF,[["render",Qq]]);var nF=lF;function rF(e,t,o,l,n,r){const i=(0,a.resolveComponent)("recruitment-status"),d=(0,a.resolveComponent)("candidate-profile"),s=(0,a.resolveComponent)("history-table");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[n.candidate?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,candidate:n.candidate},null,8,["candidate"])):(0,a.createCommentVNode)("",!0),n.candidate?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,candidate:n.candidate,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,updatable:o.updatable,onUpdate:r.onCandidateUpdate},null,8,["candidate","allowed-file-types","max-file-size","updatable","onUpdate"])):(0,a.createCommentVNode)("",!0),n.candidate?((0,a.openBlock)(),(0,a.createBlock)(s,{key:2,candidate:n.candidate},null,8,["candidate"])):(0,a.createCommentVNode)("",!0)],64)}const iF={class:"orangehrm-card-container"},dF={class:"orangehrm-recruitment"},sF={key:0,class:"orangehrm-recruitment-status"},cF={class:"orangehrm-recruitment-actions"};function mF(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",iF,[(0,a.createVNode)(p,{loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.application_stage")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.name")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.candidateName),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("recruitment.vacancy")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.vacancyName?r.vacancyName:"N/A"),1)])),_:1})])),_:1},8,["label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("recruitment.hiring_manager")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.hiringManagerName?r.hiringManagerName:"N/A"),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",dF,[r.recruitmentStatus?((0,a.openBlock)(),(0,a.createElementBlock)("div",sF,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.status"))+": "+(0,a.toDisplayString)(r.recruitmentStatus),1)])),_:1})])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",cF,[r.hasWorkflow(3)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,label:e.$t("general.reject"),"display-type":"danger",onClick:t[0]||(t[0]=e=>r.doWorkflow(3))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(8)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:1,label:e.$t("recruitment.offer_declined"),"display-type":"danger",onClick:t[1]||(t[1]=e=>r.doWorkflow(8))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(6)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:2,label:e.$t("recruitment.mark_interview_failed"),"display-type":"danger",onClick:t[2]||(t[2]=e=>r.doWorkflow(6))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(2)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:3,label:e.$t("recruitment.shortlist"),"display-type":"success",onClick:t[3]||(t[3]=e=>r.doWorkflow(2))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(4)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:4,label:e.$t("recruitment.schedule_interview"),"display-type":"success",onClick:t[4]||(t[4]=e=>r.doWorkflow(4))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(5)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:5,label:e.$t("recruitment.mark_interview_passed"),"display-type":"success",onClick:t[5]||(t[5]=e=>r.doWorkflow(5))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(7)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:6,label:e.$t("recruitment.offer_job"),"display-type":"success",onClick:t[6]||(t[6]=e=>r.doWorkflow(7))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasWorkflow(9)?((0,a.openBlock)(),(0,a.createBlock)(u,{key:7,label:e.$t("recruitment.hire"),"display-type":"success",onClick:t[7]||(t[7]=e=>r.doWorkflow(9))},null,8,["label"])):(0,a.createCommentVNode)("",!0)])])])),_:1},8,["loading"])])}var uF={name:"RecruitmentStatus",props:{candidate:{type:Object,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates"),{$tEmpName:t}=Da();return{http:e,translateEmpName:t}},data(){return{isLoading:!1,statuses:[{id:1,label:this.$t("recruitment.application_initiated")},{id:2,label:this.$t("recruitment.shortlisted")},{id:3,label:this.$t("leave.rejected")},{id:4,label:this.$t("recruitment.interview_scheduled")},{id:5,label:this.$t("recruitment.interview_passed")},{id:6,label:this.$t("recruitment.interview_failed")},{id:7,label:this.$t("recruitment.job_offered")},{id:8,label:this.$t("recruitment.offer_declined")},{id:9,label:this.$t("recruitment.hired")}],actions:[]}},computed:{recruitmentStatus(){return this.statuses.find((e=>e.id===this.candidate.status?.id))?.label||null},candidateName(){return`${this.candidate.firstName} ${this.candidate?.middleName||""} ${this.candidate.lastName}`},vacancyName(){const{vacancy:e}=this.candidate;return e?!1===e.status?e.name+` (${this.$t("general.closed")})`:e.name:null},hiringManagerName(){return this.candidate.vacancy?.hiringManager?this.translateEmpName(this.candidate.vacancy.hiringManager,{includeMiddle:!0,excludePastEmpTag:!1}):void 0}},watch:{candidate(){this.getAllowedActions()}},beforeMount(){this.getAllowedActions()},methods:{hasWorkflow(e){return this.actions.findIndex((t=>t.id==e))>-1},doWorkflow(e){U("/recruitment/changeCandidateVacancyStatus",{},{candidateId:this.candidate?.id,selectedAction:e})},getAllowedActions(){this.isLoading=!0,this.http.request({method:"GET",url:`/api/v2/recruitment/candidates/${this.candidate?.id}/actions/allowed`}).then((e=>{const{data:t}=e.data;this.actions=[...t]})).finally((()=>{this.isLoading=!1}))}}};const pF=(0,r.c)(uF,[["render",mF],["__scopeId","data-v-762c349e"]]);var hF=pF;const gF={class:"orangehrm-background-container"},vF={class:"orangehrm-card-container"},fF={class:"orangehrm-header-container"};function yF(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-switch-input"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("full-name-input"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("vacancy-dropdown"),g=(0,a.resolveComponent)("oxd-input-field"),v=(0,a.resolveComponent)("file-upload-input"),f=(0,a.resolveComponent)("date-input"),y=(0,a.resolveComponent)("required-text"),C=(0,a.resolveComponent)("submit-button"),V=(0,a.resolveComponent)("oxd-form-actions"),b=(0,a.resolveComponent)("oxd-form"),x=(0,a.resolveComponent)("confirmation-dialog");return(0,a.openBlock)(),(0,a.createElementBlock)("div",gF,[(0,a.createElementVNode)("div",vF,[(0,a.createElementVNode)("div",fF,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.candidate_profile")),1)])),_:1}),!n.isLoading&&o.updatable?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,modelValue:n.editable,"onUpdate:modelValue":t[0]||(t[0]=e=>n.editable=e),"option-label":e.$t("general.edit"),"label-position":"left"},null,8,["modelValue","option-label"])):(0,a.createCommentVNode)("",!0)]),(0,a.withDirectives)((0,a.createVNode)(s,null,null,512),[[a.vShow,!n.isLoading]]),(0,a.createVNode)(b,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{"first-name":n.profile.firstName,"onUpdate:firstName":t[1]||(t[1]=e=>n.profile.firstName=e),"middle-name":n.profile.middleName,"onUpdate:middleName":t[2]||(t[2]=e=>n.profile.middleName=e),"last-name":n.profile.lastName,"onUpdate:lastName":t[3]||(t[3]=e=>n.profile.lastName=e),rules:n.rules,label:e.$t("general.full_name"),disabled:!n.editable,required:""},null,8,["first-name","middle-name","last-name","rules","label","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.vacancy,"onUpdate:modelValue":t[4]||(t[4]=e=>n.vacancy=e),label:e.$t("recruitment.job_vacancy"),readonly:!n.editable,"exclude-interviewers":!0,status:!0},null,8,["modelValue","label","readonly"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.profile.email,"onUpdate:modelValue":t[5]||(t[5]=e=>n.profile.email=e),label:e.$t("general.email"),placeholder:e.$t("general.type_here"),rules:n.rules.email,disabled:!n.editable,required:""},null,8,["modelValue","label","placeholder","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.profile.contactNumber,"onUpdate:modelValue":t[6]||(t[6]=e=>n.profile.contactNumber=e),label:e.$t("recruitment.contact_number"),placeholder:e.$t("general.type_here"),rules:n.rules.contactNumber,disabled:!n.editable},null,8,["modelValue","label","placeholder","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{newFile:n.attachment.newAttachment,"onUpdate:newFile":t[7]||(t[7]=e=>n.attachment.newAttachment=e),method:n.attachment.method,"onUpdate:method":t[8]||(t[8]=e=>n.attachment.method=e),label:e.$t("recruitment.resume"),"button-label":e.$t("general.browse"),file:n.attachment.oldAttachment,rules:n.rules.resume,hint:e.$t("general.accept_custom_format_file_up_to_n_mb",{count:r.formattedFileSize}),disabled:!n.editable,url:r.getResumeUrl},null,8,["newFile","method","label","button-label","file","rules","hint","disabled","url"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-save-candidate-page --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.profile.keywords,"onUpdate:modelValue":t[9]||(t[9]=e=>n.profile.keywords=e),label:e.$t("recruitment.keywords"),placeholder:`${e.$t("recruitment.enter_comma_seperated_words")}...`,rules:n.rules.keywords,disabled:!n.editable},null,8,["modelValue","label","placeholder","rules","disabled"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{modelValue:n.profile.dateOfApplication,"onUpdate:modelValue":t[10]||(t[10]=e=>n.profile.dateOfApplication=e),label:e.$t("recruitment.date_of_application"),rules:n.rules.applicationDate,disabled:!n.editable},null,8,["modelValue","label","rules","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-save-candidate-page --span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.profile.comment,"onUpdate:modelValue":t[11]||(t[11]=e=>n.profile.comment=e),label:e.$t("general.notes"),type:"textarea",placeholder:e.$t("general.type_here"),disabled:!n.editable},null,8,["modelValue","label","placeholder","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-candidate-grid-checkbox"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:n.profile.consentToKeepData,"onUpdate:modelValue":t[12]||(t[12]=e=>n.profile.consentToKeepData=e),type:"checkbox",label:e.$t("recruitment.consent_to_keep_data"),disabled:!n.editable},null,8,["modelValue","label","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.withDirectives)((0,a.createVNode)(s,null,null,512),[[a.vShow,n.editable]]),n.editable?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y),(0,a.createVNode)(C,{label:e.$t("general.save")},null,8,["label"])])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","onSubmitValid"])]),(0,a.createVNode)(x,{ref:"confirmDialog",title:e.$t("general.confirmation_required"),subtitle:e.$t("recruitment.candidate_vacancy_change_message"),"cancel-label":e.$t("general.no_cancel"),"confirm-label":e.$t("leave.yes_confirm"),"confirm-button-type":"secondary"},null,8,["title","subtitle","cancel-label","confirm-label"])])}const CF={firstName:"",middleName:"",lastName:"",email:"",contactNumber:"",comment:"",keywords:"",dateOfApplication:null,consentToKeepData:!1},VF={id:null,oldAttachment:{},newAttachment:null,method:"replaceCurrent"},bF={id:null,label:""};var xF={name:"CandidateProfile",components:{DateInput:Pe,"oxd-switch-input":q.OxdSwitchInput,"full-name-input":Np,"vacancy-dropdown":UA,"file-upload-input":Po,"confirmation-dialog":PU},props:{candidate:{type:Object,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0},updatable:{type:Boolean,required:!1,default:!0}},emits:["update"],setup(){const e=new P(window.appGlobal.baseUrl,"/"),{userDateFormat:t}=R();return{http:e,userDateFormat:t}},data(){return{editable:!1,isLoading:!1,profile:{...CF},vacancy:{...bF},attachment:{...VF},rules:{firstName:[Ht,Wt(30)],lastName:[Ht,Wt(30)],middleName:[Wt(30)],email:[Ht,ho,Wt(50)],contactNumber:[go,Wt(25)],keywords:[Wt(250)],applicationDate:[Yt(this.userDateFormat)],resume:[uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},watch:{candidate(){this.fetchCandidate()}},beforeMount(){this.fetchCandidate()},methods:{onSave(){this.candidate.vacancy?.id&&this.candidate.vacancy?.id!==this.vacancy?.id?this.$refs.confirmDialog.showDialog().then((e=>{"ok"===e&&this.updateCandidate()})):this.updateCandidate()},updateCandidate(){this.isLoading=!0,this.http.request({method:"PUT",url:`/api/v2/recruitment/candidates/${this.candidate.id}`,data:{...this.profile,vacancyId:this.vacancy?.id}}).then((()=>!this.attachment.newAttachment&&!this.candidate.hasAttachment||this.http.request({method:"PUT",url:`/api/v2/recruitment/candidate/${this.candidate.id}/attachment`,data:{currentAttachment:this.attachment.oldAttachment?this.attachment.method:void 0,attachment:this.attachment.newAttachment?this.attachment.newAttachment:void 0}}))).then((()=>this.$toast.updateSuccess())).then((()=>{this.$emit("update"),this.isLoading=!1,this.editable=!1}))},getResumeUrl(){return L("/recruitment/viewCandidateAttachment/candidateId/{candidateId}",{candidateId:this.candidate.id})},fetchCandidate(){this.isLoading=!0,this.profile.firstName=this.candidate.firstName,this.profile.middleName=this.candidate.middleName,this.profile.lastName=this.candidate.lastName,this.profile.email=this.candidate.email,this.profile.contactNumber=this.candidate.contactNumber,this.profile.keywords=this.candidate.keywords,this.profile.dateOfApplication=this.candidate.dateOfApplication,this.profile.comment=this.candidate.comment,this.profile.consentToKeepData=this.candidate.consentToKeepData;const{vacancy:e}=this.candidate;e&&(this.vacancy={id:e.id,label:!1===e.status?e.name+` (${this.$t("general.closed")})`:e.name}),this.candidate.hasAttachment?this.http.request({method:"GET",url:`/api/v2/recruitment/candidate/${this.candidate.id}/attachment`}).then((({data:{data:e}})=>{this.attachment.id=e.id,this.attachment.newAttachment=null,this.attachment.oldAttachment={id:e.id,filename:e.attachment.fileName,fileType:e.attachment.fileType,fileSize:e.attachment.fileSize},this.attachment.method="keepCurrent"})):this.attachment={...VF},this.isLoading=!1}}};const wF=(0,r.c)(xF,[["render",yF],["__scopeId","data-v-4e5b7192"]]);var NF=wF;const _F={class:"orangehrm-paper-container"},kF={class:"orangehrm-header-container"},SF={class:"orangehrm-container"},$F={class:"orangehrm-bottom-container"};function DF(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table"),c=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",_F,[(0,a.createElementVNode)("div",kF,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.candidate_history")),1)])),_:1})]),(0,a.createVNode)(d,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",SF,[(0,a.createVNode)(s,{headers:n.headers,items:l.items?.data,clickable:!1,selectable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["headers","items","loading"])]),(0,a.createElementVNode)("div",$F,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])}const EF=1,TF=2,IF=3,BF=4,LF=5,UF=6,AF=7,PF=8,qF=9,FF=15,MF=16,zF=17;var jF={name:"HistoryTable",props:{candidate:{type:Object,required:!0}},setup(e){const{$t:t}=Be(),{locale:o}=Le(),{jsDateFormat:a}=R(),{$tEmpName:l}=Da(),n=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidate?.id}/history`),r=n=>{const r=`${e.candidate?.firstName} ${e.candidate?.middleName||""} ${e.candidate?.lastName}`;return n.map((e=>{let n=null;const i={name:"",data:"",interviewers:""},d=l(e.performedBy,{includeMiddle:!0,excludePastEmpTag:!1});if(e.interview){i.name=e.interview.name,i.date=e.interview.date;const t=e.interview.interviewers.map((e=>l(e,{includeMiddle:!0,excludePastEmpTag:!1})));i.interviewers=t.join(", ")}switch(e?.action.id){case zF:n=t("recruitment.candidate_applied_for_the_vacancy",{candidate:r,vacancy:e.vacancyName});break;case MF:n=t("recruitment.employee_added_candidate",{employee:d,candidate:r});break;case EF:n=t("recruitment.employee_assigned_vacancy_to_candidate",{employee:d,vacancy:e.vacancyName});break;case TF:n=t("recruitment.candidate_shortlisted_for_vacancy_by_employee",{vacancy:e.vacancyName,employee:d});break;case IF:n=t("recruitment.employee_rejected_the_candidate",{employee:d,candidate:r,vacancy:e.vacancyName});break;case BF:n=t("recruitment.employee_schedule_interview_with_interviewers",{employee:d,interview:i.name,interviewDate:i.date,interviewers:i.interviewers,vacancy:e.vacancyName});break;case LF:n=t("recruitment.employee_marked_interveiw_passed",{employee:d,interview:i.name,vacancy:e.vacancyName});break;case UF:n=t("recruitment.employee_marked_interveiw_failed",{employee:d,interview:i.name,vacancy:e.vacancyName});break;case AF:n=t("recruitment.employee_offered_the_job",{employee:d,vacancy:e.vacancyName});break;case PF:n=t("recruitment.employee_marked_the_offer_declined",{employee:d,vacancy:e.vacancyName});break;case qF:n=t("recruitment.employee_hired_the_candidate",{employee:d,candidate:r,vacancy:e.vacancyName});break;case FF:n=t("recruitment.employee_removed_candidate_from_vacancy",{employee:d,candidate:r,vacancy:e.vacancyName});break}return{...e,description:n,performedDate:pe(ue(e.performedDate),a,{locale:o})}}))},{showPaginator:i,currentPage:d,total:s,pages:c,pageSize:m,response:u,isLoading:p,execQuery:h}=Dt(n,{normalizer:r});return{http:n,showPaginator:i,currentPage:d,isLoading:p,total:s,pages:c,pageSize:m,execQuery:h,items:u}},data(){return{headers:[{name:"performedDate",slot:"title",title:this.$t("recruitment.performed_date"),style:{flex:"20%"}},{name:"description",title:this.$t("general.description"),style:{flex:"65%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:"15%"},cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer}]}},watch:{candidate(){this.execQuery()}},methods:{cellRenderer(...[,,,e]){const t={};return e.action?.id!=EF&&e.action?.id!=MF&&e.action?.id!=FF&&e.action?.id!=zF&&e.editable&&(t.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),e.action?.id!==BF&&e.action?.id!==LF&&e.action?.id!==UF||!e.editable||(t.attachment={onClick:this.onClickAttachment,props:{name:"paperclip"}}),{props:{header:{cellConfig:t}}}},onClickEdit(e){U("/recruitment/candidateHistory/{candidateId}/{historyId}",{candidateId:this.candidate.id,historyId:e.id})},onClickAttachment(e){U("/recruitment/interviewAttachments/{interviewId}",{interviewId:e.interview?.id})}}};const RF=(0,r.c)(jF,[["render",DF],["__scopeId","data-v-3d5611d2"]]);var OF=RF,GF={components:{"history-table":OF,"candidate-profile":NF,"recruitment-status":hF},props:{candidateId:{type:Number,required:!0},maxFileSize:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0},updatable:{type:Boolean,required:!1,default:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/candidates");return{http:e}},data(){return{candidate:null}},beforeMount(){this.onCandidateUpdate()},methods:{onCandidateUpdate(){this.http.get(this.candidateId).then((({data:{data:e}})=>{this.candidate=e}))}}};const QF=(0,r.c)(GF,[["render",rF]]);var HF=QF;const WF={class:"orangehrm-background-container"};function YF(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("interviewer-autocomplete"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("time-input"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("candidate-action-layout");return(0,a.openBlock)(),(0,a.createElementBlock)("div",WF,[(0,a.createVNode)(y,{loading:n.isLoading,"candidate-id":o.candidateId,title:e.$t("recruitment.view_action_history"),onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:e.$t("recruitment.performed_action"),value:r.performedAction,readonly:""},null,8,["label","value"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:e.$t("general.performed_by"),value:r.performedBy,readonly:""},null,8,["label","value"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{label:e.$t("recruitment.performed_date"),value:r.performedDate,readonly:""},null,8,["label","value"])])),_:1})])),_:1})])),_:1}),r.isScheduleInterview?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.interview.interviewName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.interview.interviewName=e),rules:n.rules.interviewName,label:e.$t("recruitment.interview_title"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.interviewers,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(m,{key:t,modelValue:n.interviewers[t],"onUpdate:modelValue":e=>n.interviewers[t]=e,"show-delete":t>0,rules:n.rules.interviewerName.filter(((e,o)=>0===t||o>0)),"include-employees":"onlyCurrent",required:"",disabled:!o.editable,onRemove:e=>r.onRemoveInterviewer(t)},null,8,["modelValue","onUpdate:modelValue","show-delete","rules","disabled","onRemove"])))),128)),n.interviewers.length<5&&o.editable?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"icon-name":"plus","display-type":"text",class:"orangehrm-input-field-bottom-space",label:e.$t("general.add_another"),onClick:r.onAddAnother},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.interview.interviewDate,"onUpdate:modelValue":t[1]||(t[1]=e=>n.interview.interviewDate=e),rules:n.rules.interviewDate,label:e.$t("general.date"),required:""},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.interview.interviewTime,"onUpdate:modelValue":t[2]||(t[2]=e=>n.interview.interviewTime=e),rules:n.rules.interviewTime,label:e.$t("general.time")},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:n.history.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.history.note=e),rules:n.rules.note,label:e.$t("general.notes"),placeholder:e.$t("general.type_here"),type:"textarea",disabled:n.disabled},null,8,["modelValue","rules","label","placeholder","disabled"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.back"),onClick:r.onClickBack},null,8,["label","onClick"]),n.disabled?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createBlock)(v,{key:0,label:e.$t("general.save")},null,8,["label"]))])),_:1})])),_:1},8,["loading","candidate-id","title","onSubmitValid"])])}const JF={id:null,action:{id:null,label:null},performedBy:{empNumber:null,lastName:null,firstName:null,middleName:null,terminationId:null},interview:{id:null},performedDate:null,note:null},XF={interviewName:null,interviewDate:null,interviewTime:null};var KF={components:{"candidate-action-layout":RP,"interviewer-autocomplete":sq},props:{candidateId:{type:Number,required:!0},historyId:{type:Number,required:!0},editable:{type:Boolean,required:!1,default:!0}},setup(e){const{locale:t}=Le(),{jsDateFormat:o,userDateFormat:a}=R(),{$tEmpName:l}=Da(),n=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/candidates/${e.candidateId}/history`);return{http:n,locale:t,jsDateFormat:o,userDateFormat:a,translateEmpName:l}},data(){return{isLoading:!1,history:{...JF},interview:{...XF},interviewers:[],rules:{interviewName:[Ht,Wt(100)],interviewDate:[Ht,Yt(this.userDateFormat)],interviewTime:[Xt],interviewerName:[Ht,So,e=>this.interviewers.filter((t=>t&&t.id===e?.id)).length<2||this.$t("general.already_exists")],note:[Wt(2e3)]},statuses:[{id:1,label:this.$t("recruitment.application_initiated")},{id:2,label:this.$t("recruitment.shortlist")},{id:3,label:this.$t("general.reject")},{id:4,label:this.$t("recruitment.schedule_interview")},{id:5,label:this.$t("recruitment.mark_interview_passed")},{id:6,label:this.$t("recruitment.mark_interview_failed")},{id:7,label:this.$t("recruitment.offer_job")},{id:8,label:this.$t("recruitment.decline_offer")},{id:9,label:this.$t("recruitment.hire")}],disabled:!1}},computed:{performedBy(){return this.translateEmpName(this.history.performedBy,{includeMiddle:!0,excludePastEmpTag:!1})},performedDate(){return pe(ue(this.history.performedDate),this.jsDateFormat,{locale:this.locale})},performedAction(){return this.statuses.find((e=>e.id===this.history.action.id))?.label||null},isScheduleInterview(){return this.history.interview?.id&&4===this.history.action?.id}},beforeMount(){this.isLoading=!0,this.http.get(this.historyId).then((e=>{const{data:t,meta:o}=e.data;return this.history={...t},this.disabled=o.disabled,this.isScheduleInterview?this.http.request({method:"GET",url:`/api/v2/recruitment/candidates/${this.candidateId}/interviews/${this.history.interview.id}`}):null})).then((e=>{if(e){const{data:t}=e.data;this.interview.interviewName=t.name,this.interview.interviewDate=t.interviewDate,this.interview.interviewTime=t.interviewTime,this.history.note=t.note,Array.isArray(t.interviewers)&&(this.interviewers=t.interviewers.map((e=>({id:e.empNumber,label:this.translateEmpName(e,{includeMiddle:!0,excludePastEmpTag:!0}),isPastEmployee:!!e.terminationId}))))}})).finally((()=>{this.isLoading=!1}))},methods:{onAddAnother(){this.interviewers.length<5&&this.interviewers.push(null)},onRemoveInterviewer(e){this.interviewers.splice(e,1)},onSave(){this.loading=!0,this.http.update(this.historyId,{note:this.history.note}).then((()=>this.isScheduleInterview?this.http.request({method:"PUT",url:`/api/v2/recruitment/candidates/${this.candidateId}/interviews/${this.history.interview.id}`,data:{...this.interview,note:this.history.note,interviewerEmpNumbers:this.interviewers.map((e=>e?.id)).filter(Number)}}):null)).then((()=>{this.loading=!1,this.$toast.saveSuccess()}))},onClickBack(){U("/recruitment/addCandidate/{id}",{id:this.candidateId})}}};const ZF=(0,r.c)(KF,[["render",YF]]);var eM=ZF;const tM={class:"orangehrm-container"},oM={key:1,class:"orangehrm-bottom-container"},aM={class:"orangehrm-paper-container"},lM=["src"];function nM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("vacancy-card"),d=(0,a.resolveComponent)("oxd-loading-spinner"),s=(0,a.resolveComponent)("oxd-pagination"),c=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",tM,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.vacancies?.data,(e=>((0,a.openBlock)(),(0,a.createBlock)(i,{key:e,"vacancy-id":e.vacancyId,"vacancy-title":e.vacancyTitle,"vacancy-description":e.vacancyDescription},null,8,["vacancy-id","vacancy-title","vacancy-description"])))),128)),l.isLoading?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"orangehrm-container-loader"})):(0,a.createCommentVNode)("",!0),l.showPaginator?((0,a.openBlock)(),(0,a.createElementBlock)("div",oM,[(0,a.createVNode)(s,{current:l.currentPage,"onUpdate:current":t[0]||(t[0]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])])):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",aM,[(0,a.createVNode)(c,{tag:"p",class:"orangehrm-vacancy-list-poweredby"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.powered_by")),1)])),_:1}),(0,a.createElementVNode)("img",{src:l.defaultPic,alt:"OrangeHRM Picture",class:"orangehrm-container-img"},null,8,lM),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])],64)}const rM={class:"orangehrm-card-container"},iM={class:"orangehrm-vacancy-card-header"},dM={key:0,class:"orangehrm-vacancy-card-pre-tag"},sM={key:0,class:"orangehrm-vacancy-card-footer"};function cM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-divider");return(0,a.openBlock)(),(0,a.createElementBlock)("div",rM,[(0,a.createElementVNode)("div",iM,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.vacancyTitle),1)])),_:1}),(0,a.createVNode)(d,{label:e.$t("general.apply"),"display-type":"secondary",class:"oxd-button",onClick:r.apply},null,8,["label","onClick"])]),(0,a.withDirectives)((0,a.createVNode)(s,null,null,512),[[a.vShow,o.vacancyDescription]]),(0,a.createElementVNode)("div",{class:(0,a.normalizeClass)({"orangehrm-vacancy-card-body":r.isViewDetails})},[(0,a.createVNode)(i,{type:"toast-message"},{default:(0,a.withCtx)((()=>[o.vacancyDescription?((0,a.openBlock)(),(0,a.createElementBlock)("pre",dM,(0,a.toDisplayString)(o.vacancyDescription),1)):(0,a.createCommentVNode)("",!0)])),_:1})],2),o.vacancyDescription&&o.vacancyDescription.length>r.descriptionLength?((0,a.openBlock)(),(0,a.createElementBlock)("div",sM,[(0,a.createElementVNode)("a",{onClick:t[0]||(t[0]=(...e)=>r.viewDetails&&r.viewDetails(...e))},[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-vacancy-card-anchor-tag"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.isViewDetails?e.$t("general.show_more"):e.$t("general.show_less")),1)])),_:1})])])):(0,a.createCommentVNode)("",!0)])}var mM={name:"VacancyCard",props:{vacancyId:{type:Number,required:!0},vacancyTitle:{type:String,required:!0},vacancyDescription:{type:String,required:!0}},setup(){const e=(0,q.useResponsive)();return{...(0,a.toRefs)(e)}},data(){return{viewMore:!1}},computed:{isMobile(){return this.windowWidth<600},isViewDetails(){return!this.viewMore},descriptionLength(){return this.isMobile?150:this.windowWidth<1920?250:400}},methods:{viewDetails(){this.viewMore=!this.viewMore},apply(){U("/recruitmentApply/applyVacancy/id/{id}",{id:this.vacancyId})}}};const uM=(0,r.c)(mM,[["render",cM],["__scopeId","data-v-1000dfc5"]]);var pM=uM,hM={name:"VacancyList",components:{"vacancy-card":pM,"oxd-loading-spinner":q.OxdSpinner},setup(){const e=`${window.appGlobal.publicPath}/images/ohrm_branding.png`,t=e=>e.map((e=>({vacancyId:e.id,vacancyTitle:e.name,vacancyDescription:e.description}))),o=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/public/vacancies"),{showPaginator:a,currentPage:l,total:n,pages:r,response:i,isLoading:d}=Dt(o,{normalizer:t,pageSize:8});return{defaultPic:e,showPaginator:a,currentPage:l,isLoading:d,total:n,pages:r,vacancies:i}}};const gM=(0,r.c)(hM,[["render",nM],["__scopeId","data-v-197ff95e"]]);var vM=gM;const fM={class:"orangehrm-container"},yM={class:"orangehrm-card-container"},CM={class:"orangehrm-card-container-header"},VM=["src"],bM={class:"orangehrm-applicant-card-pre-tag"},xM={key:0,class:"orangehrm-vacancy-card-footer"},wM=["value"],NM=["value"],_M={class:"orangehrm-applicant-container"},kM={class:"orangehrm-paper-container"},SM=["src"];function $M(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("full-name-input"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("success-dialogue");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",fM,[(0,a.createElementVNode)("div",yM,[(0,a.createElementVNode)("div",CM,[(0,a.createVNode)(i,{class:"orangehrm-main-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.apply_for_n_vacancy",{vacancyName:n.vacancyName})),1)])),_:1}),(0,a.createElementVNode)("img",{class:"oxd-brand-banner",src:o.bannerSrc},null,8,VM)]),n.vacancyDescription?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(d),(0,a.createVNode)(i,{class:"orangehrm-vacancy-description",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.description")),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:(0,a.normalizeClass)(r.descriptionClasses)},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("pre",bM,(0,a.toDisplayString)(n.vacancyDescription)+"\n        ",1)])),_:1},8,["class"]),n.vacancyDescription.length>r.descriptionLength?((0,a.openBlock)(),(0,a.createElementBlock)("div",xM,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-vacancy-card-anchor-tag",onClick:r.onToggleMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.isViewDetails?e.$t("general.show_less"):e.$t("general.show_more")),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0)],64)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d),(0,a.createVNode)(y,{ref:"applicantForm",method:"post",enctype:"multipart/form-data",loading:n.isLoading,action:r.submitUrl,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,wM),(0,a.createElementVNode)("input",{name:"vacancyId",value:o.vacancyId,type:"hidden"},null,8,NM),(0,a.createElementVNode)("div",_M,[(0,a.createVNode)(u,{class:"orangehrm-applicant-container-row"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{firstName:l.applicant.firstName,"onUpdate:firstName":t[0]||(t[0]=e=>l.applicant.firstName=e),lastName:l.applicant.lastName,"onUpdate:lastName":t[1]||(t[1]=e=>l.applicant.lastName=e),middleName:l.applicant.middleName,"onUpdate:middleName":t[2]||(t[2]=e=>l.applicant.middleName=e),label:e.$t("general.full_name"),rules:n.rules,required:""},null,8,["firstName","lastName","middleName","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,{class:"orangehrm-applicant-container-row"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-applicant-container-colspan-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.email,"onUpdate:modelValue":t[3]||(t[3]=e=>l.applicant.email=e),name:"email",label:e.$t("general.email"),placeholder:e.$t("general.type_here"),rules:n.rules.email,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.contactNumber,"onUpdate:modelValue":t[4]||(t[4]=e=>l.applicant.contactNumber=e),name:"contactNumber",label:e.$t("recruitment.contact_number"),placeholder:e.$t("general.type_here"),rules:n.rules.contactNumber},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.resume,"onUpdate:modelValue":t[5]||(t[5]=e=>l.applicant.resume=e),name:"resume",type:"file",label:e.$t("recruitment.resume"),"button-label":e.$t("general.browse"),rules:n.rules.resume,required:""},null,8,["modelValue","label","button-label","rules"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accept_custom_format_file_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-applicant-container-colspan-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.keywords,"onUpdate:modelValue":t[6]||(t[6]=e=>l.applicant.keywords=e),name:"keywords",label:e.$t("recruitment.keywords"),placeholder:`${e.$t("recruitment.enter_comma_seperated_words")}...`,rules:n.rules.keywords},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-applicant-container-colspan-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.comment,"onUpdate:modelValue":t[7]||(t[7]=e=>l.applicant.comment=e),name:"comment",label:e.$t("general.notes"),type:"textarea",placeholder:e.$t("general.type_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-applicant-container-colspan-2 orangehrm-applicant-container-grid-checkbox"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.applicant.consentToKeepData,"onUpdate:modelValue":t[8]||(t[8]=e=>l.applicant.consentToKeepData=e),name:"consentToKeepData",label:e.$t("recruitment.consent_to_keep_data"),type:"checkbox"},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{label:e.$t("general.back"),"display-type":"ghost",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v,{label:e.$t("general.submit")},null,8,["label"])])),_:1})])])),_:1},8,["loading","action","onSubmitValid"])])]),(0,a.createElementVNode)("div",kM,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-vacancy-list-poweredby"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.powered_by")),1)])),_:1}),(0,a.createElementVNode)("img",{src:l.defaultPic,alt:"OrangeHRM Picture",class:"orangehrm-container-img"},null,8,SM),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)]),(0,a.createVNode)(C,{ref:"showDialogueModal"},null,512)],64)}const DM={class:"orangehrm-modal-header"},EM={class:"orangehrm-text-center-align"},TM={class:"orangehrm-modal-footer"};function IM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("simple-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"with-close":!1,class:"orangehrm-confirmation-dialog orangehrm-dialog-popup","onUpdate:show":r.onSuccess},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",DM,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.application_received")),1)])),_:1})]),(0,a.createElementVNode)("div",EM,[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("recruitment.your_application_has_been_submitted_successfully")),1)])),_:1})]),(0,a.createElementVNode)("div",TM,[(0,a.createVNode)(d,{label:e.$t("general.ok"),"display-type":"text",class:"orangehrm-button-margin",onClick:r.onSuccess},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var BM={name:"SuccessDialog",components:{"simple-dialog":q.OxdDialog},data(){return{show:!1,resolve:null}},methods:{showSuccessDialog(){return new Promise((e=>{this.resolve=e,this.show=!0}))},onSuccess(){this.show=!1,this.resolve&&this.resolve("ok")}}};const LM=(0,r.c)(BM,[["render",IM],["__scopeId","data-v-4d0f66ee"]]);var UM=LM;const AM={firstName:"",middleName:"",lastName:"",contactNumber:"",email:"",consentToKeepData:!1,resume:null,keywords:null,comment:null};var PM={name:"ApplyJobVacancy",components:{"submit-button":d,"full-name-input":Np,"success-dialogue":UM},props:{allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0},vacancyId:{type:Number,required:!0},success:{type:Boolean,default:!1},bannerSrc:{type:String,required:!0},token:{type:String,required:!0}},setup(){const e=`${window.appGlobal.publicPath}/images/ohrm_branding.png`,t=(0,a.ref)({...AM}),o=(0,q.useResponsive)(),l=new P(window.appGlobal.baseUrl,"/api/v2/recruitment/public/vacancies");return{http:l,applicant:t,defaultPic:e,...(0,a.toRefs)(o)}},data(){return{title:null,subtitle:null,successLabel:null,isLoading:!1,vacancyName:"",vacancyDescription:null,rules:{firstName:[Ht,Wt(30)],middleName:[Wt(30)],lastName:[Ht,Wt(30)],resume:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)],comment:[Wt(250)],keywords:[Wt(250)],contactNumber:[Wt(25),go],email:[Ht,ho,Wt(50)]},isViewDetails:!0}},computed:{submitUrl(){return L("/recruitment/public/applicants")},descriptionClasses(){return{"orangehrm-vacancy-description":!0,"orangehrm-vacancy-card-body":!this.isViewDetails}},isMobile(){return this.windowWidth<600},descriptionLength(){return this.isMobile?150:this.windowWidth<1920?250:400},formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},beforeMount(){this.http.get(this.vacancyId).then((e=>{const{data:t}=e.data;this.vacancyName=t?.name??"",this.vacancyDescription=t?.description}))},mounted(){this.success&&this.showDialogue()},methods:{onSave(){this.$refs.applicantForm.$el.submit()},onCancel(){U("/recruitmentApply/jobs.html")},showDialogue(){this.$refs.showDialogueModal.showSuccessDialog().then((e=>{"ok"===e&&U("/recruitmentApply/jobs.html")}))},onToggleMore(){this.isViewDetails=!this.isViewDetails}}};const qM=(0,r.c)(PM,[["render",$M],["__scopeId","data-v-30ad771e"]]);var FM=qM;const MM={class:"orangehrm-attachment"},zM={class:"orangehrm-attachment-header"},jM={class:"orangehrm-container"},RM={class:"orangehrm-bottom-container"};function OM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("save-interview-attachment"),d=(0,a.resolveComponent)("edit-interview-attachment"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("table-header"),u=(0,a.resolveComponent)("oxd-card-table"),p=(0,a.resolveComponent)("oxd-pagination"),h=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",MM,[n.showSaveModal?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,http:l.http,"max-file-size":o.maxFileSize,"allowed-file-types":o.allowedFileTypes,onClose:r.closeModel},null,8,["http","max-file-size","allowed-file-types","onClose"])):n.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,http:l.http,data:n.editModalState,"max-file-size":o.maxFileSize,"allowed-file-types":o.allowedFileTypes,onClose:r.closeModel},null,8,["http","data","max-file-size","allowed-file-types","onClose"])):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:2},[(0,a.createElementVNode)("div",zM,[(0,a.createVNode)(s,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.attachments")),1)])),_:1}),(0,a.createVNode)(c,{"icon-name":"plus","display-type":"text",label:e.$t("general.add"),onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(m,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",jM,[(0,a.createVNode)(u,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),headers:n.headers,items:l.items?.data,clickable:!1,selectable:!0,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","headers","items","loading"])]),(0,a.createElementVNode)("div",RM,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])],64)),(0,a.createVNode)(h,{ref:"deleteDialog"},null,512)])}const GM={class:"orangehrm-card-container"};function QM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",GM,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected"),required:""},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.comment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const HM={attachment:null,comment:""};var WM={name:"SaveInterviewAttachment",props:{http:{type:Object,required:!0},maxFileSize:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0}},emits:["close"],data(){return{isLoading:!1,attachment:{...HM},rules:{comment:[Wt(200)],attachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.attachment}).then((()=>this.$toast.saveSuccess())).then((()=>{this.attachment={...HM},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const YM=(0,r.c)(WM,[["render",QM]]);var JM=YM;const XM={class:"orangehrm-card-container"};function KM(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",XM,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_attachment")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.current_file")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.currentFile),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.replace_with"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected")},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.comment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.comment},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])}const ZM={attachment:null,comment:""};var ez={name:"EditInterviewAttachment",props:{http:{type:Object,required:!0},data:{type:Object,required:!0},maxFileSize:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0}},emits:["close"],data(){return{isLoading:!1,currentFile:"",attachment:{...ZM},rules:{comment:[Wt(200)],attachment:[uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.currentFile=t.attachment.fileName,this.attachment.comment=t.comment})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{comment:this.attachment.comment,currentAttachment:null!==this.attachment.attachment?"replaceCurrent":"keepCurrent",attachment:null!==this.attachment.attachment?this.attachment.attachment:void 0}).then((()=>this.$toast.updateSuccess())).then((()=>{this.attachment={...ZM},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const tz=(0,r.c)(ez,[["render",KM]]);var oz=tz;const az=e=>e.map((e=>({id:e.id,interviewId:e.interviewId,filename:e.attachment?.fileName,size:Ih(e.attachment?.fileSize||0,2),fileType:e.attachment?.fileType,comment:e.comment})));var lz={components:{"delete-confirmation":At,"save-interview-attachment":JM,"edit-interview-attachment":oz},props:{interviewId:{type:Number,required:!0},maxFileSize:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/recruitment/interviews/${e.interviewId}/attachments`),{showPaginator:o,currentPage:a,total:l,pages:n,pageSize:r,response:i,isLoading:d,execQuery:s}=Dt(t,{normalizer:az,toastNoRecords:!1});return{http:t,showPaginator:o,currentPage:a,isLoading:d,total:l,pages:n,pageSize:r,execQuery:s,items:i}},data(){return{headers:[{name:"filename",slot:"title",title:this.$t("general.file_name"),style:{flex:1}},{name:"size",title:this.$t("general.size"),style:{flex:1}},{name:"fileType",title:this.$t("general.type"),style:{flex:1}},{name:"comment",title:this.$t("general.comment"),style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}},delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},download:{onClick:this.onClickDownload,props:{name:"download"}}}}],checkedItems:[],showSaveModal:!1,showEditModal:!1,editModalState:null}},methods:{onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.items?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showSaveModal=!0,this.showEditModal=!1},onClickEdit(e){this.showSaveModal=!1,this.showEditModal=!0,this.editModalState=e},closeModel(){this.showSaveModal=!1,this.showEditModal=!1,this.resetDataTable()},onClickDownload(e){const t=`${window.appGlobal.baseUrl}/recruitment/viewInterviewAttachment/interview/${this.interviewId}/attachment/${e.id}`;window.open(t,"_blank")}}};const nz=(0,r.c)(lz,[["render",OM],["__scopeId","data-v-26db4dc6"]]);var rz=nz,iz={"view-job-vacancy":OA,"add-job-vacancy":sP,"edit-job-vacancy":UP,"save-candidate":Fq,"view-candidates-list":nF,"view-candidate-profile":HF,"shortlist-action":Bq,"reject-action":$q,"interview-schedule-action":pq,"interview-passed-action":oq,"interview-failed-action":XP,"offer-job-action":yq,"offer-decline-action":wq,"hire-action":QP,"view-action-history":eM,"vacancy-list":vM,"apply-job-vacancy":FM,"view-interview-attachments":rz};const dz={class:"orangehrm-background-container"},sz={class:"orangehrm-paper-container"},cz={class:"orangehrm-header-container"},mz={class:"orangehrm-container"},uz={class:"orangehrm-bottom-container"};function pz(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table"),c=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",dz,[(0,a.createElementVNode)("div",sz,[(0,a.createElementVNode)("div",cz,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.my_performance_trackers")),1)])),_:1})]),(0,a.createVNode)(d,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",mz,[(0,a.createVNode)(s,{order:l.sortDefinition,"onUpdate:order":t[0]||(t[0]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["order","headers","items","loading"])]),(0,a.createElementVNode)("div",uz,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])])}const hz={"performanceTracker.trackerName":"DEFAULT","performanceTracker.addedDate":"DEFAULT","performanceTracker.modifiedDate":"DESC"};var gz={setup(){const{sortDefinition:e,sortField:t,sortOrder:o,onSort:l}=Pt({sortDefinition:hz}),n=(0,a.computed)((()=>({sortField:t.value,sortOrder:o.value}))),r=new P(window.appGlobal.baseUrl,"/api/v2/performance/trackers"),{jsDateFormat:i}=R(),{locale:d}=Le(),s=e=>e.map((e=>({id:e.id,tracker:e.trackerName,addedDate:pe(ue(e.addedDate),i,{locale:d}),modifiedDate:pe(ue(e.modifiedDate),i,{locale:d})}))),{currentPage:c,total:m,showPaginator:u,pages:p,pageSize:h,response:g,execQuery:v,isLoading:f}=Dt(r,{query:n,normalizer:s});return l(v),{http:r,total:m,isLoading:f,items:g,execQuery:v,sortDefinition:e,showPaginator:u,pages:p,pageSize:h,currentPage:c}},data(){return{headers:[{name:"tracker",slot:"title",title:this.$t("performance.tracker"),sortField:"performanceTracker.trackerName",style:{flex:"30%"}},{name:"addedDate",title:this.$t("performance.added_date"),sortField:"performanceTracker.addedDate",style:{flex:1}},{name:"modifiedDate",title:this.$t("performance.modified_date"),sortField:"performanceTracker.modifiedDate",style:{flex:1}},{name:"action",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{name:"view",label:this.$t("general.view"),displayType:"text"}}}}]}},methods:{onClickView(e){U("/performance/addPerformanceTrackerLog/trackId/{id}?mode=my",{id:e.id})}}};const vz=(0,r.c)(gz,[["render",pz]]);var fz=vz;const yz={class:"orangehrm-background-container"},Cz=(0,a.createElementVNode)("br",null,null,-1),Vz={class:"orangehrm-paper-container"},bz={class:"orangehrm-container"},xz={class:"orangehrm-bottom-container"};function wz(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("include-employee-dropdown"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("table-header"),y=(0,a.resolveComponent)("oxd-card-table"),C=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yz,[(0,a.createVNode)(v,{"filter-title":e.$t("performance.employee_performance_trackers")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:r.filterItems,onReset:r.resetDataTable},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.empName,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.empName=e),rules:n.rules.employee,"api-path":"/api/v2/performance/trackers/reviewers",params:{includeEmployees:l.filters.includeEmployees.param}},null,8,["modelValue","rules","params"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.includeEmployees,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.includeEmployees=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),Cz,(0,a.createElementVNode)("div",Vz,[(0,a.createVNode)(f,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",bz,[(0,a.createVNode)(y,{order:l.sortDefinition,"onUpdate:order":t[2]||(t[2]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!1,clickable:!0,loading:l.isLoading,class:"orangehrm-employee-list","row-decorator":"oxd-table-decorator-card"},null,8,["order","headers","items","loading"])]),(0,a.createElementVNode)("div",xz,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(C,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])])}const Nz={"employee.lastName":"DEFAULT","tracker.trackerName":"DEFAULT","tracker.modifiedDate":"DESC","tracker.addedDate":"DEFAULT"};var _z={components:{"include-employee-dropdown":eh,"employee-autocomplete":$a},setup(){const{$t:e}=Be(),{jsDateFormat:t}=R(),{locale:o}=Le(),l=a=>a.map((a=>({id:a.id,title:a.title,empName:`${a.employee?.firstName} ${a.employee?.lastName} ${a.employee?.terminationId?` ${e("general.past_employee")}`:""}`,modifiedDate:pe(ue(a.modifiedDate),t,{locale:o}),addedDate:pe(ue(a.addedDate),t,{locale:o})}))),n={empName:null,includeEmployees:{id:1,param:"onlyCurrent",label:e("general.current_employees_only")}},r=(0,a.ref)({...n}),{sortDefinition:i,sortField:d,sortOrder:s,onSort:c}=Pt({sortDefinition:Nz}),m=(0,a.computed)((()=>({sortField:d.value,sortOrder:s.value,empNumber:r.value.empName?.id,includeEmployees:r.value.includeEmployees?.param}))),u="/api/v2/performance/employees/trackers",p=new P(window.appGlobal.baseUrl,u),{showPaginator:h,currentPage:g,total:v,pages:f,pageSize:y,isLoading:C,response:V,execQuery:b}=Dt(p,{query:m,normalizer:l});return c(b),{total:v,showPaginator:h,currentPage:g,pages:f,pageSize:y,isLoading:C,items:V,api:u,http:p,execQuery:b,sortDefinition:i,filters:r}},data(){return{headers:[{name:"empName",slot:"title",title:this.$t("general.employee_name"),sortField:"employee.lastName",style:{flex:2}},{name:"title",title:this.$t("general.trackers"),sortField:"tracker.trackerName",style:{flex:2}},{name:"addedDate",title:this.$t("performance.added_date"),sortField:"tracker.addedDate",style:{flex:1}},{name:"modifiedDate",title:this.$t("performance.modified_date"),sortField:"tracker.modifiedDate",style:{flex:1}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{name:"view",label:this.$t("general.view"),class:"orangehrm-left-space",displayType:"text"}}}}],rules:{employee:[Wt(100),So]}}},methods:{async resetDataTable(){await this.execQuery()},async filterItems(){await this.execQuery()},onClickView(e){U("/performance/addPerformanceTrackerLog/trackId/{id}",{id:e.id})}}};const kz=(0,r.c)(_z,[["render",wz]]);var Sz=kz;const $z=e=>((0,a.pushScopeId)("data-v-01534bf8"),e=e(),(0,a.popScopeId)(),e),Dz={class:"orangehrm-background-container"},Ez={class:"orangehrm-card-container"},Tz={class:"orangehrm-module-field-row"},Iz=$z((()=>(0,a.createElementVNode)("br",null,null,-1)));function Bz(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("jobtitle-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Dz,[(0,a.createElementVNode)("div",Ez,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.edit_key_performance_indicator")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.title,"onUpdate:modelValue":t[0]||(t[0]=e=>n.kpi.title=e),label:e.$t("performance.key_performance_indicator"),required:"",rules:n.rules.title,autcomplete:"off",readonly:n.isReadOnly},null,8,["modelValue","label","rules","readonly"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.kpi.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.kpi.jobTitle=e),required:"",rules:n.rules.jobTitle},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.minRating,"onUpdate:modelValue":t[2]||(t[2]=e=>n.kpi.minRating=e),modelModifiers:{number:!0},label:e.$t("performance.minimum_rating"),required:"",autcomplete:"off",rules:n.rules.minRating,readonly:n.isReadOnly},null,8,["modelValue","label","rules","readonly"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.maxRating,"onUpdate:modelValue":t[3]||(t[3]=e=>n.kpi.maxRating=e),modelModifiers:{number:!0},label:e.$t("performance.maximum_rating"),required:"",autcomplete:"off",rules:n.rules.maxRating,readonly:n.isReadOnly},null,8,["modelValue","label","rules","readonly"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",Tz,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.make_default_scale")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.kpi.isDefault,"onUpdate:modelValue":t[4]||(t[4]=e=>n.kpi.isDefault=e)},null,8,["modelValue"])])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),Iz,(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Lz={title:"",jobTitle:null,minRating:null,maxRating:null,isDefault:!1};var Uz={name:"KpiSave",components:{"oxd-switch-input":q.OxdSwitchInput,"jobtitle-dropdown":jp},props:{kpiId:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/kpis");return{http:e}},data(){return{isLoading:!1,kpi:{...Lz},isReadOnly:!1,rules:{title:[Ht,Wt(100)],jobTitle:[Ht],minRating:[Ht,xo(0,100),bo((()=>this.kpi.maxRating),this.$t("performance.minimum_rating_should_be_less_than_maximum_rating"))],maxRating:[Ht,xo(0,100),Vo((()=>this.kpi.minRating),this.$t("performance.maximum_rating_should_be_greater_than_minimum_rating"))]}}},created(){this.isLoading=!0,this.http.get(this.kpiId).then((e=>{const{data:t}=e.data,{meta:o}=e.data;this.isReadOnly=!1===o.editable,this.kpi.title=t.title,this.kpi.jobTitle=t.jobTitle.deleted?null:{id:t.jobTitle.id,label:t.jobTitle.name},this.kpi.minRating=t.minRating,this.kpi.maxRating=t.maxRating,this.kpi.isDefault=t.isDefault})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/performance/searchKpi")},onSave(){this.isLoading=!0,this.http.update(this.kpiId,{title:this.kpi.title,jobTitleId:this.kpi.jobTitle.id,minRating:this.kpi.minRating,maxRating:this.kpi.maxRating,isDefault:this.kpi.isDefault}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const Az=(0,r.c)(Uz,[["render",Bz],["__scopeId","data-v-01534bf8"]]);var Pz=Az;const qz=e=>((0,a.pushScopeId)("data-v-2dfcf081"),e=e(),(0,a.popScopeId)(),e),Fz={class:"orangehrm-background-container"},Mz={class:"orangehrm-card-container"},zz={class:"orangehrm-module-field-row"},jz=qz((()=>(0,a.createElementVNode)("br",null,null,-1)));function Rz(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("jobtitle-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("oxd-switch-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Fz,[(0,a.createElementVNode)("div",Mz,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.add_key_performance_indicator")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.title,"onUpdate:modelValue":t[0]||(t[0]=e=>n.kpi.title=e),label:e.$t("performance.key_performance_indicator"),required:"",rules:n.rules.title,autcomplete:"off"},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.kpi.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>n.kpi.jobTitle=e),required:"",rules:n.rules.jobTitle},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.minRating,"onUpdate:modelValue":t[2]||(t[2]=e=>n.kpi.minRating=e),modelModifiers:{number:!0},label:e.$t("performance.minimum_rating"),required:"",autcomplete:"off",rules:n.rules.minRating},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.kpi.maxRating,"onUpdate:modelValue":t[3]||(t[3]=e=>n.kpi.maxRating=e),modelModifiers:{number:!0},label:e.$t("performance.maximum_rating"),required:"",autcomplete:"off",rules:n.rules.maxRating},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",zz,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-module-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.make_default_scale")),1)])),_:1}),(0,a.createVNode)(h,{modelValue:n.kpi.isDefault,"onUpdate:modelValue":t[4]||(t[4]=e=>n.kpi.isDefault=e)},null,8,["modelValue"])])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),jz,(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Oz={title:"",jobTitle:null,minRating:null,maxRating:null,isDefault:!1};var Gz={name:"KpiSave",components:{"oxd-switch-input":q.OxdSwitchInput,"jobtitle-dropdown":jp},props:{defaultMinRating:{type:Number,required:!1,default:null},defaultMaxRating:{type:Number,required:!1,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/kpis");return{http:e}},data(){return{isLoading:!1,kpi:{...Oz},rules:{title:[Ht,Wt(100)],jobTitle:[Ht],minRating:[Ht,xo(0,100),bo((()=>this.kpi.maxRating),this.$t("performance.minimum_rating_should_be_less_than_maximum_rating"))],maxRating:[Ht,xo(0,100),Vo((()=>this.kpi.minRating),this.$t("performance.maximum_rating_should_be_greater_than_minimum_rating"))]}}},beforeMount(){this.kpi.minRating=this.defaultMinRating,this.kpi.maxRating=this.defaultMaxRating},methods:{onCancel(){U("/performance/searchKpi")},onSave(){this.isLoading=!0,this.http.create({title:this.kpi.title,jobTitleId:this.kpi.jobTitle.id,minRating:this.kpi.minRating,maxRating:this.kpi.maxRating,isDefault:this.kpi.isDefault}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const Qz=(0,r.c)(Gz,[["render",Rz],["__scopeId","data-v-2dfcf081"]]);var Hz=Qz;const Wz={class:"orangehrm-background-container"},Yz=(0,a.createElementVNode)("br",null,null,-1),Jz={class:"orangehrm-paper-container"},Xz={class:"orangehrm-header-container"},Kz={class:"orangehrm-container"},Zz={class:"orangehrm-bottom-container"};function ej(e,t,o,l,n,r){const i=(0,a.resolveComponent)("jobtitle-dropdown"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-table-filter"),v=(0,a.resolveComponent)("table-header"),f=(0,a.resolveComponent)("oxd-card-table"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Wz,[(0,a.createVNode)(g,{"filter-title":e.$t("performance.key_performance_indicators_for_job_title")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{onSubmitValid:r.filterItems,onReset:r.resetDataTable},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.jobTitleId,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.jobTitleId=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),Yz,(0,a.createElementVNode)("div",Jz,[(0,a.createElementVNode)("div",Xz,[(0,a.createVNode)(u,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(v,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",Kz,[(0,a.createVNode)(f,{selected:n.checkedItems,"onUpdate:selected":t[1]||(t[1]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[2]||(t[2]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",Zz,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(C,{ref:"deleteDialog"},null,512)])}const tj={jobTitleId:null},oj={"kpi.title":"ASC","jobTitle.jobTitleName":"DEFAULT"};var aj={name:"KpiSearch",components:{"delete-confirmation":At,"jobtitle-dropdown":jp},setup(){const{$t:e}=Be(),t=t=>t.map((t=>({id:t.id,title:t.title,jobTitleName:t.jobTitle.name,jobTitleId:t.jobTitle.id,minRating:t.minRating,maxRating:t.maxRating,isDefault:t.isDefault?e("general.yes"):"",isDeletable:t.deletable}))),o=(0,a.ref)({...tj}),{sortDefinition:l,sortField:n,sortOrder:r,onSort:i}=Pt({sortDefinition:oj}),d=(0,a.computed)((()=>({sortField:n.value,sortOrder:r.value,jobTitleId:o.value.jobTitleId?.id}))),s=new P(window.appGlobal.baseUrl,"/api/v2/performance/kpis"),{showPaginator:c,currentPage:m,total:u,pages:p,pageSize:h,response:g,isLoading:v,execQuery:f}=Dt(s,{query:d,normalizer:t});return i(f),{http:s,showPaginator:c,currentPage:m,total:u,pages:p,pageSize:h,items:g,isLoading:v,execQuery:f,filters:o,sortDefinition:l}},data(){return{headers:[{name:"title",title:this.$t("performance.key_performance_indicator"),slot:"title",sortField:"kpi.title",style:{flex:"30%"}},{name:"jobTitleName",title:this.$t("general.job_title"),sortField:"jobTitle.jobTitleName",style:{flex:"30%"}},{name:"minRating",title:this.$t("performance.min_rate"),style:{flex:"10%"}},{name:"maxRating",title:this.$t("performance.max_rate"),style:{flex:"10%"}},{name:"isDefault",title:this.$t("performance.is_default"),style:{flex:"10%"}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:"10%"},cellType:"oxd-table-cell-actions",cellRenderer:this.cellRenderer}],checkedItems:[]}},methods:{cellRenderer(...[,,,e]){const t={};return t.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}},e.isDeletable&&(t.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),{props:{header:{cellConfig:t}}}},onClickAdd(){U("/performance/saveKpi")},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onClickEdit(e){U("/performance/saveKpi/{id}",{id:e.id})},async filterItems(){await this.execQuery()},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const lj=(0,r.c)(aj,[["render",ej]]);var nj=lj;const rj={class:"orangehrm-background-container"},ij={class:"orangehrm-card-container"},dj={class:"orangehrm-button-row"};function sj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("supervisor-autocomplete"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",rj,[(0,a.createElementVNode)("div",ij,[(0,a.createVNode)(i,{class:"orangehrm-main-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.add_review")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{ref:"formRef",loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.review.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.review.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.review.supervisorReviewer,"onUpdate:modelValue":t[1]||(t[1]=e=>n.review.supervisorReviewer=e),rules:n.rules.supervisorReviewer,subordinate:n.review.employee,required:""},null,8,["modelValue","rules","subordinate"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.startDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.review.startDate=e),label:e.$t("performance.review_period_start_date"),rules:n.rules.startDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.endDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.review.endDate=e),label:e.$t("performance.review_period_end_date"),rules:n.rules.endDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.dueDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.review.dueDate=e),label:e.$t("performance.due_date"),rules:n.rules.dueDate,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createElementVNode)("div",dj,[(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),type:"button",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.save"),type:"submit",onClick:t[5]||(t[5]=e=>r.onSave(!1))},null,8,["label"]),(0,a.createVNode)(v,{"display-type":"secondary",label:e.$t("performance.activate"),type:"button",onClick:t[6]||(t[6]=e=>r.onSave(!0))},null,8,["label"])])])),_:1})])),_:1},8,["loading"])])])}function cj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete");return(0,a.openBlock)(),(0,a.createBlock)(i,{label:e.$t("performance.supervisor_reviewer"),clear:!1,"create-options":r.loadEmployees,required:""},null,8,["label","create-options"])}var mj={name:"SupervisorAutoComplete",components:{"employee-autocomplete":$a},props:{subordinate:{type:Object,required:!1,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/supervisors");return{http:e}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()&&this.subordinate?this.http.getAll({nameOrId:e.trim(),empNumber:this.subordinate.id}).then((({data:e})=>{t(e.data.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const uj=(0,r.c)(mj,[["render",cj]]);var pj=uj;const hj={employee:null,supervisorReviewer:null,startDate:null,endDate:null,dueDate:null};var gj={components:{"employee-autocomplete":$a,"supervisor-autocomplete":pj},setup(){const{formRef:e,invalid:t,validate:o}=qc(),{userDateFormat:a}=R(),l=new P(window.appGlobal.baseUrl,"/api/v2/performance/manage/reviews");return l.setIgnorePath("/api/v2/performance/manage/reviews"),{formRef:e,invalid:t,validate:o,http:l,userDateFormat:a}},data(){return{isLoading:!1,review:{...hj},rules:{employee:[Ht,So],supervisorReviewer:[Ht,So],startDate:[Ht,Yt(this.userDateFormat),vo((()=>this.review.endDate),this.$t("performance.review_period_start_date_should_be_before_end_date"))],endDate:[Ht,Yt(this.userDateFormat),ro((()=>this.review.startDate),this.$t("performance.review_period_end_date_should_be_after_start_date"))],dueDate:[Ht,Yt(),ro((()=>this.review.endDate),this.$t("performance.due_date_should_be_after_review_period_end_date"))]}}},methods:{onCancel(){U("/performance/searchPerformanceReview")},onSave(e=!1){this.validate().then((()=>{!0!==this.invalid&&(this.isLoading=!0,this.http.create({empNumber:this.review.employee.id,reviewerEmpNumber:this.review.supervisorReviewer.id,startDate:this.review.startDate,endDate:this.review.endDate,dueDate:this.review.dueDate,activate:e}).then((()=>!0===e?this.$toast.success({title:this.$t("general.success"),message:this.$t("general.successfully_activated")}):this.$toast.updateSuccess())).then((()=>{this.onCancel()})).catch((e=>this.$toast.warn({title:this.$t("general.warning"),message:e?.data.error.message}))).finally((()=>{this.isLoading=!1})))}))}}};const vj=(0,r.c)(gj,[["render",sj],["__scopeId","data-v-4dbd5a02"]]);var fj=vj;const yj={class:"orangehrm-background-container"},Cj={class:"orangehrm-card-container"},Vj={class:"orangehrm-button-row"};function bj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("supervisor-autocomplete"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",yj,[(0,a.createElementVNode)("div",Cj,[(0,a.createVNode)(i,{class:"orangehrm-main-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.edit_review")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{ref:"formRef",loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.review.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>n.review.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.review.supervisorReviewer,"onUpdate:modelValue":t[1]||(t[1]=e=>n.review.supervisorReviewer=e),rules:n.rules.supervisorReviewer,required:"",subordinate:n.review.employee},null,8,["modelValue","rules","subordinate"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.startDate,"onUpdate:modelValue":t[2]||(t[2]=e=>n.review.startDate=e),label:e.$t("performance.review_period_start_date"),rules:n.rules.startDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.endDate,"onUpdate:modelValue":t[3]||(t[3]=e=>n.review.endDate=e),label:e.$t("performance.review_period_end_date"),rules:n.rules.endDate,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.review.dueDate,"onUpdate:modelValue":t[4]||(t[4]=e=>n.review.dueDate=e),label:e.$t("performance.due_date"),rules:n.rules.dueDate,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createElementVNode)("div",Vj,[(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),type:"button",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.save"),type:"submit",onClick:t[5]||(t[5]=e=>r.onSave(!1))},null,8,["label"]),(0,a.createVNode)(v,{"display-type":"secondary",label:e.$t("performance.activate"),type:"button",onClick:t[6]||(t[6]=e=>r.onSave(!0))},null,8,["label"])])])),_:1})])),_:1},8,["loading"])])])}const xj={employee:null,supervisorReviewer:null,startDate:null,endDate:null,dueDate:null};var wj={components:{"employee-autocomplete":$a,"supervisor-autocomplete":pj},props:{reviewId:{type:Number,required:!0}},setup(){const{formRef:e,invalid:t,validate:o}=qc(),{userDateFormat:a}=R(),l=new P(window.appGlobal.baseUrl,"/api/v2/performance/manage/reviews");return l.setIgnorePath("/api/v2/performance/manage/reviews/[0-9]+"),{formRef:e,invalid:t,validate:o,http:l,userDateFormat:a}},data(){return{isLoading:!1,review:{...xj},rules:{employee:[Ht,So],supervisorReviewer:[Ht,So],startDate:[Ht,Yt(this.userDateFormat),vo((()=>this.review.endDate),this.$t("general.review_period_start_date_should_be_before_end_date"))],endDate:[Ht,Yt(this.userDateFormat),ro((()=>this.review.startDate),this.$t("performance.review_period_end_date_should_be_after_start_date"))],dueDate:[Ht,Yt(),ro((()=>this.review.endDate),this.$t("performance.due_date_should_be_after_review_period_end_date"))]}}},created(){this.isLoading=!0,this.http.get(this.reviewId).then((e=>{const{data:t}=e.data;this.review.employee=t.employee?{id:t.employee.empNumber,label:`${t.employee.firstName} ${t.employee.middleName?t.employee.middleName:""} ${t.employee.lastName}`,isPastEmployee:!!t.employee.terminationId}:null,this.review.supervisorReviewer=t.reviewer.employee?{id:t.reviewer.employee.empNumber,label:`${t.reviewer.employee.firstName} ${t.reviewer.employee.middleName?t.reviewer.employee.middleName:""} ${t.reviewer.employee.lastName}`,isPastEmployee:!!t.reviewer.employee.terminationId}:null,this.review.startDate=t.reviewPeriodStart,this.review.endDate=t.reviewPeriodEnd,this.review.dueDate=t.dueDate})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/performance/searchPerformanceReview")},onSave(e=!1){this.validate().then((()=>{if(!0!==this.invalid){if(this.review.supervisorReviewer.isPastEmployee)return this.$toast.warn({title:this.$t("general.warning"),message:this.$t("performance.cannot_add_a_past_employee_as_a_reviewer")});this.isLoading=!0,this.http.update(this.reviewId,{empNumber:this.review.employee.id,reviewerEmpNumber:this.review.supervisorReviewer.id,startDate:this.review.startDate,endDate:this.review.endDate,dueDate:this.review.dueDate,activate:e}).then((()=>!0===e?this.$toast.success({title:this.$t("general.success"),message:this.$t("general.successfully_activated")}):this.$toast.updateSuccess())).then((()=>{this.onCancel()})).catch((e=>this.$toast.warn({title:this.$t("general.warning"),message:e?.data.error.message}))).finally((()=>{this.isLoading=!1}))}}))}}};const Nj=(0,r.c)(wj,[["render",bj],["__scopeId","data-v-f6d889a2"]]);var _j=Nj;const kj={class:"orangehrm-background-container"},Sj=(0,a.createElementVNode)("br",null,null,-1),$j={class:"orangehrm-paper-container"},Dj={class:"orangehrm-header-container"},Ej={class:"orangehrm-container"},Tj={class:"orangehrm-bottom-container"};function Ij(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-table-filter"),v=(0,a.resolveComponent)("table-header"),f=(0,a.resolveComponent)("oxd-card-table"),y=(0,a.resolveComponent)("oxd-pagination"),C=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",kj,[(0,a.createVNode)(g,{"filter-title":e.$t("performance.performance_trackers")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.empNumber,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.empNumber=e),rules:n.rules.employee,params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(u,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),Sj,(0,a.createElementVNode)("div",$j,[(0,a.createElementVNode)("div",Dj,[(0,a.createVNode)(u,{"display-type":"secondary","icon-name":"plus",label:e.$t("general.add"),onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(v,{loading:l.isLoading,selected:n.checkedItems.length,total:l.total,onDelete:r.onClickDeleteSelected},null,8,["loading","selected","total","onDelete"]),(0,a.createElementVNode)("div",Ej,[(0,a.createVNode)(f,{order:l.sortDefinition,"onUpdate:order":t[1]||(t[1]=e=>l.sortDefinition=e),selected:n.checkedItems,"onUpdate:selected":t[2]||(t[2]=e=>n.checkedItems=e),clickable:!1,headers:n.headers,items:l.response?.data,loading:l.isLoading,selectable:!0,"row-decorator":"oxd-table-decorator-card"},null,8,["order","selected","headers","items","loading"])]),(0,a.createElementVNode)("div",Tj,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,current:l.currentPage,"onUpdate:current":t[3]||(t[3]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(C,{ref:"deleteDialog"},null,512)])}const Bj={empNumber:null},Lj={"performanceTracker.modifiedDate":"DESC","employee.lastName":"ASC","performanceTracker.trackerName":"ASC","performanceTracker.addedDate":"DESC"};var Uj={name:"TrackerList",components:{"delete-confirmation":At,"employee-autocomplete":$a},props:{unselectableIds:{type:Array,default:()=>[]}},setup(){const{locale:e}=Le(),{jsDateFormat:t}=R(),{$tEmpName:o}=Da(),l=a=>a.map((a=>({id:a.id,tracker:a.trackerName,addDate:pe(ue(a.addedDate),t,{locale:e}),modifiedDate:pe(ue(a.modifiedDate),t,{locale:e}),empName:o(a.employee,{includeMiddle:!1,excludePastEmpTag:!1})}))),n=new P(window.appGlobal.baseUrl,"/api/v2/performance/config/trackers"),r=(0,a.ref)({...Bj}),{sortDefinition:i,sortField:d,sortOrder:s,onSort:c}=Pt({sortDefinition:Lj}),m=(0,a.computed)((()=>({empNumber:r.value.empNumber?.id,sortField:d.value,sortOrder:s.value,includeEmployees:r.value.includeEmployees?.param}))),{showPaginator:u,currentPage:p,total:h,response:g,pages:v,isLoading:f,execQuery:y}=Dt(n,{query:m,normalizer:l,prefetch:!0,toastNoRecords:!0});return c(y),{http:n,total:h,isLoading:f,showPaginator:u,currentPage:p,pages:v,response:g,execQuery:y,sortDefinition:i,filters:r}},data(){return{headers:[{name:"empName",title:this.$t("general.employee"),slot:"title",sortField:"employee.lastName",style:{flex:1}},{name:"tracker",title:this.$t("performance.tracker"),style:{flex:1},sortField:"performanceTracker.trackerName"},{name:"addDate",title:this.$t("performance.added_date"),sortField:"performanceTracker.addedDate",style:{flex:1}},{name:"modifiedDate",title:this.$t("performance.modified_date"),sortField:"performanceTracker.modifiedDate",style:{flex:1}},{name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],rules:{employee:[Wt(100),So]}}},methods:{onClickAdd(){U("/performance/addPerformanceTracker")},onClickEdit(e){U("/performance/addPerformanceTracker/{id}",{id:e.id})},onClickDeleteSelected(){const e=this.checkedItems.map((e=>this.response?.data[e].id));this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){const t=this.unselectableIds.findIndex((t=>t==e.id));if(t>-1)return this.$toast.cannotDelete();this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...Bj},this.filterItems()}}};const Aj=(0,r.c)(Uj,[["render",Ij]]);var Pj=Aj;const qj={class:"orangehrm-background-container"},Fj={class:"orangehrm-card-container"};function Mj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("employee-autocomplete"),h=(0,a.resolveComponent)("reviewer-autocomplete"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",qj,[(0,a.createElementVNode)("div",Fj,[(0,a.createVNode)(i,{class:"orangehrm-main-title",tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.add_performance_tracker")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.tracker.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.tracker.name=e),rules:n.rules.tracker,label:e.$t("performance.tracker_name"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.tracker.employee,"onUpdate:modelValue":t[1]||(t[1]=e=>n.tracker.employee=e),rules:n.rules.employee,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.tracker.reviewers,"onUpdate:modelValue":t[2]||(t[2]=e=>n.tracker.reviewers=e),rules:n.rules.reviewers,"exclude-employee":n.tracker.employee,required:""},null,8,["modelValue","rules","exclude-employee"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),type:"button",onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function zj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete");return(0,a.openBlock)(),(0,a.createBlock)(i,{label:e.$t("performance.reviewers"),multiple:!0,clear:!1,"create-options":r.loadEmployees,required:""},null,8,["label","create-options"])}var jj={name:"ReviewersAutoComplete",components:{"employee-autocomplete":$a},props:{includeEmployees:{type:String,default:"onlyCurrent"},excludeEmployee:{type:Object,required:!1,default:null}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/trackers/reviewers");return{http:e}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()?this.http.getAll({nameOrId:e.trim(),empNumber:null==this.excludeEmployee?null:this.excludeEmployee.id}).then((({data:e})=>{t(e.data.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const Rj=(0,r.c)(jj,[["render",zj]]);var Oj=Rj;const Gj={name:null,employee:null,reviewers:[]};var Qj={components:{"reviewer-autocomplete":Oj,"employee-autocomplete":$a},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/config/trackers");return{http:e}},data(){return{isLoading:!1,tracker:{...Gj},rules:{tracker:[Ht,Wt(200)],employee:[Ht,So,e=>{if(null===e)return!0;const t=this.tracker.reviewers.findIndex((t=>t.id===e.id));return-1==t||this.$t("performance.employee_cannot_be_assigned_as_his_own_reviewer")}],reviewers:[Ht,So]}}},methods:{onCancel(){U("/performance/viewPerformanceTracker")},onSave(){this.isLoading=!0,this.http.create({trackerName:this.tracker.name.trim(),empNumber:this.tracker.employee.id,reviewerEmpNumbers:this.tracker.reviewers.map((e=>e.id))}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const Hj=(0,r.c)(Qj,[["render",Mj]]);var Wj=Hj;const Yj={class:"orangehrm-background-container"},Jj={class:"orangehrm-card-container"};function Xj(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("employee-autocomplete"),h=(0,a.resolveComponent)("reviewer-autocomplete"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Yj,[(0,a.createElementVNode)("div",Jj,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.edit_performance_tracker")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.tracker.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.tracker.name=e),rules:n.rules.tracker,label:e.$t("performance.tracker_name"),required:""},null,8,["modelValue","rules","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.tracker.employee,"onUpdate:modelValue":t[1]||(t[1]=e=>n.tracker.employee=e),rules:n.rules.employee,readonly:n.isReadOnly},null,8,["modelValue","rules","readonly"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.tracker.reviewers,"onUpdate:modelValue":t[2]||(t[2]=e=>n.tracker.reviewers=e),rules:n.rules.reviewers,"exclude-employee":n.tracker.employee,required:""},null,8,["modelValue","rules","exclude-employee"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const Kj={name:null,employee:null,reviewers:[]};var Zj={components:{"employee-autocomplete":$a,"reviewer-autocomplete":Oj},props:{performanceTrackerId:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/performance/config/trackers");return{http:e}},data(){return{isLoading:!1,tracker:{...Kj},isReadOnly:!1,rules:{tracker:[Ht,Wt(200)],employee:[Ht,So,e=>{if(null===e)return!0;const t=this.tracker.reviewers.findIndex((t=>t.id===e.id));return-1==t||this.$t("performance.employee_cannot_be_assigned_as_his_own_reviewer")}],reviewers:[Ht,So]}}},beforeMount(){this.isLoading=!0,this.http.get(this.performanceTrackerId).then((e=>{const{data:t}=e.data;this.isReadOnly=!1===t.ownerEditable,this.tracker.id=t.id,this.tracker.name=t.trackerName,this.tracker.employee=t.employee?{id:t.employee.empNumber,label:`${t.employee.firstName} ${t.employee.middleName} ${t.employee.lastName}`,isPastEmployee:!!t.employee.terminationId}:null,this.tracker.reviewers=t.reviewers.map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,isPastEmployee:!!e.terminationId})))})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/performance/viewPerformanceTracker")},onSave(){this.isLoading=!0;const e={trackerName:this.tracker.name.trim(),empNumber:this.tracker.employee.id,reviewerEmpNumbers:this.tracker.reviewers.map((e=>e.id))};this.http.update(this.performanceTrackerId,e).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const eR=(0,r.c)(Zj,[["render",Xj]]);var tR=eR;const oR={class:"orangehrm-background-container"},aR={class:"orangehrm-paper-container"},lR={class:"orangehrm-header-container"},nR={class:"orangehrm-container"},rR={class:"orangehrm-bottom-container"};function iR(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("table-header"),s=(0,a.resolveComponent)("oxd-card-table"),c=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",oR,[(0,a.createElementVNode)("div",aR,[(0,a.createElementVNode)("div",lR,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.my_reviews")),1)])),_:1})]),(0,a.createVNode)(d,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",nR,[(0,a.createVNode)(s,{order:l.sortDefinition,"onUpdate:order":t[0]||(t[0]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["order","headers","items","loading"])]),(0,a.createElementVNode)("div",rR,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,current:l.currentPage,"onUpdate:current":t[1]||(t[1]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])])}const dR={component:"oxd-icon-button",props:{name:"eye-fill",title:"View"}},sR={component:"oxd-icon-button",props:{name:"pencil-fill",title:"Edit"}},cR={component:"oxd-icon-button",props:{name:"file-text-fill",title:"Evaluate"}},mR={component:"oxd-button",props:{label:"View",displayType:"text",size:"medium",style:{"min-width":"120px"}}},uR={component:"oxd-button",props:{label:"Edit",displayType:"text",size:"medium",style:{"min-width":"120px"}}},pR={component:"oxd-button",props:{label:"Evaluate",displayType:"text",size:"medium",style:{"min-width":"120px"}}},hR={class:"oxd-table-card-cell"},gR={class:"data"};function vR(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hR,[(0,a.withDirectives)((0,a.createElementVNode)("div",{class:"header"},(0,a.toDisplayString)(o.header.title),513),[[a.vShow,r.showHeader]]),(0,a.createElementVNode)("div",gR,[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.reviewPeriodStart)+" - ",1),(0,a.createVNode)(i,{tag:"span",class:"time"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.reviewPeriodEnd),1)])),_:1})])),_:1})])])}var fR={name:"ReviewPeriodCell",props:{header:{type:Object,required:!0},reviewPeriodStart:{type:String,required:!0},reviewPeriodEnd:{type:String,required:!0}},setup(){const{screenState:e}=(0,q.useInjectTableProps)();return{screenState:e}},computed:{showHeader(){return!("lg"===this.screenState.screenType||"xl"===this.screenState.screenType)}}};const yR=(0,r.c)(fR,[["render",vR],["__scopeId","data-v-74304008"]]);var CR=yR;const VR={"performanceReview.statusId":"ASC","performanceReview.dueDate":"ASC","performanceReview.reviewPeriodStart":"DEFAULT","reviewer.status":"DEFAULT"};var bR={setup(){const{sortDefinition:e,sortField:t,sortOrder:o,onSort:l}=Pt({sortDefinition:VR}),n=(0,a.computed)((()=>({sortField:t.value,sortOrder:o.value}))),r=new P(window.appGlobal.baseUrl,"/api/v2/performance/reviews"),{jsDateFormat:i}=R(),{locale:d}=Le(),s=e=>e.map((e=>({id:e.id,jobTitle:e.jobTitle.name,department:e.subunit.name,reviewPeriod:{reviewPeriodStart:pe(ue(e.reviewPeriodStart),i,{locale:d}),reviewPeriodEnd:pe(ue(e.reviewPeriodEnd),i,{locale:d})},dueDate:pe(ue(e.dueDate),i,{locale:d}),overallStatus:e.overallStatus.statusName,selfEvaluationStatus:e.selfReviewStatus,statusId:e.overallStatus.statusId}))),{currentPage:c,total:m,showPaginator:u,pages:p,pageSize:h,response:g,execQuery:v,isLoading:f}=Dt(r,{query:n,normalizer:s});return l(v),{http:r,total:m,isLoading:f,items:g,execQuery:v,sortDefinition:e,showPaginator:u,pages:p,pageSize:h,currentPage:c}},data(){return{headers:[{name:"jobTitle",slot:"title",title:this.$t("general.job_title"),style:{flex:1}},{name:"department",title:this.$t("general.sub_unit"),style:{flex:1}},{name:"reviewPeriod",title:this.$t("performance.review_period"),sortField:"performanceReview.reviewPeriodStart",style:{flex:2},cellRenderer:this.reviewPeriodCellRenderer},{name:"dueDate",title:this.$t("performance.due_date"),sortField:"performanceReview.dueDate",style:{flex:1}},{name:"selfEvaluationStatus",title:this.$t("performance.self_evaluation_status"),sortField:"reviewer.status",style:{flex:1}},{name:"overallStatus",title:this.$t("performance.review_status"),sortField:"performanceReview.statusId",style:{flex:1}},{name:"action",slot:"footer",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellRenderer:this.actionButtonCellRenderer}]}},methods:{actionButtonCellRenderer(...[,,,e]){const t={},o=(0,a.inject)(q.tableScreenStateKey);return"lg"===o.screenType||"xl"===o.screenType?"Completed"===e.selfEvaluationStatus?(t.view=dR,t.view.props.title=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):(t.evaluate=cR,t.evaluate.props.title=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate):"Completed"===e.selfEvaluationStatus?(t.view=mR,t.view.props.label=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):(t.evaluate=pR,t.evaluate.props.label=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate),{props:{header:{cellConfig:t}}}},reviewPeriodCellRenderer(...e){const t=e[1];return{component:CR,props:{reviewPeriodStart:t.reviewPeriodStart,reviewPeriodEnd:t.reviewPeriodEnd}}},onClickView(){U("/performance/searchKpi")},onClickEvaluate(e){U("/performance/reviewEvaluate/id/{id}",{id:e.id})}}};const xR=(0,r.c)(bR,[["render",iR],["__scopeId","data-v-0dabe21f"]]);var wR=xR;const NR=e=>((0,a.pushScopeId)("data-v-5bbb0ad4"),e=e(),(0,a.popScopeId)(),e),_R={class:"orangehrm-background-container"},kR=NR((()=>(0,a.createElementVNode)("br",null,null,-1))),SR={class:"orangehrm-paper-container"},$R={class:"orangehrm-container"},DR={class:"orangehrm-bottom-container"};function ER(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("jobtitle-dropdown"),c=(0,a.resolveComponent)("subunit-dropdown"),m=(0,a.resolveComponent)("include-employee-dropdown"),u=(0,a.resolveComponent)("review-status-dropdown"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("oxd-grid"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("oxd-table-filter"),V=(0,a.resolveComponent)("table-header"),b=(0,a.resolveComponent)("oxd-card-table"),x=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)("div",_R,[(0,a.createVNode)(C,{"filter-title":e.$t("performance.employee_reviews")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(y,{onSubmitValid:r.filterItems,onReset:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:n.rules.employee,params:{includeEmployees:l.filters.includeEmployees.param}},null,8,["modelValue","rules","params"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.jobTitle=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.subunit,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.subunit=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.includeEmployees,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.includeEmployees=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.status,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.status=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.fromDate=e),rules:n.rules.fromDate,label:e.$t("general.from_date")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.toDate=e),rules:n.rules.toDate,label:e.$t("general.to_date")},null,8,["modelValue","rules","label"])])),_:1})])),_:1}),(0,a.createVNode)(g),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(v,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),kR,(0,a.createElementVNode)("div",SR,[(0,a.createVNode)(V,{selected:0,total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",$R,[(0,a.createVNode)(b,{order:l.sortDefinition,"onUpdate:order":t[7]||(t[7]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["order","headers","items","loading"])]),(0,a.createElementVNode)("div",DR,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(x,{key:0,current:l.currentPage,"onUpdate:current":t[8]||(t[8]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])])}function TR(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("performance.review_status"),clear:!1,options:n.statusOpts},null,8,["label","options"])}var IR={name:"ReviewStatusDropdown",data(){return{statusOpts:[{id:1,statusId:2,label:this.$t("performance.activated")},{id:2,statusId:3,label:this.$t("performance.in_progress")},{id:3,statusId:4,label:this.$t("performance.completed")}]}}};const BR=(0,r.c)(IR,[["render",TR]]);var LR=BR;const UR={"employee.lastName":"DEFAULT","performanceReview.reviewPeriodStart":"DEFAULT","performanceReview.dueDate":"DEFAULT","performanceReview.statusId":"ASC"};var AR={name:"ReviewList",components:{"include-employee-dropdown":eh,"review-status-dropdown":LR,"subunit-dropdown":Qp,"jobtitle-dropdown":jp,"employee-autocomplete":$a},props:{fromDate:{type:String,required:!1,default:null},toDate:{type:String,required:!1,default:null}},setup(e){const{$t:t}=Be(),{jsDateFormat:o,userDateFormat:l}=R(),{locale:n}=Le(),r=e=>pe(ue(e),o,{locale:n}),i=e=>e.map((e=>({id:e.id,employee:`${e.employee?.firstName} ${e.employee?.lastName} ${e.employee?.terminationId?` ${t("general.past_employee")}`:""}`,jobTitle:e.jobTitle?.name,subunit:e.subunit?.name,reviewPeriod:{reviewPeriodStart:r(e.reviewPeriodStart),reviewPeriodEnd:r(e.reviewPeriodEnd)},dueDate:r(e.dueDate),status:2===e.overallStatus.statusId?t("performance.activated"):3===e.overallStatus.statusId?t("performance.in_progress"):t("performance.completed"),statusId:e.overallStatus.statusId}))),d={employee:null,jobTitle:null,subunit:null,status:null,fromDate:null,toDate:null,includeEmployees:{id:1,param:"onlyCurrent",label:t("general.current_employees_only")}},s=(0,a.ref)({...d,...e.fromDate&&{fromDate:e.fromDate},...e.toDate&&{toDate:e.toDate}}),{sortDefinition:c,sortField:m,sortOrder:u,onSort:p}=Pt({sortDefinition:UR}),h=(0,a.computed)((()=>({sortField:m.value,sortOrder:u.value,empNumber:s.value.employee?.id,jobTitleId:s.value.jobTitle?.id,subunitId:s.value.subunit?.id,statusId:s.value.status?.statusId,fromDate:s.value.fromDate,toDate:s.value.toDate,includeEmployees:s.value.includeEmployees?.param}))),g=new P(window.appGlobal.baseUrl,"/api/v2/performance/employees/reviews"),{showPaginator:v,currentPage:f,total:y,pages:C,pageSize:V,response:b,isLoading:x,execQuery:w}=Dt(g,{query:h,normalizer:i});return p(w),{http:g,showPaginator:v,currentPage:f,isLoading:x,total:y,pages:C,pageSize:V,execQuery:w,items:b,filters:s,sortDefinition:c,userDateFormat:l}},data(){return{headers:[{name:"employee",title:this.$t("general.employee"),slot:"title",sortField:"employee.lastName",style:{flex:1}},{name:"jobTitle",title:this.$t("general.job_title"),style:{flex:1}},{name:"subunit",title:this.$t("general.sub_unit"),style:{flex:1}},{name:"reviewPeriod",title:this.$t("performance.review_period"),sortField:"performanceReview.reviewPeriodStart",style:{flex:1},cellRenderer:this.reviewPeriodCellRenderer},{name:"dueDate",title:this.$t("performance.due_date"),sortField:"performanceReview.dueDate",style:{flex:1}},{name:"status",title:this.$t("performance.review_status"),sortField:"performanceReview.statusId",style:{flex:1}},{name:"action",slot:"footer",title:this.$t("general.actions"),cellType:"oxd-table-cell-actions",cellRenderer:this.actionCellRenderer,style:{flex:1}}],rules:{employee:[Wt(100),So],fromDate:[Yt(this.userDateFormat),vo((()=>this.filters.toDate),this.$t("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(this.userDateFormat),ro((()=>this.filters.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]}}},methods:{actionCellRenderer(...[,,,e]){const t={},o=(0,a.inject)(q.tableScreenStateKey);return"lg"===o.screenType||"xl"===o.screenType?4===e.statusId?(t.view=dR,t.view.props.title=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):(t.evaluate=cR,t.evaluate.props.title=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate):4===e.statusId?(t.view=mR,t.view.props.label=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):(t.evaluate=pR,t.evaluate.props.label=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate),{props:{header:{cellConfig:t}}}},reviewPeriodCellRenderer(...e){const t=e[1];return{component:CR,props:{reviewPeriodStart:t.reviewPeriodStart,reviewPeriodEnd:t.reviewPeriodEnd}}},async filterItems(){await this.execQuery()},onClickEvaluate(e){U("/performance/reviewEvaluateByAdmin/{id}",{id:e.id})}}};const PR=(0,r.c)(AR,[["render",ER],["__scopeId","data-v-5bbb0ad4"]]);var qR=PR;const FR=e=>((0,a.pushScopeId)("data-v-da23e376"),e=e(),(0,a.popScopeId)(),e),MR={class:"orangehrm-background-container"},zR=FR((()=>(0,a.createElementVNode)("br",null,null,-1))),jR={class:"orangehrm-paper-container"},RR={class:"orangehrm-header-container"},OR={class:"orangehrm-container"},GR={class:"orangehrm-bottom-container"};function QR(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("jobtitle-dropdown"),c=(0,a.resolveComponent)("review-status-dropdown"),m=(0,a.resolveComponent)("include-employee-dropdown"),u=(0,a.resolveComponent)("date-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("oxd-divider"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("oxd-card-table"),b=(0,a.resolveComponent)("oxd-pagination"),x=(0,a.resolveComponent)("delete-confirmation-dialog");return(0,a.openBlock)(),(0,a.createElementBlock)("div",MR,[(0,a.createVNode)(y,{"filter-title":e.$t("performance.manage_performance_reviews")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:r.filterItems,onReset:r.resetDataTable},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:n.rules.employee,params:{includeEmployees:l.filters.includeEmployees.param}},null,8,["modelValue","rules","params"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.jobTitle,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.jobTitle=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.status,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.status=e),options:l.statusOpts},null,8,["modelValue","options"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.includeEmployees,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.includeEmployees=e)},null,8,["modelValue"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.reviewer,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.reviewer=e),label:e.$t("performance.reviewer"),params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.fromDate=e),rules:n.rules.fromDate,label:e.$t("general.from_date")},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(d,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.toDate=e),rules:n.rules.toDate,label:e.$t("general.to_date")},null,8,["modelValue","rules","label"])])),_:1})])),_:1}),(0,a.createVNode)(h),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.reset"),type:"reset"},null,8,["label"]),(0,a.createVNode)(g,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),zR,(0,a.createElementVNode)("div",jR,[(0,a.createElementVNode)("div",RR,[(0,a.createVNode)(g,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(C,{selected:n.checkedItems.length,total:l.total,loading:l.isLoading,onDelete:r.onClickDeleteSelected},null,8,["selected","total","loading","onDelete"]),(0,a.createElementVNode)("div",OR,[(0,a.createVNode)(V,{selected:n.checkedItems,"onUpdate:selected":t[7]||(t[7]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[8]||(t[8]=e=>l.sortDefinition=e),headers:n.headers,items:l.items?.data,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","headers","items","loading"])]),(0,a.createElementVNode)("div",GR,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,current:l.currentPage,"onUpdate:current":t[9]||(t[9]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(x,{ref:"deleteDialog"},null,512)])}const HR={"employee.lastName":"DEFAULT","performanceReview.reviewPeriodStart":"DEFAULT","performanceReview.dueDate":"DEFAULT","performanceReview.statusId":"ASC","jobTitle.jobTitleName":"DEFAULT","reviewerEmployee.lastName":"DEFAULT"};var WR={name:"ReviewSearch",components:{"include-employee-dropdown":eh,"review-status-dropdown":LR,"jobtitle-dropdown":jp,"employee-autocomplete":$a,"delete-confirmation-dialog":At},props:{fromDate:{type:String,required:!1,default:null},toDate:{type:String,required:!1,default:null}},setup(e){const{$t:t}=Be(),{jsDateFormat:o,userDateFormat:l}=R(),{locale:n}=Le(),{$tEmpName:r}=Da(),i=e=>pe(ue(e),o,{locale:n}),d=[{id:1,label:t("performance.inactive")},{id:2,label:t("performance.activated")},{id:3,label:t("performance.in_progress")},{id:4,label:t("performance.completed")}],s=e=>e.map((e=>{const t=e.employee,o=e.reviewer?.employee;return{id:e.id,employee:r(t),reviewer:r(o),jobTitle:e.jobTitle?.name,reviewPeriod:{reviewPeriodStart:i(e.reviewPeriodStart),reviewPeriodEnd:i(e.reviewPeriodEnd)},dueDate:i(e.dueDate),status:d.find((t=>t.id===e.overallStatus.statusId)).label,statusId:e.overallStatus.statusId}})),c={employee:null,jobTitle:null,status:null,reviewer:null,fromDate:null,toDate:null,includeEmployees:{id:1,param:"onlyCurrent",label:t("general.current_employees_only")}},m=(0,a.ref)({...c,...e.fromDate&&{fromDate:e.fromDate},...e.toDate&&{toDate:e.toDate}}),{sortDefinition:u,sortField:p,sortOrder:h,onSort:g}=Pt({sortDefinition:HR}),v=(0,a.computed)((()=>({sortField:p.value,sortOrder:h.value,empNumber:m.value.employee?.id,jobTitleId:m.value.jobTitle?.id,statusId:m.value.status?.id,reviewerEmpNumber:m.value.reviewer?.id,fromDate:m.value.fromDate,toDate:m.value.toDate,includeEmployees:m.value.includeEmployees?.param}))),f=new P(window.appGlobal.baseUrl,"/api/v2/performance/manage/reviews"),{showPaginator:y,currentPage:C,total:V,pages:b,pageSize:x,response:w,isLoading:N,execQuery:_}=Dt(f,{query:v,normalizer:s});return g(_),{http:f,showPaginator:y,currentPage:C,isLoading:N,total:V,pages:b,pageSize:x,execQuery:_,items:w,filters:m,sortDefinition:u,statusOpts:d,userDateFormat:l}},data(){return{headers:[{name:"employee",title:this.$t("general.employee"),slot:"title",sortField:"employee.lastName",style:{flex:"14%"}},{name:"jobTitle",title:this.$t("general.job_title"),sortField:"jobTitle.jobTitleName",style:{flex:"14%"}},{name:"reviewPeriod",title:this.$t("performance.review_period"),sortField:"performanceReview.reviewPeriodStart",style:{flex:"14%"},cellRenderer:this.reviewPeriodCellRenderer},{name:"dueDate",title:this.$t("performance.due_date"),sortField:"performanceReview.dueDate",style:{flex:"14%"}},{name:"reviewer",title:this.$t("performance.reviewer"),sortField:"reviewerEmployee.lastName",style:{flex:"14%"}},{name:"status",title:this.$t("performance.review_status"),sortField:"performanceReview.statusId",style:{flex:"14%"}},{name:"action",slot:"footer",title:this.$t("general.actions"),cellType:"oxd-table-cell-actions",cellRenderer:this.actionButtonCellRenderer,style:{flex:"16%"}}],checkedItems:[],rules:{employee:[Wt(100),So],fromDate:[Yt(this.userDateFormat),vo((()=>this.filters.toDate),this.$t("general.from_date_should_be_before_to_date"),{allowSameDate:!0})],toDate:[Yt(this.userDateFormat),ro((()=>this.filters.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]}}},methods:{actionButtonCellRenderer(...[,,,e]){const t={},o=(0,a.inject)(q.tableScreenStateKey);return t.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},"lg"===o.screenType||"xl"===o.screenType?4===e.statusId?(t.view=dR,t.view.props.title=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):1===e.statusId?(t.edit=sR,t.edit.props.title=this.$t("general.edit"),t.edit.onClick=this.onClickEdit):(t.evaluate=cR,t.evaluate.props.title=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate):4===e.statusId?(t.view=mR,t.view.props.label=this.$t("general.view"),t.view.onClick=this.onClickEvaluate):1===e.statusId?(t.edit=uR,t.edit.props.label=this.$t("general.edit"),t.edit.onClick=this.onClickEdit):(t.evaluate=pR,t.evaluate.props.label=this.$t("performance.evaluate"),t.evaluate.onClick=this.onClickEvaluate),{props:{header:{cellConfig:t}}}},reviewPeriodCellRenderer(...e){const t=e[1];return{component:CR,props:{reviewPeriodStart:t.reviewPeriodStart,reviewPeriodEnd:t.reviewPeriodEnd}}},onClickEdit(e){U("/performance/saveReview/{id}",{id:e.id})},onClickAdd(){U("/performance/saveReview")},onClickEvaluate(e){U("/performance/reviewEvaluateByAdmin/{id}",{id:e.id})},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},async filterItems(){await this.execQuery()},async resetDataTable(){this.checkedItems=[],await this.execQuery()}}};const YR=(0,r.c)(WR,[["render",QR],["__scopeId","data-v-da23e376"]]);var JR=YR;const XR=e=>((0,a.pushScopeId)("data-v-6009f2cd"),e=e(),(0,a.popScopeId)(),e),KR={class:"orangehrm-background-container"},ZR={class:"orangehrm-card-container"},eO={class:"orangehrm-employee-tracker"},tO={class:"orangehrm-employee-tracker-image-section"},oO={class:"orangehrm-employee-tracker-image-wrapper"},aO=["src"],lO={class:"orangehrm-employee-tracker-header-section"},nO={class:"orangehrm-employee-tracker-header"},rO={class:"orangehrm-employee-tracker-ratings"},iO={key:0,class:"orangehrm-employee-tracker-ratings-info"},dO={key:1,class:"orangehrm-employee-tracker-ratings-info"},sO=XR((()=>(0,a.createElementVNode)("br",null,null,-1))),cO={class:"orangehrm-paper-container"},mO={class:"orangehrm-header-container"},uO={ref:"scrollerRef",class:"orangehrm-container"},pO={key:0,class:"orangehrm-employee-tracker-no-records"};function hO(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("employee-tracker-log-card"),m=(0,a.resolveComponent)("oxd-sheet"),u=(0,a.resolveComponent)("oxd-loading-spinner"),p=(0,a.resolveComponent)("add-tracker-log-modal"),h=(0,a.resolveComponent)("edit-tracker-log-modal"),g=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)("div",KR,[(0,a.createElementVNode)("div",ZR,[(0,a.createElementVNode)("div",eO,[(0,a.createElementVNode)("div",tO,[(0,a.createElementVNode)("div",oO,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:l.imgSrc},null,8,aO)])]),(0,a.createElementVNode)("div",lO,[(0,a.createElementVNode)("div",nO,[(0,a.createVNode)(i,{tag:"h5",class:"orangehrm-employee-tracker-header-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.trackerName),1)])),_:1}),(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-employee-tracker-header-subtitle"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.employeeName),1)])),_:1})]),(0,a.createElementVNode)("div",rO,[e.meta.positive>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",iO,[(0,a.createVNode)(d,{class:"orangehrm-employee-tracker-ratings-icon --positive",type:"svg",name:"thumbsup"}),(0,a.createVNode)(i,{class:"orangehrm-employee-tracker-ratings-text --positive"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.meta.positive),1)])),_:1})])):(0,a.createCommentVNode)("",!0),e.meta.negative>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",dO,[(0,a.createVNode)(d,{class:"orangehrm-employee-tracker-ratings-icon --negative",type:"svg",name:"thumbsdown"}),(0,a.createVNode)(i,{class:"orangehrm-employee-tracker-ratings-text --negative"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.meta.negative),1)])),_:1})])):(0,a.createCommentVNode)("",!0)])])])]),sO,(0,a.createElementVNode)("div",cO,[(0,a.createElementVNode)("div",mO,[(0,a.createVNode)(i,{tag:"h5",class:"orangehrm-employee-tracker-list-header"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.tracker_logs")),1)])),_:1}),(0,a.createVNode)(s,{label:e.$t("performance.add_log"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createElementVNode)("div",uO,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.items,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(m,{key:t,gutters:!1,type:"gray-lighten-2",class:"orangehrm-scroll-card"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{"tracker-log":e,onEdit:r.onClickEdit,onDelete:r.onClickDelete},null,8,["tracker-log","onEdit","onDelete"])])),_:2},1024)))),128)),e.showNoRecordsFound?((0,a.openBlock)(),(0,a.createElementBlock)("div",pO,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.n_records_found",{count:0})),1)])),_:1})])):(0,a.createCommentVNode)("",!0),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(u,{key:1,class:"orangehrm-container-loader"})):(0,a.createCommentVNode)("",!0)],512)]),n.showAddTrackerModal?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,"tracker-id":o.trackerId,onClose:r.onAddTrackerModalClose},null,8,["tracker-id","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditTrackerModal?((0,a.openBlock)(),(0,a.createBlock)(h,{key:1,"tracker-id":o.trackerId,"tracker-log-id":n.editTrackerLogId,onClose:r.onEditTrackerModalClose},null,8,["tracker-id","tracker-log-id","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(g,{ref:"deleteDialog"},null,512)])}function gO(e,{refName:t="scrollerRef",scrollDistance:o=100,debounceInterval:l=100}={}){let n=0,r=!1;const i=(0,a.ref)(),d=(0,q.promiseDebounce)((async()=>e()),l),s=()=>{let e,t,a;i.value?({scrollHeight:e,clientHeight:t,scrollTop:a}=i.value.$el||i.value):(a=window.scrollY,e=document.body.scrollHeight,t=document.body.clientHeight),r=a>n,n=a;const l=a+t>=e-(o||0);r&&l&&d()};return(0,a.onMounted)((async()=>{await(0,a.nextTick)(),i.value?(i.value.$el||i.value).addEventListener("scroll",s):document.addEventListener("scroll",s)})),(0,a.onBeforeUnmount)((()=>{i.value?(i.value.$el||i.value).removeEventListener("scroll",s):document.removeEventListener("scroll",s)})),{[t]:i}}const vO={class:"orangehrm-modal-header"},fO={class:"orangehrm-add-tracker-log-ratings-container"};function yO(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("tracker-log-rating-button"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{style:{width:"90%",maxWidth:"650px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",vO,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.add_tracker_log")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.trackerLog.log,"onUpdate:modelValue":t[0]||(t[0]=e=>n.trackerLog.log=e),label:e.$t("performance.log"),placeholder:e.$t("general.type_here"),rules:n.rules.log,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",fO,[(0,a.createVNode)(m,{label:e.$t("performance.positive"),selected:n.rating,type:"positive",onClick:r.onClickPositive},null,8,["label","selected","onClick"]),(0,a.createVNode)(m,{label:e.$t("performance.negative"),selected:!n.rating,type:"negative",onClick:r.onClickNegative},null,8,["label","selected","onClick"])])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.trackerLog.comment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.trackerLog.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_here"),rules:n.rules.comment,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{class:"orangehrm-form-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p,{"display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}function CO(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createBlock)(d,{"display-type":"text",label:o.label,class:(0,a.normalizeClass)(r.buttonClasses),onClick:t[0]||(t[0]=t=>e.$emit("click"))},{icon:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"svg",name:r.iconName,class:(0,a.normalizeClass)(r.iconClasses)},null,8,["name","class"])])),_:1},8,["label","class"])}var VO={name:"TrackerLogRatingButton",components:{"oxd-icon":q.OxdIcon},props:{label:{type:String,required:!0},selected:{type:Boolean,required:!0},type:{type:String,required:!0,validator:function(e){return-1!==["positive","negative"].indexOf(e)}}},emits:["click"],computed:{iconName(){return"thumbs"+("positive"===this.type?"up":"down")},buttonClasses(){return{"orangehrm-tracker-rating-button":!0,"--deselected":!this.selected}},iconClasses(){return{"orangehrm-tracker-rating-icon":!0,[`--${this.type}`]:!0}}}};const bO=(0,r.c)(VO,[["render",CO],["__scopeId","data-v-58afa3a7"]]);var xO=bO;const wO={log:"",comment:""};var NO={name:"AddTrackerLogModal",components:{"oxd-dialog":q.OxdDialog,"tracker-log-rating-button":xO},props:{trackerId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/performance/trackers/${e.trackerId}/logs`);return{http:t}},data(){return{isLoading:!1,rating:!0,trackerLog:{...wO},rules:{log:[Ht,Wt(150)],comment:[Ht,Wt(3e3)]}}},methods:{onClickPositive(){this.rating=!0},onClickNegative(){this.rating=!1},onSave(){this.isLoading=!0,this.http.create({log:this.trackerLog.log,comment:this.trackerLog.comment,achievement:this.rating?1:2}).then((()=>{this.$toast.saveSuccess(),this.onCancel()}))},onCancel(){this.$emit("close")}}};const _O=(0,r.c)(NO,[["render",yO],["__scopeId","data-v-4051526e"]]);var kO=_O;const SO={class:"orangehrm-modal-header"},$O={class:"orangehrm-add-tracker-log-ratings-container"};function DO(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("tracker-log-rating-button"),u=(0,a.resolveComponent)("required-text"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{style:{width:"90%",maxWidth:"650px"},"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",SO,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.edit_tracker_log")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.trackerLog.log,"onUpdate:modelValue":t[0]||(t[0]=e=>n.trackerLog.log=e),label:e.$t("performance.log"),placeholder:e.$t("general.type_here"),rules:n.rules.log,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",$O,[(0,a.createVNode)(m,{label:e.$t("performance.positive"),selected:n.rating,type:"positive",onClick:r.onClickPositive},null,8,["label","selected","onClick"]),(0,a.createVNode)(m,{label:e.$t("performance.negative"),selected:!n.rating,type:"negative",onClick:r.onClickNegative},null,8,["label","selected","onClick"])])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.trackerLog.comment,"onUpdate:modelValue":t[1]||(t[1]=e=>n.trackerLog.comment=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_here"),rules:n.rules.comment,required:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(h,{class:"orangehrm-form-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p,{"display-type":"secondary",label:e.$t("general.save"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const EO={log:"",comment:""};var TO={name:"EditTrackerLogModal",components:{"oxd-dialog":q.OxdDialog,"tracker-log-rating-button":xO},props:{trackerId:{type:Number,required:!0},trackerLogId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/performance/trackers/${e.trackerId}/logs`);return{http:t}},data(){return{isLoading:!1,rating:!0,trackerLog:{...EO},rules:{log:[Ht,Wt(150)],comment:[Ht,Wt(3e3)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.trackerLogId).then((e=>{const{data:t}=e.data;this.trackerLog.log=t.log,this.trackerLog.comment=t.comment,this.rating="1"===t.achievement})).finally((()=>{this.isLoading=!1}))},methods:{onClickPositive(){this.rating=!0},onClickNegative(){this.rating=!1},onSave(){this.isLoading=!0,this.http.update(this.trackerLogId,{log:this.trackerLog.log,comment:this.trackerLog.comment,achievement:this.rating?1:2}).then((()=>{this.$toast.updateSuccess(),this.onCancel()}))},onCancel(){this.$emit("close")}}};const IO=(0,r.c)(TO,[["render",DO],["__scopeId","data-v-6efd92f4"]]);var BO=IO;const LO={class:"orangehrm-employee-tracker-log"},UO={class:"orangehrm-employee-tracker-log-image-section"},AO={class:"orangehrm-employee-tracker-log-image-wrapper"},PO=["src"],qO={class:"orangehrm-employee-tracker-log-content-section"},FO={class:"orangehrm-employee-tracker-log-reviewer-name"},MO={class:"orangehrm-employee-tracker-log-content-container"},zO={class:"orangehrm-employee-tracker-log-header"},jO={class:"orangehrm-employee-tracker-log-title"},RO={class:"orangehrm-employee-tracker-log-body"},OO={class:"orangehrm-employee-tracker-log-reviewer-date"},GO={class:"orangehrm-employee-tracker-log-reviewer-date-container"},QO={key:0,class:"orangehrm-employee-tracker-log-reviewer-date-container"};function HO(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon"),s=(0,a.resolveComponent)("oxd-table-dropdown");return(0,a.openBlock)(),(0,a.createElementBlock)("div",LO,[(0,a.createElementVNode)("div",UO,[(0,a.createElementVNode)("div",AO,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:o.trackerLog.reviewerPictureSrc},null,8,PO)])]),(0,a.createElementVNode)("div",qO,[(0,a.createElementVNode)("div",FO,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.trackerLog.reviewerName),1)])),_:1})]),(0,a.createElementVNode)("div",MO,[(0,a.createElementVNode)("div",zO,[(0,a.createElementVNode)("div",jO,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-employee-tracker-log-title-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.trackerLog.log),1)])),_:1}),(0,a.createVNode)(d,{type:"svg",class:(0,a.normalizeClass)({"orangehrm-employee-tracker-log-title-icon":!0,"--positive":"1"===o.trackerLog.achievement,"--negative":"2"===o.trackerLog.achievement}),name:"thumbs"+("1"===o.trackerLog.achievement?"up":"down")},null,8,["class","name"])]),o.trackerLog.editable?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,options:n.dropdownOptions,onClick:t[0]||(t[0]=e=>r.onTrackerDropdownAction(e,o.trackerLog))},null,8,["options"])):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",RO,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-employee-tracker-log-body-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.trackerLog.comment),1)])),_:1})])]),(0,a.createElementVNode)("div",OO,[(0,a.createElementVNode)("div",GO,[(0,a.createVNode)(d,{class:"orangehrm-employee-tracker-log-reviewer-date-icon",name:"calendar-plus",title:e.$t("performance.added_on")},null,8,["title"]),(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.trackerLog.addedDate),1)])),_:1})]),o.trackerLog.modifiedDate?((0,a.openBlock)(),(0,a.createElementBlock)("div",QO,[(0,a.createVNode)(d,{class:"orangehrm-employee-tracker-log-reviewer-date-icon",name:"pencil",title:e.$t("performance.modified_on")},null,8,["title"]),(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.trackerLog.modifiedDate),1)])),_:1})])):(0,a.createCommentVNode)("",!0)])])])}var WO={name:"EmployeeTrackerLogCard",components:{"oxd-icon":q.OxdIcon,"oxd-table-dropdown":q.OxdTableDropdown},props:{trackerLog:{type:Object,required:!0}},emits:["edit","delete"],data(){return{dropdownOptions:[{label:this.$t("general.edit"),context:"edit"},{label:this.$t("performance.delete"),context:"delete"}]}},methods:{onTrackerDropdownAction(e,t){switch(e.context){case"edit":this.$emit("edit",t.id);break;case"delete":this.$emit("delete",t.id);break}}}};const YO=(0,r.c)(WO,[["render",HO],["__scopeId","data-v-78faa70c"]]);var JO=YO,XO={name:"ViewEmployeeTrackerLogs",components:{"oxd-icon":q.OxdIcon,"oxd-sheet":q.OxdSheet,"oxd-loading-spinner":q.OxdSpinner,"add-tracker-log-modal":kO,"edit-tracker-log-modal":BO,"delete-confirmation":At,"employee-tracker-log-card":JO},props:{trackerId:{type:Number,required:!0},empNumber:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/performance/trackers/${e.trackerId}/logs`),o=10,l=(0,a.reactive)({total:0,items:[],meta:{positive:0,negative:0},infinite:!1,isLoading:!1,showNoRecordsFound:!1}),{$tEmpName:n}=Da(),{jsDateFormat:r}=R(),{locale:i}=Le(),d=()=>{l.showNoRecordsFound=!1,l.isLoading=!0,t.getAll({limit:o,offset:0===l.items.length?0:o}).then((e=>{const{data:t,meta:o}=e.data;l.total=o?.total||0,Array.isArray(t)&&(l.items=[...l.items,...t.map((e=>({...e,reviewerPictureSrc:`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.reviewer.empNumber}`,reviewerName:n(e.reviewer),addedDate:pe(ue(e.addedDate),r,{locale:i}),modifiedDate:pe(ue(e.modifiedDate),r,{locale:i})})))],l.meta={...l.meta,...o})})).finally((()=>{l.showNoRecordsFound=0===l.total,l.isLoading=!1}))},{scrollerRef:s}=gO((()=>{l.items.length>=l.total||d()})),c=(0,a.computed)((()=>`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.empNumber}`));return{http:t,scrollerRef:s,fetchData:d,...(0,a.toRefs)(l),imgSrc:c}},data(){return{trackerName:"",employeeName:"",showAddTrackerModal:!1,showEditTrackerModal:!1,editTrackerLogId:null}},beforeMount(){this.http.request({method:"GET",url:`/api/v2/performance/employees/trackers/${this.trackerId}`}).then((e=>{const{data:t}=e.data;this.trackerName=t.trackerName,this.employeeName=`${t.employee.firstName} ${t.employee.lastName} ${t.employee.terminationId?` ${this.$t("general.past_employee")}`:""}`})).then((()=>{this.fetchData()}))},methods:{onClickAdd(){this.showAddTrackerModal=!0},onAddTrackerModalClose(){this.showAddTrackerModal=!1,this.resetItems()},onEditTrackerModalClose(){this.showEditTrackerModal=!1,this.resetItems()},onClickEdit(e){this.editTrackerLogId=e,this.showEditTrackerModal=!0},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e])}))},deleteItems(e){e instanceof Array&&(this.items=[],this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).finally((()=>{this.fetchData()})))},resetItems(){this.items=[],this.fetchData()}}};const KO=(0,r.c)(XO,[["render",hO],["__scopeId","data-v-6009f2cd"]]);var ZO=KO;const eG=e=>((0,a.pushScopeId)("data-v-ba5e469c"),e=e(),(0,a.popScopeId)(),e),tG={class:"orangehrm-background-container"},oG={class:"orangehrm-card-container"},aG=eG((()=>(0,a.createElementVNode)("br",null,null,-1))),lG=eG((()=>(0,a.createElementVNode)("br",null,null,-1))),nG=eG((()=>(0,a.createElementVNode)("br",null,null,-1))),rG={class:"orangehrm-performance-review-actions"};function iG(e,t,o,l,n,r){const i=(0,a.resolveComponent)("review-confirm-modal"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("review-summary"),c=(0,a.resolveComponent)("evaluation-form"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("final-evaluation"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",tG,[(0,a.createVNode)(i,{ref:"confirmDialog"},null,512),(0,a.createElementVNode)("div",oG,[(0,a.createVNode)(d,{tag:"h5",class:"orangehrm-performance-review-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.performance_review")),1)])),_:1})]),aG,(0,a.createVNode)(s,{loading:n.isLoading,status:o.status,"due-date":o.dueDate,employee:n.employee.details,"job-title":n.employee.jobTitle,"review-period-end":o.reviewPeriodEnd,"review-period-start":o.reviewPeriodStart,"final-rating":n.finalRating},null,8,["loading","status","due-date","employee","job-title","review-period-end","review-period-start","final-rating"]),lG,(0,a.createVNode)(g,{ref:"formRef",loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.employeeReview,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employeeReview=e),kpis:n.kpis,rules:n.rules,editable:r.hasSupervisorUpdateAction,collapsed:n.employee.status<3,collapsible:3===n.employee.status,employee:n.employee.details,"job-title":n.employee.jobTitle,status:n.employee.status,title:e.$t("performance.self_evaluation_by")},null,8,["modelValue","kpis","rules","editable","collapsed","collapsible","employee","job-title","status","title"]),nG,(0,a.createVNode)(c,{modelValue:n.supervisorReview,"onUpdate:modelValue":t[6]||(t[6]=e=>n.supervisorReview=e),kpis:n.kpis,rules:n.rules,editable:r.hasSaveAction||r.hasCompleteAction,collapsible:!0,employee:n.supervisor.details,"job-title":n.supervisor.jobTitle,status:n.supervisor.status,title:e.$t("performance.supervisor_evaluation_by")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),((0,a.openBlock)(),(0,a.createBlock)(u,{key:n.isFinalizeRequired,"final-rating":n.finalRating,"onUpdate:finalRating":t[1]||(t[1]=e=>n.finalRating=e),"final-comment":n.finalComment,"onUpdate:finalComment":t[2]||(t[2]=e=>n.finalComment=e),"completed-date":n.completedDate,"onUpdate:completedDate":t[3]||(t[3]=e=>n.completedDate=e),status:o.status,"is-required":n.isFinalizeRequired},null,8,["final-rating","final-comment","completed-date","status","is-required"])),(0,a.withDirectives)((0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createElementVNode)("div",rG,[r.hasCancelAction?((0,a.openBlock)(),(0,a.createBlock)(p,{key:0,"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickCancel},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),r.hasSaveAction?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,"display-type":"ghost",type:"button",label:e.$t("general.save"),onClick:t[4]||(t[4]=e=>r.onSubmit(!1))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasCompleteAction?((0,a.openBlock)(),(0,a.createBlock)(p,{key:2,type:"button","display-type":"secondary",label:e.$t("performance.complete"),onClick:t[5]||(t[5]=e=>r.onSubmit(!0))},null,8,["label"])):(0,a.createCommentVNode)("",!0)])])),_:1},512),[[a.vShow,r.hasActions]])])),_:1},8,["modelValue","kpis","rules","editable","employee","job-title","status","title"])])),_:1},8,["loading"])])}const dG={class:"orangehrm-card-container"},sG={class:"orangehrm-performance-review-summary"},cG={class:"orangehrm-performance-review-owner"},mG=["src"],uG={class:"orangehrm-performance-review-owner-employee-section"},pG={class:"orangehrm-performance-review-owner-employee"},hG={class:"orangehrm-performance-review-rating"};function gG(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",dG,[(0,a.createElementVNode)("div",sG,[(0,a.createVNode)(i,{tag:"h5",class:"orangehrm-performance-review-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.review_summary")),1)])),_:1}),(0,a.createVNode)(m,{loading:o.loading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"orangehrm-performance-review-details"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-performance-review-details-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",cG,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:l.imgSrc},null,8,mG),(0,a.createElementVNode)("div",uG,[(0,a.createElementVNode)("div",pG,[(0,a.createVNode)(i,{tag:"h5",class:"orangehrm-performance-review-owner-employee-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeName),1)])),_:1}),(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-performance-review-owner-employee-job"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.jobTitle),1)])),_:1})])])])])),_:1}),(0,a.withDirectives)((0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",hG,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.final_rating")),1)])),_:1}),(0,a.createVNode)(i,{tag:"h4",class:"orangehrm-performance-review-rating-number"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.finalRating),1)])),_:1})])])),_:1},512),[[a.vShow,4===o.status]])])),_:1})])),_:1}),(0,a.createVNode)(c,{class:"orangehrm-performance-review-details"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{cols:3,class:"orangehrm-performance-review-details-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-performance-review-column"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.review_status")),1)])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-performance-review-bold"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.reviewStatus),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-performance-review-column"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.review_period")),1)])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-performance-review-bold"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.reviewPeriod),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-performance-review-column"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.review_due_date")),1)])),_:1}),(0,a.createVNode)(i,{class:"orangehrm-performance-review-bold"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.reviewDueDate),1)])),_:1})])),_:1})])),_:1})])),_:1})])),_:1},8,["loading"])])])}const vG=`${window.appGlobal.publicPath}/images/default-photo.png`;var fG={name:"ReviewSummary",props:{employee:{type:Object,required:!0},jobTitle:{type:String,required:!0},status:{type:Number,required:!0},reviewPeriodStart:{type:String,required:!0},reviewPeriodEnd:{type:String,required:!0},dueDate:{type:String,required:!0},loading:{type:Boolean,required:!0},finalRating:{type:Number,default:0}},setup(e){const{$t:t}=Be(),{locale:o}=Le(),{jsDateFormat:l}=R(),{$tEmpName:n}=Da(),r=[{id:1,label:t("performance.inactive")},{id:2,label:t("performance.activated")},{id:3,label:t("performance.in_progress")},{id:4,label:t("performance.completed")}],i=e=>pe(ue(e),l,{locale:o}),d=(0,a.computed)((()=>e.employee.empNumber?`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.employee.empNumber}`:vG)),s=r.find((t=>t.id===e.status)).label,c=`${i(e.reviewPeriodStart)} - ${i(e.reviewPeriodEnd)}`,m=i(e.dueDate),u=(0,a.computed)((()=>n(e.employee,{includeMiddle:!0,excludePastEmpTag:!1})));return{imgSrc:d,reviewStatus:s,reviewPeriod:c,reviewDueDate:m,employeeName:u}}};const yG=(0,r.c)(fG,[["render",gG],["__scopeId","data-v-54a057e9"]]);var CG=yG;const VG=e=>((0,a.pushScopeId)("data-v-41d4c372"),e=e(),(0,a.popScopeId)(),e),bG=VG((()=>(0,a.createElementVNode)("br",null,null,-1))),xG={key:1,class:"orangehrm-performance-review-read"},wG={key:1,class:"orangehrm-performance-review-read"},NG={key:1,class:"orangehrm-performance-review-read"};function _G(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("date-input"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-grid");return(0,a.openBlock)(),(0,a.createElementBlock)("div",null,[(0,a.createVNode)(i,{class:"orangehrm-performance-review-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.review_finalization")),1)])),_:1}),bG,(0,a.createVNode)(m,{cols:4,class:"orangehrm-performance-review-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.date_of_completion")),1)])),_:1}),l.editable?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,"model-value":o.completedDate,rules:n.rules.completedDate,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("update:completedDate",t))},null,8,["model-value","rules"])):((0,a.openBlock)(),(0,a.createElementBlock)("div",xG,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.formattedCompletedDate),1)])),_:1})]))])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-performance-review-grid-rating"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.final_rating")),1)])),_:1}),l.editable?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,"model-value":o.finalRating,rules:n.rules.finalRating,"onUpdate:modelValue":t[1]||(t[1]=t=>e.$emit("update:finalRating",t))},null,8,["model-value","rules"])):((0,a.openBlock)(),(0,a.createElementBlock)("div",wG,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.finalRating),1)])),_:1})]))])),_:1}),(0,a.createVNode)(s,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.final_comments")),1)])),_:1}),l.editable?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,rows:"1",type:"textarea","model-value":o.finalComment,rules:n.rules.finalComment,"onUpdate:modelValue":t[2]||(t[2]=t=>e.$emit("update:finalComment",t))},null,8,["model-value","rules"])):((0,a.openBlock)(),(0,a.createElementBlock)("div",NG,[(0,a.createVNode)(i,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.finalComment),1)])),_:1})]))])),_:1})])),_:1})])}var kG={name:"FinalEvaluation",props:{completedDate:{type:String,default:null,required:!1},finalRating:{type:Number,default:null,required:!1},finalComment:{type:String,default:null,required:!1},status:{type:Number,required:!0},isRequired:{type:Boolean,required:!0}},emits:["update:finalRating","update:finalComment","update:completedDate"],setup(e){const{locale:t}=Le(),{jsDateFormat:o,userDateFormat:l}=R(),n=(0,a.computed)((()=>4!==e.status)),r=(0,a.computed)((()=>pe(ue(e.completedDate),o,{locale:t})));return{editable:n,userDateFormat:l,formattedCompletedDate:r}},data(){return{rules:{completedDate:[Yt(this.userDateFormat),...this.isRequired?[Ht]:[]],finalRating:[_o(0,this.$t("performance.rating_should_be_greater_than_or_equal_to_minValue",{minValue:0})),ko(100,this.$t("performance.rating_should_be_less_than_or_equal_to_maxValue",{maxValue:100})),...this.isRequired?[Ht]:[]],finalComment:[...this.isRequired?[Ht]:[]]}}}};const SG=(0,r.c)(kG,[["render",_G],["__scopeId","data-v-41d4c372"]]);var $G=SG;const DG={class:"orangehrm-evaluation orangehrm-card-container"},EG={class:"orangehrm-evaluation-header"},TG=["src"],IG={class:"orangehrm-evaluation-title-name"};function BG(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-grid"),c=(0,a.resolveComponent)("oxd-icon-button"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createElementBlock)("div",DG,[(0,a.createVNode)(i,{class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.title),1)])),_:1}),(0,a.createElementVNode)("div",EG,[(0,a.createVNode)(s,{cols:3,class:"orangehrm-evaluation-header-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-evaluation-title"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("img",{class:"orangehrm-evaluation-title-profile-image",alt:"profile picture",src:l.profileImgSrc},null,8,TG),(0,a.createElementVNode)("div",IG,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeName),1)])),_:1}),(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.jobTitle),1)])),_:1})])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.status")),1)])),_:1}),(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.evaluationLabel),1)])),_:1})])),_:1})])),_:1}),o.collapsible?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,"with-container":!1,name:l.isCollapsed?"chevron-down":"chevron-up",onClick:l.toggleForm},null,8,["name","onClick"])):(0,a.createCommentVNode)("",!0)]),l.isCollapsed?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(m),(0,a.createVNode)(s,{cols:4,class:"orangehrm-evaluation-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.kpis")),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.rating")),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-header"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.comments")),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-spacer-md"}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.kpis,((t,n)=>((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:t.id},[(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-kpi"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-evaluation-grid-kpi-header",type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.kpi")),1)])),_:1}),(0,a.createVNode)(i,{title:t.title,tag:"p",class:"orangehrm-evaluation-grid-kpi-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.title),1)])),_:2},1032,["title"]),(0,a.createVNode)(i,{class:"orangehrm-evaluation-grid-kpi-minmax",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.min"))+": "+(0,a.toDisplayString)(t.minRating),1)])),_:2},1024),(0,a.createVNode)(i,{class:"orangehrm-evaluation-grid-kpi-minmax",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.max"))+": "+(0,a.toDisplayString)(t.maxRating),1)])),_:2},1024)])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-evaluation-grid-kpi-header",type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.rating")),1)])),_:1}),(0,a.createVNode)(u,{type:"input",disabled:!o.editable,rules:o.rules[n],"model-value":o.modelValue.kpis[n].rating,"onUpdate:modelValue":e=>l.onUpdateRating(e,n)},null,8,["disabled","rules","model-value","onUpdate:modelValue"])])),_:2},1024),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-evaluation-grid-kpi-header",type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.comment")),1)])),_:1}),(0,a.createVNode)(u,{class:"orangehrm-evaluation-grid-comment",rows:"2",type:"textarea",disabled:!o.editable,rules:l.commentValidators,"model-value":o.modelValue.kpis[n].comment,"onUpdate:modelValue":e=>l.onUpdateComment(e,n)},null,8,["disabled","rules","model-value","onUpdate:modelValue"])])),_:2},1024),(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-spacer-md"})],64)))),128))])),_:1}),(0,a.createVNode)(m),(0,a.createVNode)(s,{cols:3,class:"orangehrm-evaluation-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{class:"orangehrm-evaluation-grid-general"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-evaluation-grid-general-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.general_comment")),1)])),_:1})])),_:1}),(0,a.createVNode)(d,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{class:"orangehrm-evaluation-grid-comment",rows:"2",type:"textarea",disabled:!o.editable,rules:l.commentValidators,"model-value":o.modelValue.generalComment,"onUpdate:modelValue":t[0]||(t[0]=e=>l.onUpdateGeneralComment(e))},null,8,["disabled","rules","model-value"])])),_:1})])),_:1}),(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)],64))])}const LG=`${window.appGlobal.publicPath}/images/default-photo.png`;var UG={components:{"oxd-divider":q.OxdDivider},props:{kpis:{type:Array,required:!0},title:{type:String,required:!0},editable:{type:Boolean,required:!0},collapsible:{type:Boolean,required:!0},employee:{type:Object,required:!0},jobTitle:{type:String,required:!0},rules:{type:Array,required:!0},modelValue:{type:Object,required:!0,validator:e=>Object.hasOwn(e,"kpis")&&Object.hasOwn(e,"generalComment")},collapsed:{type:Boolean,default:!1},status:{type:Number,required:!0}},emits:["update:modelValue"],setup(e,t){const{$t:o}=Be(),{$tEmpName:l}=Da(),n=(0,a.ref)(e.collapsed),r=[Wt(2e3)],i=(0,a.computed)((()=>e.employee.empNumber?`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.employee.empNumber}`:LG)),d=(0,a.computed)((()=>l(e.employee))),s=()=>{n.value=!n.value},c=(o,a)=>{t.emit("update:modelValue",{kpis:e.modelValue.kpis.map(((e,t)=>t===a?{...e,rating:o}:e)),generalComment:e.modelValue.generalComment})},m=(o,a)=>{t.emit("update:modelValue",{kpis:e.modelValue.kpis.map(((e,t)=>t===a?{...e,comment:o}:e)),generalComment:e.modelValue.generalComment})},u=o=>{t.emit("update:modelValue",{kpis:e.modelValue.kpis,generalComment:o})},p=[{id:1,label:o("performance.evaluation_activated")},{id:2,label:o("performance.evaluation_in_progress")},{id:3,label:o("performance.evaluation_completed")}],h=(0,a.computed)((()=>p.find((t=>t.id===e.status)).label));return{toggleForm:s,isCollapsed:n,employeeName:d,profileImgSrc:i,onUpdateRating:c,onUpdateComment:m,onUpdateGeneralComment:u,commentValidators:r,evaluationLabel:h}}};const AG=(0,r.c)(UG,[["render",BG],["__scopeId","data-v-2af3c0f4"]]);var PG=AG;function qG(e){const{$t:t}=Be(),o=t=>e.request({method:"GET",url:`/api/v2/performance/reviews/${t}/kpis`}),a=t=>e.request({method:"GET",url:`/api/v2/performance/reviews/${t}/evaluation/supervisor`}),l=t=>e.request({method:"GET",url:`/api/v2/performance/reviews/${t}/evaluation/employee`}),n=t=>e.request({method:"GET",url:`/api/v2/performance/reviews/${t}/evaluation/final`}),r=(t,o)=>e.request({method:"PUT",url:`/api/v2/performance/reviews/${t}/evaluation/final`,data:{...o,finalComment:""===o.finalComment?null:o.finalComment}}),i=(t,o,a)=>e.request({method:"PUT",url:`/api/v2/performance/reviews/${t}/evaluation/employee`,data:{complete:o,ratings:a.kpis,generalComment:a.generalComment}}),d=(t,o)=>e.request({method:"PUT",url:`/api/v2/performance/reviews/${t}/evaluation/supervisor`,data:{ratings:o.kpis,generalComment:o.generalComment}}),s=e=>e.map((e=>[_o(e.minRating,t("performance.rating_should_be_greater_than_or_equal_to_minValue",{minValue:e.minRating})),ko(e.maxRating,t("performance.rating_should_be_less_than_or_equal_to_maxValue",{maxValue:e.maxRating}))])),c=e=>({kpis:e.map((e=>({kpiId:e.id,rating:null,comment:null}))),generalComment:null}),m=(e,t,o)=>({kpis:o.map((({kpiId:t})=>{const o=e.find((e=>e.kpi.id===t));return{kpiId:t,rating:o?.rating,comment:o?.comment}})),generalComment:t}),u=e=>({details:{empNumber:e.employee.empNumber,firstName:e.employee.firstName,lastName:e.employee.lastName,middleName:e.employee.middleName,terminationId:e.employee.terminationId},jobTitle:e.employee.jobTitle.name,status:e.status}),p=e=>new Map(e?.map((e=>[e.action,e.name])));return{getAllKpis:o,getEmployeeReview:l,getSupervisorReview:a,getFinalReview:n,generateRules:s,generateModel:c,generateReviewerData:u,generateAllowedActions:p,generateEvaluationFormData:m,finalizeReview:r,saveEmployeeReview:i,saveSupervisorReview:d}}const FG={class:"orangehrm-modal-header"},MG={class:"orangehrm-text-center-align"},zG={class:"orangehrm-modal-footer"};function jG(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(a.Teleport,{to:"#app"},[n.show?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-dialog-popup","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",FG,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.confirm_review_submission")),1)])),_:1})]),(0,a.createElementVNode)("div",MG,[(0,a.createVNode)(i,{type:"subtitle-2"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.confirm_review_submission_message")),1)])),_:1})]),(0,a.createElementVNode)("div",zG,[(0,a.createVNode)(d,{"display-type":"ghost",class:"orangehrm-button-margin",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(d,{"display-type":"secondary",class:"orangehrm-button-margin",label:e.$t("general.ok"),onClick:r.onConfirm},null,8,["label","onClick"])])])),_:1},8,["onUpdate:show"])):(0,a.createCommentVNode)("",!0)])}var RG={name:"ReviewConfirmModal",components:{"oxd-dialog":q.OxdDialog},data(){return{show:!1,reject:null,resolve:null}},methods:{showDialog(){return new Promise(((e,t)=>{this.resolve=e,this.reject=t,this.show=!0}))},onConfirm(){this.show=!1,this.resolve&&this.resolve("ok")},onCancel(){this.show=!1,this.resolve&&this.resolve("cancel")}}};const OG=(0,r.c)(RG,[["render",jG],["__scopeId","data-v-a84a2054"]]);var GG=OG;const QG={details:{empNumber:null,firstName:"",lastName:"",middleName:"",terminationId:null},jobTitle:"",status:1,actions:new Map};var HG={components:{"review-summary":CG,"final-evaluation":$G,"evaluation-form":PG,"review-confirm-modal":GG},props:{reviewId:{type:Number,required:!0},status:{type:Number,required:!0},reviewPeriodStart:{type:String,required:!0},reviewPeriodEnd:{type:String,required:!0},dueDate:{type:String,required:!0},isReviewer:{type:Boolean,default:!1}},setup(){const{formRef:e,invalid:t,validate:o}=qc(),a=new P(window.appGlobal.baseUrl,""),{getAllKpis:l,getEmployeeReview:n,getSupervisorReview:r,getFinalReview:i,generateRules:d,generateModel:s,generateReviewerData:c,generateAllowedActions:m,generateEvaluationFormData:u,finalizeReview:p,saveEmployeeReview:h,saveSupervisorReview:g}=qG(a);return{http:a,invalid:t,formRef:e,validate:o,getAllKpis:l,generateRules:d,generateModel:s,generateReviewerData:c,generateAllowedActions:m,generateEvaluationFormData:u,getEmployeeReview:n,getSupervisorReview:r,getFinalReview:i,finalizeReview:p,saveEmployeeReview:h,saveSupervisorReview:g}},data(){return{kpis:[],rules:[],employee:{...QG},employeeReview:{},supervisor:{...QG},supervisorReview:{},isLoading:!1,finalRating:null,finalComment:null,completedDate:null,isFinalizeRequired:!1}},computed:{hasSupervisorUpdateAction(){return this.employee.actions.has("supervisorUpdate")},hasSaveAction(){return this.supervisor.actions.has("save")},hasCompleteAction(){return this.supervisor.actions.has("complete")},hasCancelAction(){return 4!==this.status},hasActions(){return this.hasSupervisorUpdateAction||this.hasSaveAction||this.hasCompleteAction||this.hasCancelAction}},beforeMount(){this.isLoading=!0,this.getAllKpis(this.reviewId).then((e=>{const{data:t}=e.data;return this.kpis=[...t],this.rules=this.generateRules(t),this.employeeReview=this.generateModel(t),this.supervisorReview=this.generateModel(t),this.getEmployeeReview(this.reviewId)})).then((e=>{const{data:t}=e.data,{meta:o}=e.data;return this.employee=this.generateReviewerData(o.reviewer),this.employee.actions=this.generateAllowedActions(o.allowedActions),this.employeeReview=this.generateEvaluationFormData(t,o.generalComment,this.employeeReview.kpis),this.getSupervisorReview(this.reviewId)})).then((e=>{const{data:t}=e.data,{meta:o}=e.data;return this.supervisor=this.generateReviewerData(o.reviewer),this.supervisor.actions=this.generateAllowedActions(o.allowedActions),this.supervisorReview=this.generateEvaluationFormData(t,o.generalComment,this.supervisorReview.kpis),this.getFinalReview(this.reviewId)})).then((e=>{const{data:t}=e.data;this.finalRating=t.finalRating,this.finalComment=t.finalComment,this.completedDate=t.completedDate})).finally((()=>{this.isLoading=!1}))},methods:{onSubmit(e=!1){this.isFinalizeRequired=e,this.$nextTick().then((()=>this.validate())).then((()=>{!0!==this.invalid&&(e?this.$refs.confirmDialog.showDialog().then((e=>{"ok"===e&&this.submitReview(!0)})):this.submitReview(!1))}))},submitReview(e=!1){this.isLoading=!0,this.saveSupervisorReview(this.reviewId,this.supervisorReview).then((()=>{if(this.hasSupervisorUpdateAction)return this.saveEmployeeReview(this.reviewId,!0,this.employeeReview)})).then((()=>this.finalizeReview(this.reviewId,{complete:e,finalRating:this.finalRating,finalComment:this.finalComment,completedDate:this.completedDate}))).then((()=>this.$toast.saveSuccess())).finally((()=>{A()}))},onClickCancel(){U(this.isReviewer?"/performance/searchEvaluatePerformanceReview":"/performance/searchPerformanceReview")}}};const WG=(0,r.c)(HG,[["render",iG],["__scopeId","data-v-ba5e469c"]]);var YG=WG;const JG=e=>((0,a.pushScopeId)("data-v-227da4da"),e=e(),(0,a.popScopeId)(),e),XG={class:"orangehrm-background-container"},KG={class:"orangehrm-card-container"},ZG=JG((()=>(0,a.createElementVNode)("br",null,null,-1))),eQ=JG((()=>(0,a.createElementVNode)("br",null,null,-1))),tQ={key:0},oQ=JG((()=>(0,a.createElementVNode)("br",null,null,-1))),aQ={class:"orangehrm-performance-review-actions"},lQ={key:1},nQ=JG((()=>(0,a.createElementVNode)("br",null,null,-1)));function rQ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("review-confirm-modal"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("review-summary"),c=(0,a.resolveComponent)("evaluation-form"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("final-evaluation"),g=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",XG,[(0,a.createVNode)(i,{ref:"confirmDialog"},null,512),(0,a.createElementVNode)("div",KG,[(0,a.createVNode)(d,{tag:"h5",class:"orangehrm-performance-review-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.performance_review")),1)])),_:1})]),ZG,(0,a.createVNode)(s,{loading:n.isLoading,status:o.status,"due-date":o.dueDate,employee:n.employee.details,"job-title":n.employee.jobTitle,"review-period-end":o.reviewPeriodEnd,"review-period-start":o.reviewPeriodStart,"final-rating":n.finalRating},null,8,["loading","status","due-date","employee","job-title","review-period-end","review-period-start","final-rating"]),eQ,(0,a.createVNode)(g,{ref:"formRef",loading:n.isLoading},{default:(0,a.withCtx)((()=>[o.status<4?((0,a.openBlock)(),(0,a.createElementBlock)("div",tQ,[(0,a.createVNode)(c,{modelValue:n.supervisorReview,"onUpdate:modelValue":t[0]||(t[0]=e=>n.supervisorReview=e),kpis:n.kpis,rules:n.rules,editable:!1,collapsible:!1,collapsed:!0,employee:n.supervisor.details,"job-title":n.supervisor.jobTitle,status:n.supervisor.status,title:e.$t("performance.supervisor_evaluation_by")},null,8,["modelValue","kpis","rules","employee","job-title","status","title"]),oQ,(0,a.createVNode)(c,{modelValue:n.employeeReview,"onUpdate:modelValue":t[3]||(t[3]=e=>n.employeeReview=e),kpis:n.kpis,rules:n.rules,editable:n.employee.status<3,collapsed:!1,collapsible:!0,employee:n.employee.details,"job-title":n.employee.jobTitle,status:n.employee.status,title:e.$t("performance.self_evaluation_by")},{default:(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createElementVNode)("div",aQ,[r.hasCancelAction?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onClickCancel},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0),r.hasSaveAction?((0,a.openBlock)(),(0,a.createBlock)(u,{key:1,"display-type":"ghost",type:"button",label:e.$t("general.save"),onClick:t[1]||(t[1]=e=>r.onSubmit(!1))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.hasCompleteAction?((0,a.openBlock)(),(0,a.createBlock)(u,{key:2,type:"button","display-type":"secondary",label:e.$t("performance.complete"),onClick:t[2]||(t[2]=e=>r.onSubmit(!0))},null,8,["label"])):(0,a.createCommentVNode)("",!0)])])),_:1},512),[[a.vShow,r.hasActions]])])),_:1},8,["modelValue","kpis","rules","editable","employee","job-title","status","title"])])):(0,a.createCommentVNode)("",!0),4===o.status?((0,a.openBlock)(),(0,a.createElementBlock)("div",lQ,[(0,a.createVNode)(c,{modelValue:n.employeeReview,"onUpdate:modelValue":t[4]||(t[4]=e=>n.employeeReview=e),kpis:n.kpis,rules:n.rules,editable:!1,collapsed:!1,collapsible:!0,employee:n.employee.details,"job-title":n.employee.jobTitle,status:n.employee.status,title:e.$t("performance.self_evaluation_by")},null,8,["modelValue","kpis","rules","employee","job-title","status","title"]),nQ,(0,a.createVNode)(c,{modelValue:n.supervisorReview,"onUpdate:modelValue":t[8]||(t[8]=e=>n.supervisorReview=e),kpis:n.kpis,rules:n.rules,editable:!1,collapsible:!0,collapsed:!1,employee:n.supervisor.details,"job-title":n.supervisor.jobTitle,status:n.supervisor.status,title:e.$t("performance.supervisor_evaluation_by")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m),(0,a.createVNode)(h,{"final-rating":n.finalRating,"onUpdate:finalRating":t[5]||(t[5]=e=>n.finalRating=e),"final-comment":n.finalComment,"onUpdate:finalComment":t[6]||(t[6]=e=>n.finalComment=e),"completed-date":n.completedDate,"onUpdate:completedDate":t[7]||(t[7]=e=>n.completedDate=e),status:o.status,"is-required":!1},null,8,["final-rating","final-comment","completed-date","status"])])),_:1},8,["modelValue","kpis","rules","employee","job-title","status","title"])])):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading"])])}const iQ={details:{empNumber:null,firstName:"",lastName:"",terminationId:null},jobTitle:"",status:1,actions:new Map};var dQ={name:"SelfEvaluation",components:{"review-summary":CG,"final-evaluation":$G,"evaluation-form":PG,"review-confirm-modal":GG},props:{reviewId:{type:Number,required:!0},status:{type:Number,required:!0},reviewPeriodStart:{type:String,required:!0},reviewPeriodEnd:{type:String,required:!0},dueDate:{type:String,required:!0}},setup(){const{formRef:e,invalid:t,validate:o}=qc(),a=new P(window.appGlobal.baseUrl,""),{getAllKpis:l,getEmployeeReview:n,getSupervisorReview:r,getFinalReview:i,generateRules:d,generateModel:s,generateReviewerData:c,generateAllowedActions:m,generateEvaluationFormData:u,finalizeReview:p,saveEmployeeReview:h}=qG(a);return{http:a,invalid:t,formRef:e,validate:o,getAllKpis:l,generateRules:d,generateModel:s,generateReviewerData:c,generateAllowedActions:m,generateEvaluationFormData:u,getEmployeeReview:n,getSupervisorReview:r,getFinalReview:i,finalizeReview:p,saveEmployeeReview:h}},data(){return{kpis:[],rules:[],employee:{...iQ},employeeReview:{},supervisor:{...iQ},supervisorReview:{},isLoading:!1,finalRating:null,finalComment:null,completedDate:null}},computed:{hasSaveAction(){return this.employee.actions.has("save")},hasCompleteAction(){return this.employee.actions.has("complete")},hasCancelAction(){return!(4===this.status||3===this.employee?.status)},hasActions(){return this.hasSaveAction||this.hasCancelAction||this.hasCompleteAction}},beforeMount(){this.isLoading=!0,this.getAllKpis(this.reviewId).then((e=>{const{data:t}=e.data;return this.kpis=[...t],this.rules=this.generateRules(t),this.employeeReview=this.generateModel(t),this.supervisorReview=this.generateModel(t),this.getEmployeeReview(this.reviewId)})).then((e=>{const{data:t}=e.data,{meta:o}=e.data;return this.employee=this.generateReviewerData(o.reviewer),this.employee.actions=this.generateAllowedActions(o.allowedActions),this.employeeReview=this.generateEvaluationFormData(t,o.generalComment,this.employeeReview.kpis),this.getSupervisorReview(this.reviewId)})).then((e=>{const{data:t}=e.data,{meta:o}=e.data;return this.supervisor=this.generateReviewerData(o.reviewer),this.supervisor.actions=this.generateAllowedActions(o.allowedActions),this.supervisorReview=this.generateEvaluationFormData(t,o.generalComment,this.supervisorReview.kpis),4===this.status?this.getFinalReview(this.reviewId):{}})).then((e=>{if(0!==Object.keys(e).length){const{data:t}=e.data;this.finalRating=t.finalRating,this.finalComment=t.finalComment,this.completedDate=t.completedDate}})).finally((()=>{this.isLoading=!1}))},methods:{onSubmit(e=!1){this.$nextTick().then((()=>this.validate())).then((async()=>{!0!==this.invalid&&(e?this.$refs.confirmDialog.showDialog().then((e=>{"ok"===e&&this.submitReview(!0)})):this.submitReview(!1))}))},submitReview(e=!1){this.isLoading=!0,this.saveEmployeeReview(this.reviewId,e,this.employeeReview).then((()=>this.$toast.saveSuccess())).finally((()=>{A()}))},onClickCancel(){U("/performance/myPerformanceReview")}}};const sQ=(0,r.c)(dQ,[["render",rQ],["__scopeId","data-v-227da4da"]]);var cQ=sQ,mQ={"my-tracker":fz,"employee-trackers":Sz,"kpi-search":nj,"kpi-save":Hz,"kpi-edit":Pz,"add-review":fj,"edit-review":_j,"performance-tracker-list":Pj,"performance-tracker-save":Wj,"performance-tracker-edit":tR,"my-reviews":wR,"review-list":qR,"review-search":JR,"employee-tracker-logs":ZO,"admin-evaluation":YG,"self-evaluation":cQ};const uQ=e=>((0,a.pushScopeId)("data-v-2ed6953e"),e=e(),(0,a.popScopeId)(),e),pQ={class:"orangehrm-background-container"},hQ=uQ((()=>(0,a.createElementVNode)("br",null,null,-1))),gQ={class:"orangehrm-corporate-directory"},vQ={class:"orangehrm-paper-container"},fQ={ref:"scrollerRef",class:"orangehrm-container"},yQ=uQ((()=>(0,a.createElementVNode)("div",{class:"orangehrm-bottom-container"},null,-1))),CQ={key:0,class:"orangehrm-corporate-directory-sidebar"};function VQ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("submit-button"),g=(0,a.resolveComponent)("oxd-form-actions"),v=(0,a.resolveComponent)("oxd-form"),f=(0,a.resolveComponent)("oxd-table-filter"),y=(0,a.resolveComponent)("table-header"),C=(0,a.resolveComponent)("employee-details"),V=(0,a.resolveComponent)("summary-card"),b=(0,a.resolveComponent)("oxd-loading-spinner"),x=(0,a.resolveComponent)("summary-card-details");return(0,a.openBlock)(),(0,a.createElementBlock)("div",pQ,[(0,a.createVNode)(f,{"filter-title":e.$t("general.directory")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(v,{onSubmitValid:r.onSearch,onReset:r.onReset},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:e.filters.employeeNumber,"onUpdate:modelValue":t[0]||(t[0]=t=>e.filters.employeeNumber=t),rules:l.rules.employee,"api-path":"/api/v2/directory/employees"},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.filters.jobTitleId,"onUpdate:modelValue":t[1]||(t[1]=t=>e.filters.jobTitleId=t),type:"select",label:e.$t("general.job_title"),options:o.jobTitles},null,8,["modelValue","label","options"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:e.filters.locationId,"onUpdate:modelValue":t[2]||(t[2]=t=>e.filters.locationId=t),type:"select",label:e.$t("general.location"),options:o.locations},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(g,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{label:e.$t("general.reset"),"display-type":"ghost",type:"reset"},null,8,["label"]),(0,a.createVNode)(h,{label:e.$t("general.search")},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid","onReset"])])),_:1},8,["filter-title"]),hQ,(0,a.createElementVNode)("div",gQ,[(0,a.createElementVNode)("div",vQ,[(0,a.createVNode)(y,{selected:0,total:e.total,loading:!1,"show-divider":!1},null,8,["total"]),(0,a.createElementVNode)("div",fQ,[(0,a.createVNode)(c,{cols:r.colSize},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.employees,((t,o)=>((0,a.openBlock)(),(0,a.createBlock)(d,{key:t},{default:(0,a.withCtx)((()=>[r.isMobile&&e.currentIndex===o?((0,a.openBlock)(),(0,a.createBlock)(V,{key:0,"employee-id":t.id,"employee-name":t.employeeName,"employee-sub-unit":t.employeeSubUnit,"employee-location":t.employeeLocation,"employee-designation":t.employeeJobTitle,onClick:e=>r.showEmployeeDetails(o)},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C,{"employee-id":t.id,"is-mobile":r.isMobile},null,8,["employee-id","is-mobile"])])),_:2},1032,["employee-id","employee-name","employee-sub-unit","employee-location","employee-designation","onClick"])):((0,a.openBlock)(),(0,a.createBlock)(V,{key:1,"employee-id":t.id,"employee-name":t.employeeName,"employee-sub-unit":t.employeeSubUnit,"employee-location":t.employeeLocation,"employee-designation":t.employeeJobTitle,onClick:e=>r.showEmployeeDetails(o)},null,8,["employee-id","employee-name","employee-sub-unit","employee-location","employee-designation","onClick"]))])),_:2},1024)))),128))])),_:1},8,["cols"]),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,class:"orangehrm-container-loader"})):(0,a.createCommentVNode)("",!0)],512),yQ]),r.isEmployeeSelected&&!1===r.isMobile?((0,a.openBlock)(),(0,a.createElementBlock)("div",CQ,[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(x,{"employee-designation":e.employees[e.currentIndex].employeeJobTitle,"employee-id":e.employees[e.currentIndex].id,"employee-location":e.employees[e.currentIndex].employeeLocation,"employee-name":e.employees[e.currentIndex].employeeName,"employee-sub-unit":e.employees[e.currentIndex].employeeSubUnit,onHideDetails:t[3]||(t[3]=e=>r.hideEmployeeDetails())},null,8,["employee-designation","employee-id","employee-location","employee-name","employee-sub-unit"])])),_:1})])):(0,a.createCommentVNode)("",!0)])])}const bQ={class:"orangehrm-directory-card-body"};function xQ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("profile-picture"),c=(0,a.resolveComponent)("oxd-sheet");return(0,a.openBlock)(),(0,a.createBlock)(c,{gutters:!1,class:"orangehrm-directory-card"},{default:(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createElementVNode)("div",{class:"orangehrm-directory-card-top",onClick:t[0]||(t[0]=t=>e.$emit("hide-details",!1))},[(0,a.createVNode)(i,{name:"arrow-right"})],512),[[a.vShow,o.showBackButton]]),(0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.cardTitleClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.employeeName),1)])),_:1},8,["class"]),(0,a.createVNode)(s,{id:o.employeeId},null,8,["id"]),(0,a.withDirectives)((0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.cardSubTitleClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.employeeDesignation),1)])),_:1},8,["class"]),[[a.vShow,o.employeeDesignation]]),(0,a.withDirectives)((0,a.createElementVNode)("div",bQ,[(0,a.createVNode)(i,{class:"orangehrm-directory-card-icon",name:"geo-alt-fill"}),(0,a.createElementVNode)("div",null,[(0,a.withDirectives)((0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.cardDescriptionClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.employeeSubUnit),1)])),_:1},8,["class"]),[[a.vShow,o.employeeSubUnit]]),(0,a.withDirectives)((0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.cardDescriptionClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.employeeLocation),1)])),_:1},8,["class"]),[[a.vShow,o.employeeLocation]])])],512),[[a.vShow,o.employeeSubUnit||o.employeeLocation]]),(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)])),_:3})}const wQ={class:"orangehrm-profile-picture"},NQ=["src"];function _Q(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",wQ,[(0,a.createElementVNode)("img",{src:l.imgSrc,alt:"Profile Picture",class:"orangehrm-profile-picture-img"},null,8,NQ)])}const kQ=`${window.appGlobal.publicPath}/images/default-photo.png`;var SQ={name:"ProfilePicture",props:{id:{type:Number,required:!0}},setup(e){const t=(0,a.computed)((()=>e.id?`${window.appGlobal.baseUrl}/pim/viewPhoto/empNumber/${e.id}`:kQ));return{imgSrc:t}}};const $Q=(0,r.c)(SQ,[["render",_Q],["__scopeId","data-v-4febd1f8"]]);var DQ=$Q,EQ={name:"SummaryCard",components:{"oxd-icon":q.OxdIcon,"oxd-sheet":q.OxdSheet,"profile-picture":DQ},props:{employeeId:{type:Number,required:!0},employeeName:{type:String,required:!0},employeeDesignation:{type:String,required:!1,default:null},employeeSubUnit:{type:String,default:""},employeeLocation:{type:String,default:""},showBackButton:{type:Boolean,default:!1}},emits:["hide-details"],computed:{hasDefaultSlot(){return!!this.$slots.default},cardTitleClasses(){return{"orangehrm-directory-card-header":!0,"--break-words":!this.hasDefaultSlot}},cardSubTitleClasses(){return{"orangehrm-directory-card-subtitle":!0,"--break-words":!this.hasDefaultSlot}},cardDescriptionClasses(){return{"orangehrm-directory-card-description":!0,"--break-words":!this.hasDefaultSlot}}}};const TQ=(0,r.c)(EQ,[["render",xQ],["__scopeId","data-v-29a325b3"]]);var IQ=TQ;const BQ={class:"orangehrm-directory-card-rounded-body"},LQ={class:"orangehrm-directory-card-icon"},UQ={class:"orangehrm-directory-card-icon"},AQ={class:"orangehrm-directory-card-hover-body"},PQ={class:"orangehrm-directory-card-hover-body orangehrm-directory-card-hover-icon"},qQ={class:"orangehrm-directory-card-hover-body"},FQ={class:"orangehrm-directory-card-hover-body orangehrm-directory-card-hover-icon"};function MQ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("qr-code");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.withDirectives)((0,a.createVNode)(i,null,null,512),[[a.vShow,n.employeeWorkEmail||n.employeeWorkTelephone]]),(0,a.withDirectives)((0,a.createElementVNode)("div",BQ,[(0,a.withDirectives)((0,a.createElementVNode)("div",LQ,[(0,a.createVNode)(d,{"display-type":"success",name:"telephone-fill",onClick:(0,a.withModifiers)(r.openClientTelephone,["stop"])},null,8,["onClick"])],512),[[a.vShow,n.employeeWorkTelephone]]),(0,a.withDirectives)((0,a.createElementVNode)("div",UQ,[(0,a.createVNode)(d,{"display-type":"danger",name:"envelope-fill",onClick:(0,a.withModifiers)(r.openClientEmail,["stop"])},null,8,["onClick"])],512),[[a.vShow,n.employeeWorkEmail]])],512),[[a.vShow,n.employeeWorkEmail||n.employeeWorkTelephone]]),(0,a.withDirectives)((0,a.createElementVNode)("div",{class:"orangehrm-directory-card-hover",onMouseleave:t[0]||(t[0]=e=>n.showTelephoneClip=!1),onMouseover:t[1]||(t[1]=e=>n.showTelephoneClip=!0)},[(0,a.createElementVNode)("div",AQ,[(0,a.createVNode)(s,{type:"toast-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("pim.work_telephone")),1)])),_:1}),(0,a.createVNode)(s,{ref:"cloneTelephone",type:"toast-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.employeeWorkTelephone),1)])),_:1},512)]),(0,a.createElementVNode)("div",PQ,[(0,a.withDirectives)((0,a.createVNode)(d,{name:"files",onClick:(0,a.withModifiers)(r.copyTelephone,["stop"])},null,8,["onClick"]),[[a.vShow,n.showTelephoneClip||o.isMobile]])])],544),[[a.vShow,n.employeeWorkTelephone]]),(0,a.withDirectives)((0,a.createVNode)(i,null,null,512),[[a.vShow,n.employeeWorkTelephone]]),(0,a.withDirectives)((0,a.createElementVNode)("div",{class:"orangehrm-directory-card-hover",onMouseleave:t[2]||(t[2]=e=>n.showEmailClip=!1),onMouseover:t[3]||(t[3]=e=>n.showEmailClip=!0)},[(0,a.createElementVNode)("div",qQ,[(0,a.createVNode)(s,{type:"toast-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.work_email")),1)])),_:1}),(0,a.createVNode)(s,{ref:"cloneEmail",type:"toast-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.employeeWorkEmail),1)])),_:1},512)]),(0,a.createElementVNode)("div",FQ,[(0,a.withDirectives)((0,a.createVNode)(d,{name:"files",onClick:(0,a.withModifiers)(r.copyEmail,["stop"])},null,8,["onClick"]),[[a.vShow,n.showEmailClip||o.isMobile]])])],544),[[a.vShow,n.employeeWorkEmail]]),(0,a.withDirectives)((0,a.createVNode)(i,null,null,512),[[a.vShow,n.employeeWorkEmail]]),n.qrPayload&&(n.employeeWorkTelephone||n.employeeWorkEmail)?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,value:n.qrPayload},null,8,["value"])):(0,a.createCommentVNode)("",!0)],64)}var zQ=o(916),jQ={name:"QRCode",props:{value:{type:String,required:!0}},setup(e){const t=(0,a.ref)(""),o=async()=>{const o=await(0,zQ.g7)(String(e.value),{type:"image/png",width:140});t.value=o||""};return(0,a.watch)((()=>e.value),o),(0,a.onBeforeMount)(o),()=>(0,a.h)("img",{src:t.value,class:"orangehrm-qr-code"})}};const RQ=(0,r.c)(jQ,[["__scopeId","data-v-2f59483b"]]);var OQ=RQ,GQ={name:"EmployeeDetails",components:{"qr-code":OQ,"oxd-divider":q.OxdDivider},props:{employeeId:{type:Number,required:!0},isMobile:{type:Boolean,default:!1}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/directory/employees");return{http:e}},data(){return{employeeWorkTelephone:null,employeeWorkEmail:null,showTelephoneClip:!1,showEmailClip:!1,toGoEmail:null,qrPayload:null,employeeName:null}},watch:{employeeId:function(){this.callEmployeeDetailsApi()}},beforeMount(){this.callEmployeeDetailsApi()},methods:{openClientTelephone(){window.location.href="tel:"+this.employeeWorkTelephone},openClientEmail(){window.location.href="mailto:"+this.employeeWorkEmail},copyEmail(){navigator.clipboard?.writeText(this.employeeWorkEmail)},copyTelephone(){navigator.clipboard?.writeText(this.employeeWorkTelephone)},callEmployeeDetailsApi(){this.http.get(this.employeeId,{model:"detailed"}).then((e=>{const{data:t}=e.data;this.employeeName={firstName:t.firstName,middleName:t.middleName,lastName:t.lastName},this.employeeWorkEmail=t.contactInfo?.workEmail,this.employeeWorkTelephone=t.contactInfo?.workTelephone,this.generateQrPayload()}))},generateQrPayload(){let e="";e+=`N:${this.employeeName?.lastName||""};`,e+=`${this.employeeName?.firstName||""};`,e+=`${this.employeeName?.middleName||""};\n`,this.employeeWorkTelephone&&(e+=`TEL;CELL:${this.employeeWorkTelephone}\n`),this.employeeWorkEmail&&(e+=`EMAIL;WORK;INTERNET:${this.employeeWorkEmail}\n`),this.qrPayload=`BEGIN:VCARD\nVERSION:3.0\n${e}END:VCARD\n`}}};const QQ=(0,r.c)(GQ,[["render",MQ],["__scopeId","data-v-92ebf700"]]);var HQ=QQ;function WQ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-details"),d=(0,a.resolveComponent)("summary-card");return(0,a.openBlock)(),(0,a.createBlock)(d,{"employee-id":o.employeeId,"show-back-button":!0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{"employee-id":o.employeeId},null,8,["employee-id"])])),_:1},8,["employee-id"])}var YQ={name:"SummaryCardDetails",components:{"employee-details":HQ,"summary-card":IQ},props:{employeeId:{type:Number,required:!0}}};const JQ=(0,r.c)(YQ,[["render",WQ]]);var XQ=JQ;const KQ={employeeNumber:null,jobTitleId:null,locationId:null};var ZQ={name:"CorporateDirectory",components:{"summary-card":IQ,"oxd-loading-spinner":q.OxdSpinner,"employee-details":HQ,"summary-card-details":XQ,"employee-autocomplete":$a},props:{jobTitles:{type:Array,default:()=>[]},locations:{type:Array,default:()=>[]}},setup(){const{$t:e}=Be(),{noRecordsFound:t}=Nt(),o=(0,q.useResponsive)(),l={employee:[Wt(100),So]},n=t=>t.map((t=>({id:t.empNumber,employeeName:`${t.firstName} ${t.middleName} ${t.lastName} `+(t.terminationId?e("general.past_employee"):""),employeeJobTitle:t.jobTitle?.isDeleted?`${t.jobTitle?.title} `+e("general.deleted"):t.jobTitle?.title,employeeSubUnit:t.subunit?.name,employeeLocation:t.location?.name}))),r=new P(window.appGlobal.baseUrl,"/api/v2/directory/employees"),i=14,d=(0,a.reactive)({total:0,offset:0,employees:[],currentIndex:-1,isLoading:!1,filters:{...KQ}}),s=()=>{d.isLoading=!0,r.getAll({limit:i,offset:d.offset,locationId:d.filters.locationId?.id,empNumber:d.filters.employeeNumber?.id,jobTitleId:d.filters.jobTitleId?.id}).then((e=>{const{data:o,meta:a}=e.data;d.total=a?.total||0,Array.isArray(o)&&(d.employees=[...d.employees,...n(o)]),0===d.total&&t()})).finally((()=>d.isLoading=!1))},{scrollerRef:c}=gO((()=>{d.employees.length>=d.total||(d.offset+=i,s())}));return{rules:l,fetchData:s,scrollerRef:c,...(0,a.toRefs)(d),...(0,a.toRefs)(o)}},computed:{isMobile(){return this.windowWidth<800},isEmployeeSelected(){return this.currentIndex>=0},oxdGridClasses(){return{"orangehrm-container":!0,"orangehrm-container-min-display":this.isEmployeeSelected}},colSize(){return this.windowWidth>=1920?this.isEmployeeSelected?5:7:this.isEmployeeSelected?3:4}},beforeMount(){this.fetchData()},methods:{hideEmployeeDetails(){this.currentIndex=-1},showEmployeeDetails(e){this.currentIndex!=e?this.currentIndex=e:this.hideEmployeeDetails()},onSearch(){this.hideEmployeeDetails(),this.employees=[],this.offset=0,this.fetchData()},onReset(){this.hideEmployeeDetails(),this.employees=[],this.offset=0,this.filters={...KQ},this.fetchData()}}};const eH=(0,r.c)(ZQ,[["render",VQ],["__scopeId","data-v-2ed6953e"]]);var tH=eH,oH={"corporate-directory-employee-list":tH};const aH={class:"orangehrm-login-form"},lH={class:"orangehrm-login-error"},nH=["value"],rH={class:"orangehrm-login-forgot"},iH={class:"orangehrm-login-footer"},dH={key:0,class:"orangehrm-login-footer-sm"},sH={href:"https://www.linkedin.com/company/orangehrm/mycompany/",target:"_blank"},cH={href:"https://www.facebook.com/OrangeHRM/",target:"_blank"},mH={href:"https://twitter.com/orangehrm?lang=en",target:"_blank"},uH={href:"https://www.youtube.com/c/OrangeHRMInc",target:"_blank"};function pH(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-alert"),s=(0,a.resolveComponent)("oxd-sheet"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form-actions"),h=(0,a.resolveComponent)("oxd-form"),g=(0,a.resolveComponent)("oxd-divider"),v=(0,a.resolveComponent)("social-media-auth"),f=(0,a.resolveComponent)("oxd-icon"),y=(0,a.resolveComponent)("login-layout");return(0,a.openBlock)(),(0,a.createBlock)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-login-title",tag:"h5"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.login")),1)])),_:1}),(0,a.createElementVNode)("div",aH,[(0,a.createElementVNode)("div",lH,[(0,a.createVNode)(d,{show:null!==o.error,message:o.error?.message||"",type:"error"},null,8,["show","message"]),o.isDemoMode?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,type:"gray-lighten-2",class:"orangehrm-demo-credentials"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("Username : Admin")])),_:1}),(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("Password : admin123")])),_:1})])),_:1})):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(h,{ref:"loginForm",method:"post",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,nH),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.username,"onUpdate:modelValue":t[0]||(t[0]=e=>n.username=e),name:"username",label:e.$t("general.username"),"label-icon":"person",placeholder:e.$t("auth.username"),rules:n.rules.username,autofocus:""},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.password,"onUpdate:modelValue":t[1]||(t[1]=e=>n.password=e),name:"password",label:e.$t("general.password"),"label-icon":"key",placeholder:e.$t("auth.password"),type:"password",rules:n.rules.password},null,8,["modelValue","label","placeholder","rules"])])),_:1}),(0,a.createVNode)(p,{class:"orangehrm-login-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{class:"orangehrm-login-button","display-type":"main",label:e.$t("auth.login"),type:"submit"},null,8,["label"])])),_:1}),(0,a.createElementVNode)("div",rH,[(0,a.createVNode)(i,{class:"orangehrm-login-forgot-header",onClick:r.navigateUrl},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.forgot_password"))+"? ",1)])),_:1},8,["onClick"])])])),_:1},8,["action","onSubmitValid"]),o.authenticators.length>0?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createVNode)(g,{class:"orangehrm-login-seperator"}),(0,a.createVNode)(v,{authenticators:o.authenticators},null,8,["authenticators"])],64)):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",iH,[o.showSocialMedia?((0,a.openBlock)(),(0,a.createElementBlock)("div",dH,[(0,a.createElementVNode)("a",sH,[(0,a.createVNode)(f,{type:"svg",class:"orangehrm-sm-icon",name:"linkedinFill"})]),(0,a.createElementVNode)("a",cH,[(0,a.createVNode)(f,{type:"svg",class:"orangehrm-sm-icon",name:"facebookFill"})]),(0,a.createElementVNode)("a",mH,[(0,a.createVNode)(f,{type:"svg",class:"orangehrm-sm-icon",name:"twitterFill"})]),(0,a.createElementVNode)("a",uH,[(0,a.createVNode)(f,{type:"svg",class:"orangehrm-sm-icon",name:"youtubeFill"})])])):(0,a.createCommentVNode)("",!0),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])])),_:3})}const hH={class:"orangehrm-login-layout"},gH={class:"orangehrm-login-layout-blob"},vH={class:"orangehrm-login-container"},fH={class:"orangehrm-login-slot-wrapper"},yH={class:"orangehrm-login-slot"},CH={class:"orangehrm-login-logo-mobile"},VH=["src"],bH={class:"orangehrm-login-logo"},xH=["src"];function wH(e,t,o,l,n,r){const i=(0,a.resolveComponent)("login-branding");return(0,a.openBlock)(),(0,a.createElementBlock)("div",hH,[(0,a.createElementVNode)("div",gH,[(0,a.createElementVNode)("div",vH,[(0,a.createElementVNode)("div",fH,[(0,a.createVNode)(i,{"img-src":o.loginBannerSrc},null,8,["img-src"]),(0,a.createElementVNode)("div",yH,[(0,a.createElementVNode)("div",CH,[(0,a.createElementVNode)("img",{src:o.loginLogoSrc,alt:"orangehrm-logo"},null,8,VH)]),(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)])])]),(0,a.createElementVNode)("div",bH,[(0,a.createElementVNode)("img",{src:o.loginLogoSrc,alt:"orangehrm-logo"},null,8,xH)])])])}var NH={name:"LoginLayout",components:{"login-branding":TB},props:{loginLogoSrc:{type:String,required:!0},loginBannerSrc:{type:String,required:!0}}};const _H=(0,r.c)(NH,[["render",wH],["__scopeId","data-v-6adfd385"]]);var kH=_H;const SH={class:"orangehrm-social-auth"};function $H(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("auth-button");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",null,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-social-auth-header"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.or_login_with")),1)])),_:1})]),(0,a.createElementVNode)("div",SH,[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.socialAuthenticators,(e=>((0,a.openBlock)(),(0,a.createBlock)(d,{key:e.id,label:e.label,style:(0,a.normalizeStyle)({background:"url("+e.backgroundImage+") no-repeat left center","background-size":"contain","text-align":"center",padding:"1px"}),onClick:(0,a.withModifiers)((t=>r.onClickAction(e.id)),["prevent"])},null,8,["label","style","onClick"])))),128))])],64)}var DH={name:"AuthButton",props:{label:{type:String,required:!0}},setup(e){return()=>(0,a.h)("a",{title:e.label,class:"orangehrm-auth-button"},(0,a.h)(q.OxdText,{tag:"p",class:"orangehrm-auth-button-text"},(()=>e.label)))}};const EH=(0,r.c)(DH,[["__scopeId","data-v-76e801aa"]]);var TH=EH,IH={name:"SocialMediaAuth",components:{"auth-button":TH},props:{authenticators:{type:Array,default:()=>[]}},setup(e){const t=new P(window.appGlobal.baseUrl,""),o=(0,a.computed)((()=>e.authenticators.map((e=>({...e,backgroundImage:l(e.url)}))))),l=e=>{const t=e.toLowerCase();switch(!0){case t.includes("google"):return`${window.appGlobal.publicPath}/images/google.svg`;case t.includes("microsoft"):return`${window.appGlobal.publicPath}/images/microsoft.svg`;case t.includes("okta"):return`${window.appGlobal.publicPath}/images/okta.svg`;case t.includes("keycloak"):return`${window.appGlobal.publicPath}/images/keycloak.svg`;case t.includes("auth0"):return`${window.appGlobal.publicPath}/images/auth0.svg`;default:return`${window.appGlobal.publicPath}/images/default.svg`}};return{socialAuthenticators:o,http:t}},methods:{onClickAction(e){U("/openidauth/openIdCredentials/{providerId}",{providerId:e})}}};const BH=(0,r.c)(IH,[["render",$H],["__scopeId","data-v-db633ee6"]]);var LH=BH,UH={components:{"oxd-icon":q.OxdIcon,"oxd-alert":q.OxdAlert,"oxd-sheet":q.OxdSheet,"login-layout":kH,"social-media-auth":LH},props:{error:{type:Object,default:()=>null},token:{type:String,required:!0},showSocialMedia:{type:Boolean,default:!0},isDemoMode:{type:Boolean,default:!1},authenticators:{type:Array,default:()=>[]}},data(){return{username:"",password:"",rules:{username:[Ht],password:[Ht]},submitted:!1}},computed:{submitUrl(){return L("/auth/validate")}},beforeMount(){setTimeout((()=>{A()}),12e5)},methods:{onSubmit(){this.submitted||(this.submitted=!0,this.$refs.loginForm.$el.submit())},navigateUrl(){U("/auth/requestPasswordResetCode")}}};const AH=(0,r.c)(UH,[["render",pH],["__scopeId","data-v-0af708be"]]);var PH=AH;function qH(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-alert");return(0,a.openBlock)(),(0,a.createBlock)(i,{show:!0,type:"error",message:e.$t("auth.credential_required")},null,8,["message"])}var FH={components:{"oxd-alert":q.OxdAlert}};const MH=(0,r.c)(FH,[["render",qH]]);var zH=MH;const jH={class:"orangehrm-forgot-password-container"},RH={class:"orangehrm-forgot-password-wrapper"},OH={class:"orangehrm-card-container"},GH=["value"],QH={class:"orangehrm-forgot-password-buttons"};function HH(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("card-note"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("password-strength-indicator"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",jH,[(0,a.createElementVNode)("div",RH,[(0,a.createElementVNode)("div",OH,[(0,a.createVNode)(h,{ref:"resetForm",method:"post",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.reset_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(s,{"note-text":e.$t("auth.set_new_password"),class:"orangehrm-forgot-password-card-note"},null,8,["note-text"]),(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,GH),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{value:o.username,label:e.$t("auth.username"),readonly:"",name:"username","label-icon":"person"},null,8,["value","label"])])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-forgot-password-row"},{default:(0,a.withCtx)((()=>[n.user.newPassword?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"password-strength":l.passwordStrength},null,8,["password-strength"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,{modelValue:n.user.newPassword,"onUpdate:modelValue":t[0]||(t[0]=e=>n.user.newPassword=e),rules:n.rules.newPassword,label:e.$t("auth.new_password"),placeholder:e.$t("auth.password"),name:"password",type:"password","label-icon":"key",autocomplete:"off"},null,8,["modelValue","rules","label","placeholder"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.user.confirmPassword,"onUpdate:modelValue":t[1]||(t[1]=e=>n.user.confirmPassword=e),rules:n.rules.confirmPassword,placeholder:e.$t("auth.password"),label:e.$t("general.confirm_password"),type:"password","label-icon":"key",autocomplete:"off",name:"confirmPassword"},null,8,["modelValue","rules","placeholder","label"])])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",QH,[(0,a.createVNode)(p,{label:e.$t("general.save"),size:"large",type:"submit","display-type":"secondary",class:"orangehrm-forgot-password-button"},null,8,["label"])])])),_:1},8,["action","onSubmitValid"])])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}function WH(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon");return(0,a.openBlock)(),(0,a.createBlock)(i,{class:(0,a.normalizeClass)({"orangehrm-card-note":!0,"orangehrm-card-note--background":o.hasNote,"orangehrm-card-note--icon":o.hasNoteIcon})},{default:(0,a.withCtx)((()=>[o.hasNote?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"orangehrm-sub-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.note"))+": ",1)])),_:1})):(0,a.createCommentVNode)("",!0),o.hasNoteIcon?((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,tag:"span",class:"orangehrm-card-note-icon"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{name:"exclamation-triangle",class:"orangehrm-card-icon"})])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(i,{class:(0,a.normalizeClass)({"orangehrm-card-note-text":o.hasNoteIcon})},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.noteText),1)])),_:1},8,["class"])])),_:1},8,["class"])}var YH={name:"CardNote",components:{"oxd-icon":q.OxdIcon},props:{noteText:{type:String,required:!0},hasNote:{type:Boolean,default:!1},hasNoteIcon:{type:Boolean,required:!1}}};const JH=(0,r.c)(YH,[["render",WH],["__scopeId","data-v-1dd62c7a"]]);var XH=JH,KH={name:"ResetPassword",components:{"card-note":XH,"password-strength-indicator":Ra},props:{username:{type:String,required:!0},token:{type:String,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,""),{passwordStrength:t,validatePassword:o}=Fa(e);return{http:e,passwordStrength:t,validatePassword:o}},data(){return{user:{username:"",newPassword:"",confirmPassword:""},rules:{newPassword:[Ht,Wt(64),(0,q.promiseDebounce)(this.validatePassword,500)],confirmPassword:[Ht,Wt(64),e=>!!e&&e===this.user.newPassword||this.$t("general.passwords_do_not_match")]}}},computed:{submitUrl(){return L("/auth/resetPassword")}},methods:{onSubmit(){this.$refs.resetForm.$el.submit()}}};const ZH=(0,r.c)(KH,[["render",HH],["__scopeId","data-v-849d62a0"]]);var eW=ZH;const tW={class:"orangehrm-forgot-password-container"},oW={class:"orangehrm-forgot-password-wrapper"},aW={class:"orangehrm-card-container"},lW={class:"orangehrm-login-error"},nW=["value"],rW=["value"],iW={class:"orangehrm-forgot-password-buttons"};function dW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-alert"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("password-strength-indicator"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",tW,[(0,a.createElementVNode)("div",oW,[(0,a.createElementVNode)("div",aW,[(0,a.createVNode)(h,{ref:"resetForm",method:"post",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.change_weak_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",lW,[(0,a.createVNode)(s,{show:!0,message:o.invalidCode?e.$t("auth.invalid_password_reset_code"):o.error?.message||e.$t("auth.password_not_strong"),type:"error"},null,8,["message"])]),o.invalidCode?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createElementVNode)("input",{name:"resetCode",value:o.code,type:"hidden"},null,8,nW),(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,rW),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{value:o.username,label:e.$t("auth.username"),readonly:"",name:"username","label-icon":"person"},null,8,["value","label"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.user.currentPassword,"onUpdate:modelValue":t[0]||(t[0]=e=>n.user.currentPassword=e),rules:n.rules.currentPassword,label:e.$t("pim.current_password"),type:"password","label-icon":"key",autocomplete:"off",name:"currentPassword"},null,8,["modelValue","rules","label"])])),_:1}),(0,a.createVNode)(m,{class:"orangehrm-forgot-password-row"},{default:(0,a.withCtx)((()=>[n.user.newPassword?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"password-strength":l.passwordStrength},null,8,["password-strength"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,{modelValue:n.user.newPassword,"onUpdate:modelValue":t[1]||(t[1]=e=>n.user.newPassword=e),rules:n.rules.newPassword,label:e.$t("auth.new_password"),placeholder:e.$t("auth.password"),name:"password",type:"password","label-icon":"key",autocomplete:"off"},null,8,["modelValue","rules","label","placeholder"])])),_:1}),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.user.confirmPassword,"onUpdate:modelValue":t[2]||(t[2]=e=>n.user.confirmPassword=e),rules:n.rules.confirmPassword,placeholder:e.$t("auth.password"),label:e.$t("general.confirm_password"),type:"password","label-icon":"key",autocomplete:"off",name:"confirmPassword"},null,8,["modelValue","rules","placeholder","label"])])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",iW,[(0,a.createVNode)(p,{label:e.$t("general.save"),size:"large",type:"submit","display-type":"secondary",class:"orangehrm-forgot-password-button"},null,8,["label"])])],64))])),_:1},8,["action","onSubmitValid"])])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var sW={name:"ResetWeakPassword",components:{"password-strength-indicator":Ra,"oxd-alert":q.OxdAlert},props:{username:{type:String,required:!0},code:{type:String,required:!0},token:{type:String,required:!0},error:{type:Object,default:()=>null},invalidCode:{type:Boolean,default:()=>!1}},setup(){const e=new P(window.appGlobal.baseUrl,""),{passwordStrength:t,validatePassword:o}=Fa(e);return{http:e,passwordStrength:t,validatePassword:o}},data(){return{user:{username:"",currentPassword:"",confirmPassword:""},rules:{currentPassword:[Ht,Wt(64)],newPassword:[Ht,Wt(64),(0,q.promiseDebounce)(this.validatePassword,500)],confirmPassword:[Ht,Wt(64),e=>!!e&&e===this.user.newPassword||this.$t("general.passwords_do_not_match")]}}},computed:{submitUrl(){return L("/auth/resetWeakPassword")}},methods:{onSubmit(){this.$refs.resetForm.$el.submit()}}};const cW=(0,r.c)(sW,[["render",dW],["__scopeId","data-v-93988042"]]);var mW=cW;const uW={class:"orangehrm-forgot-password-container"},pW={class:"orangehrm-forgot-password-wrapper"},hW={class:"orangehrm-card-container"};function gW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("card-note");return(0,a.openBlock)(),(0,a.createElementBlock)("div",uW,[(0,a.createElementVNode)("div",pW,[(0,a.createElementVNode)("div",hW,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-forgot-password-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.reset_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(s,{"note-text":e.$t("auth.reset_password_token_expired_note"),class:"orangehrm-forgot-password-card-note","has-note-icon":""},null,8,["note-text"]),(0,a.createVNode)(i,{class:"orangehrm-forgot-password-reset"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"span",class:"orangehrm-forgot-password-reset--link",onClick:r.navigateUrl},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.click_here")),1)])),_:1},8,["onClick"]),(0,a.createTextVNode)(" "+(0,a.toDisplayString)(e.$t("auth.request_new_password_token")),1)])),_:1})])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var vW={name:"ResetPasswordError",components:{"card-note":XH},methods:{navigateUrl(){U("/auth/requestPasswordResetCode")}}};const fW=(0,r.c)(vW,[["render",gW],["__scopeId","data-v-740e4d65"]]);var yW=fW;const CW=e=>((0,a.pushScopeId)("data-v-68ffc9fb"),e=e(),(0,a.popScopeId)(),e),VW={class:"orangehrm-admin-access-container"},bW={class:"orangehrm-card-container"},xW=CW((()=>(0,a.createElementVNode)("br",null,null,-1))),wW=["value"],NW={class:"orangehrm-admin-access-button-container"},_W=CW((()=>(0,a.createElementVNode)("br",null,null,-1)));function kW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-alert"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-button"),u=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",VW,[(0,a.createElementVNode)("div",bW,[(0,a.createVNode)(u,{ref:"verifyForm",method:"post",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-admin-access-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.admin_access")),1)])),_:1}),xW,(0,a.createElementVNode)("div",{class:(0,a.normalizeClass)(n.noteContainerClass)},[(0,a.createVNode)(i,{tag:"toast-message"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.admin_access_note")),1)])),_:1})],2),(0,a.createVNode)(d,{show:null!==o.error,type:"error",message:o.error?.message},null,8,["show","message"]),(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,wW),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{"model-value":o.username,name:"username",label:e.$t("general.username"),"label-icon":"person",disabled:""},null,8,["model-value","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.password,"onUpdate:modelValue":t[0]||(t[0]=e=>n.password=e),name:"password",label:e.$t("general.password"),"label-icon":"key",type:"password",rules:n.rules.password,autofocus:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createElementVNode)("div",NW,[(0,a.createVNode)(m,{class:"orangehrm-admin-access-button","display-type":"ghost",size:"large",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(m,{class:"orangehrm-admin-access-button","display-type":"secondary",size:"large",label:e.$t("general.confirm"),type:"submit"},null,8,["label"])])])),_:1},8,["action","onSubmitValid"])]),_W,(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var SW={name:"AdministratorAccess",components:{"oxd-alert":q.OxdAlert},props:{username:{type:String,required:!0},error:{type:Object,default:()=>null},token:{type:String,required:!0},backUrl:{type:String,default:null}},data(){return{password:"",rules:{password:[Ht]},noteClasses:{"orangehrm-admin-access-note":!0,"--padding":null===this.error},noteContainerClass:{"orangehrm-admin-access-note-container":null===this.error}}},computed:{submitUrl(){return L("/auth/adminVerify")}},methods:{onSubmit(){this.$refs.verifyForm.$el.submit()},onCancel(){U(this.backUrl)}}};const $W=(0,r.c)(SW,[["render",kW],["__scopeId","data-v-68ffc9fb"]]);var DW=$W;const EW={class:"orangehrm-forgot-password-container"},TW={class:"orangehrm-forgot-password-wrapper"},IW={class:"orangehrm-card-container"},BW=["value"],LW={class:"orangehrm-forgot-password-button-container"};function UW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("card-note"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",EW,[(0,a.createElementVNode)("div",TW,[(0,a.createElementVNode)("div",IW,[(0,a.createVNode)(p,{ref:"resetForm",method:"post",action:r.submitUrl,onSubmitValid:r.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-forgot-password-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.reset_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(s,{"note-text":e.$t("auth.username_identify_reset_note"),class:"orangehrm-forgot-password-card-note"},null,8,["note-text"]),(0,a.createElementVNode)("input",{name:"_token",value:o.token,type:"hidden"},null,8,BW),(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.username,"onUpdate:modelValue":t[0]||(t[0]=e=>n.username=e),name:"username",label:e.$t("auth.username"),"label-icon":"person",rules:n.rules.username,placeholder:e.$t("auth.username")},null,8,["modelValue","label","rules","placeholder"])])),_:1}),(0,a.createVNode)(d),(0,a.createElementVNode)("div",LW,[(0,a.createVNode)(u,{class:"orangehrm-forgot-password-button orangehrm-forgot-password-button--cancel","display-type":"ghost",size:"large",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(u,{class:"orangehrm-forgot-password-button orangehrm-forgot-password-button--reset","display-type":"secondary",size:"large",label:e.$t("auth.reset_password"),type:"submit"},null,8,["label"])])])),_:1},8,["action","onSubmitValid"])])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var AW={name:"RequestResetPassword",components:{"card-note":XH},props:{token:{type:String,required:!0}},data(){return{username:"",rules:{username:[Ht]}}},computed:{submitUrl(){return L("/auth/requestResetPassword")}},methods:{onCancel(){U("/auth/login")},onSubmit(){this.$refs.resetForm.$el.submit()}}};const PW=(0,r.c)(AW,[["render",UW],["__scopeId","data-v-76e562c4"]]);var qW=PW;const FW={class:"orangehrm-forgot-password-container"},MW={class:"orangehrm-forgot-password-wrapper"},zW={class:"orangehrm-card-container"};function jW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("card-note");return(0,a.openBlock)(),(0,a.createElementBlock)("div",FW,[(0,a.createElementVNode)("div",MW,[(0,a.createElementVNode)("div",zW,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-forgot-password-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.reset_password_link_sent_successfully")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(s,{"note-text":e.$t("auth.reset_password_link_via_email"),class:"orangehrm-forgot-password-card-note"},null,8,["note-text"]),(0,a.createVNode)(s,{"note-text":e.$t("auth.follow_link_to_select_password"),class:"orangehrm-forgot-password-card-note"},null,8,["note-text"]),(0,a.createVNode)(s,{"note-text":e.$t("auth.email_not_receive_note"),class:"orangehrm-forgot-password-card-note","has-note":""},null,8,["note-text"])])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var RW={name:"ResetPasswordSuccess",components:{"card-note":XH}};const OW=(0,r.c)(RW,[["render",jW],["__scopeId","data-v-18892c44"]]);var GW=OW;const QW={class:"orangehrm-forgot-password-container"},HW={class:"orangehrm-forgot-password-wrapper"},WW={class:"orangehrm-card-container"};function YW(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("card-note");return(0,a.openBlock)(),(0,a.createElementBlock)("div",QW,[(0,a.createElementVNode)("div",HW,[(0,a.createElementVNode)("div",WW,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-forgot-password-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("auth.reset_password")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(s,{"note-text":e.$t("auth.configured_receive_email_notification_note"),class:"orangehrm-forgot-password-card-note","has-note-icon":""},null,8,["note-text"]),(0,a.createVNode)(i,{class:"orangehrm-forgot-password-reset"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"span",class:"orangehrm-forgot-password-reset--link",onClick:r.navigateUrl},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.click_here")),1)])),_:1},8,["onClick"]),(0,a.createTextVNode)(" "+(0,a.toDisplayString)(e.$t("auth.back_to_login")),1)])),_:1})])]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])}var JW={name:"EmailConfigurationWarning",components:{"card-note":XH},methods:{navigateUrl(){U("/auth/login")}}};const XW=(0,r.c)(JW,[["render",YW],["__scopeId","data-v-66e4f0a3"]]);var KW=XW,ZW={"auth-login":PH,"auth-forbidden":zH,"reset-password":eW,"auth-admin-access":DW,"reset-weak-password":mW,"reset-password-error":yW,"reset-password-success":GW,"request-reset-password":qW,"email-configuration-warning":KW};function eY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-attendance-widget"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("my-action-summary-widget"),c=(0,a.resolveComponent)("quick-launch-widget"),m=(0,a.resolveComponent)("buzz-latest-post-widget"),u=(0,a.resolveComponent)("employees-on-leave-widget"),p=(0,a.resolveComponent)("employee-subunit-widget"),h=(0,a.resolveComponent)("employee-location-widget"),g=(0,a.resolveComponent)("oxd-grid");return(0,a.openBlock)(),(0,a.createBlock)(g,{class:"orangehrm-dashboard-grid",cols:3},{default:(0,a.withCtx)((()=>[e.$can.read("dashboard_time_widget")?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i)])),_:1})):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(d,{class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s)])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c)])),_:1}),e.$can.read("dashboard_buzz_widget")?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m)])),_:1})):(0,a.createCommentVNode)("",!0),e.$can.read("dashboard_leave_widget")?((0,a.openBlock)(),(0,a.createBlock)(d,{key:2,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u)])),_:1})):(0,a.createCommentVNode)("",!0),e.$can.read("dashboard_subunit_widget")?((0,a.openBlock)(),(0,a.createBlock)(d,{key:3,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p)])),_:1})):(0,a.createCommentVNode)("",!0),e.$can.read("dashboard_location_widget")?((0,a.openBlock)(),(0,a.createBlock)(d,{key:4,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h)])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1})}const tY=["title"];function oY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-grid-item"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(m,{icon:"lightning-charge-fill",empty:r.isEmpty,loading:n.isLoading,title:e.$t("dashboard.quick_launch")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3,class:"orangehrm-quick-launch"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(r.sortedActions,(e=>((0,a.openBlock)(),(0,a.createBlock)(s,{key:e,class:"orangehrm-quick-launch-card"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{"icon-type":"svg",class:"orangehrm-quick-launch-icon",name:e.icon,title:e.label,onClick:t=>r.onClickAction(e.path)},null,8,["name","title","onClick"]),(0,a.createElementVNode)("div",{class:"orangehrm-quick-launch-heading",title:e.label},[(0,a.createVNode)(d,{tag:"p",class:"--text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.label),1)])),_:2},1024)],8,tY)])),_:2},1024)))),128))])),_:1})])),_:1},8,["empty","loading","title"])}const aY={class:"orangehrm-dashboard-widget-header"},lY={class:"orangehrm-dashboard-widget-name"},nY={key:0,class:"orangehrm-dashboard-widget-body-nocontent"},rY=["src"];function iY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-loading-spinner"),m=(0,a.resolveComponent)("oxd-sheet");return(0,a.openBlock)(),(0,a.createBlock)(m,{gutters:!1,class:"orangehrm-dashboard-widget"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",aY,[(0,a.createElementVNode)("div",lY,[(0,a.createVNode)(i,{name:o.icon,type:o.iconType,class:"orangehrm-dashboard-widget-icon"},null,8,["name","type"]),(0,a.createVNode)(d,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.title),1)])),_:1})]),(0,a.renderSlot)(e.$slots,"action",{},void 0,!0)]),(0,a.createVNode)(s),o.loading?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,class:"orangehrm-dashboard-widget-loader"})):((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:1,ref:"widgetRef",class:(0,a.normalizeClass)(l.widgetBodyClasses)},[(0,a.renderSlot)(e.$slots,"default",{},void 0,!0),o.empty?((0,a.openBlock)(),(0,a.createElementBlock)("div",nY,[(0,a.createElementVNode)("img",{src:l.defaultPic,alt:"No Content",class:"orangehrm-dashboard-widget-img"},null,8,rY),(0,a.createVNode)(d,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.emptyText||e.$t("dashboard.not_available")),1)])),_:1})])):(0,a.createCommentVNode)("",!0)],2))])),_:3})}var dY={name:"BaseWidget",components:{"oxd-sheet":q.OxdSheet,"oxd-icon":q.OxdIcon,"oxd-loading-spinner":q.OxdSpinner},props:{icon:{type:String,required:!0},title:{type:String,required:!0},loading:{type:Boolean,default:!1},empty:{type:Boolean,default:!1},emptyText:{type:String,default:null},iconType:{type:String,default:void 0}},setup(){const e=(0,a.ref)(),t=`${window.appGlobal.publicPath}/images/dashboard_empty_widget_watermark.png`,o=(0,a.computed)((()=>({"orangehrm-dashboard-widget-body":!0,"--scroll-visible":e.value?.scrollHeight>e.value?.clientHeight})));return{widgetRef:e,defaultPic:t,widgetBodyClasses:o}}};const sY=(0,r.c)(dY,[["render",iY],["__scopeId","data-v-133d244a"]]);var cY=sY,mY={name:"QuickLaunchWidget",components:{"base-widget":cY},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/shortcuts");return{http:e}},data(){return{isLoading:!1,quickLaunchActions:[]}},computed:{isEmpty(){return 0===this.quickLaunchActions.length},sortedActions(){return[...this.quickLaunchActions].sort(((e,t)=>e.order-t.order))}},beforeMount(){this.isLoading=!0;const e={"leave.assign_leave":{order:1,icon:"leaveassign",label:this.$t("leave.assign_leave"),path:"/leave/assignLeave"},"leave.leave_list":{order:2,icon:"leavelist",label:this.$t("leave.leave_list"),path:"/leave/viewLeaveList"},"time.employee_timesheet":{order:3,icon:"timesheets",label:this.$t("general.timesheets"),path:"/time/viewEmployeeTimesheet"},"leave.apply_leave":{order:4,icon:"leaveapply",label:this.$t("leave.apply_leave"),path:"/leave/applyLeave"},"leave.my_leave":{order:5,icon:"myleaves",label:this.$t("general.my_leave"),path:"/leave/viewMyLeaveList"},"time.my_timesheet":{order:6,icon:"mytimesheet",label:this.$t("time.my_timesheet"),path:"/time/viewMyTimesheet"}};this.http.getAll().then((t=>{const{data:o}=t.data;for(const a in o)o[a]&&this.quickLaunchActions.push(e[a])})).finally((()=>{this.isLoading=!1}))},methods:{onClickAction(e){e&&U(e)}}};const uY=(0,r.c)(mY,[["render",oY],["__scopeId","data-v-4624a452"]]);var pY=uY;const hY={class:"orangehrm-buzz-widget-header-text"},gY=["src"];function vY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("video-frame"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(p,{icon:"camera-fill",empty:l.isEmpty,loading:l.isLoading,title:e.$t("dashboard.buzz_latest_posts"),"empty-text":e.$t("dashboard.no_posts_added")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{class:"orangehrm-buzz-widget",cols:1},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(l.posts,(e=>((0,a.openBlock)(),(0,a.createBlock)(m,{key:e,class:"orangehrm-buzz-widget-card"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",{class:"orangehrm-buzz-widget-header",onClick:t[0]||(t[0]=(...e)=>l.onClickPost&&l.onClickPost(...e))},[(0,a.createVNode)(i,{employee:e.employee},null,8,["employee"]),(0,a.createElementVNode)("div",hY,[(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-widget-header-emp"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.employeeFullName),1)])),_:2},1024),(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-widget-header-time"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.dateTime),1)])),_:2},1024)])]),(0,a.createVNode)(s,{class:"orangehrm-buzz-widget-divider"}),e.text?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,tag:"p",class:"orangehrm-buzz-widget-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.text),1)])),_:2},1024)):(0,a.createCommentVNode)("",!0),e.postImgSrc?((0,a.openBlock)(),(0,a.createElementBlock)("img",{key:1,src:e.postImgSrc,class:"orangehrm-buzz-widget-picture"},null,8,gY)):(0,a.createCommentVNode)("",!0),e.postVideoSrc?((0,a.openBlock)(),(0,a.createBlock)(c,{key:2,"video-src":e.postVideoSrc},null,8,["video-src"])):(0,a.createCommentVNode)("",!0)])),_:2},1024)))),128))])),_:1})])),_:1},8,["empty","loading","title","empty-text"])}const fY={class:"orangehrm-buzz-video"},yY=["src"];function CY(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",fY,[(0,a.createElementVNode)("iframe",{src:r.embedURL,frameborder:"0",class:"orangehrm-buzz-video-frame",title:"OrangeHRM buzz video frame",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,8,yY)])}var VY={name:"VideoFrame",props:{videoSrc:{type:String,required:!0}},computed:{embedURL(){return new String(this.videoSrc).trim()}}};const bY=(0,r.c)(VY,[["render",CY],["__scopeId","data-v-db84c3ae"]]);var xY=bY;function wY(e){const t=(t,o=0,a=!1)=>e.request({method:"GET",url:`/api/v2/buzz/shares/${t}/comments`,params:{limit:o,...a&&{model:"detailed"}}}),o=(t,o)=>e.request({method:"POST",url:`/api/v2/buzz/shares/${t}/comments`,data:{text:o}}),a=(t,o,a)=>e.request({method:"PUT",url:`/api/v2/buzz/shares/${t}/comments/${o}`,data:{text:a}}),l=(t,o)=>e.request({method:"DELETE",url:`/api/v2/buzz/shares/${t}/comments/${o}`}),n=t=>e.request({method:"GET",url:`/api/v2/buzz/shares/${t}/likes`}),r=(t,o,a,l)=>e.request({method:"GET",url:"/api/v2/buzz/feed",params:{limit:t,offset:o,sortOrder:a,sortField:l}}),i=(t,o)=>e.request({method:o?"DELETE":"POST",url:`/api/v2/buzz/shares/${t}/likes`}),d=(t,o)=>e.request({method:o?"DELETE":"POST",url:`/api/v2/buzz/comments/${t}/likes`}),s=t=>e.request({method:"DELETE",url:`/api/v2/buzz/shares/${t}`}),c=(t,o)=>("photo"===o.type&&delete o["link"],"video"===o.type&&(delete o["photos"],delete o["deletedPhotos"]),"text"===o.type&&(delete o["link"],delete o["photos"]),e.request({method:"PUT",url:`/api/v2/buzz/posts/${t}`,data:{...o},params:{model:"detailed"}})),m=(t,o)=>e.request({method:"PUT",url:`/api/v2/buzz/shares/${t}`,data:{text:o},params:{model:"detailed"}});return{fetchPosts:r,updatePost:c,deletePost:s,updatePostLike:i,fetchPostLikes:n,savePostComment:o,updateSharedPost:m,updatePostComment:a,deletePostComment:l,fetchPostComments:t,updateCommentLike:d}}const NY={class:"orangehrm-buzz-profile-image"},_Y=["src"];function kY(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",NY,[(0,a.createElementVNode)("img",{alt:"profile picture",src:r.imageSrc},null,8,_Y)])}var SY={name:"ProfileImage",props:{employee:{type:Object,required:!0}},computed:{imageSrc(){return`../pim/viewPhoto/empNumber/${this.employee.empNumber}`}}};const $Y=(0,r.c)(SY,[["render",kY],["__scopeId","data-v-06f466c6"]]);var DY=$Y,EY={name:"BuzzLatestPostWidget",components:{"base-widget":cY,"video-frame":xY,"profile-image":DY},setup(){const e=(0,a.ref)([]),t=(0,a.ref)(!1),{locale:o}=Le(),{jsDateFormat:l,jsTimeFormat:n}=R(),{$tEmpName:r}=Da(),{fetchPosts:i}=wY(new P(window.appGlobal.baseUrl,"")),d=(0,a.computed)((()=>0===e.value.length)),s=()=>U("/buzz/viewBuzz");return(0,a.onBeforeMount)((()=>{t.value=!0,i(5,0,"DESC","share.createdAtUtc").then((t=>{const{data:a}=t.data;e.value=a.map((e=>{const{employee:t,createdDate:a,createdTime:i,originalPost:d}=e,s=e.video?.link||null,c=ue(`${a} ${i} +00:00`,"yyyy-MM-dd HH:mm xxx"),m=pe(c,`${l} ${n}`,{locale:o}),u=r(t,{includeMiddle:!0,excludePastEmpTag:!1}),p=Array.isArray(e?.photoIds)?`${window.appGlobal.baseUrl}/buzz/photo/${e.photoIds[0]}`:null,h=d?d.text:e.text;return{...e,text:h,dateTime:m,postImgSrc:p,postVideoSrc:s,employeeFullName:u}}))})).finally((()=>{t.value=!1}))})),{posts:e,isEmpty:d,isLoading:t,onClickPost:s}}};const TY=(0,r.c)(EY,[["render",vY],["__scopeId","data-v-f8f18dc0"]]);var IY=TY;function BY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-pie-chart"),d=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(d,{icon:"pie-chart-fill",loading:n.isLoading,title:e.$t("dashboard.employee_distribution_by_sub_unit")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{data:n.dataset,"aspect-ratio":!1,"custom-legend":!0,"custom-tooltip":!0,"wrapper-classes":"emp-distrib-chart"},null,8,["data"])])),_:1},8,["loading","title"])}var LY={name:"EmployeeSubunitWidget",components:{"base-widget":cY,"oxd-pie-chart":q.OxdPieChart},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/employees/subunit");return{http:e}},data(){return{dataset:[],isLoading:!1}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t,meta:o}=e.data,a=[q.CHART_COLORS.COLOR_HEAT_WAVE,q.CHART_COLORS.COLOR_CHROME_YELLOW,q.CHART_COLORS.COLOR_YELLOW_GREEN,q.CHART_COLORS.COLOR_MOUNTAIN_MEADOW,q.CHART_COLORS.COLOR_PACIFIC_BLUE,q.CHART_COLORS.COLOR_BLEU_DE_FRANCE,q.CHART_COLORS.COLOR_MAJORELLE_BLUE,q.CHART_COLORS.COLOR_MEDIUM_ORCHID,q.CHART_COLORS.COLOR_FANDANGO_PINK];this.dataset=t.map(((e,t)=>!!e.count&&{value:e.count,color:a[t],label:e.subunit.name})).filter((e=>e)),o?.otherEmployeeCount&&this.dataset.push({value:o.otherEmployeeCount,color:q.CHART_COLORS.COLOR_FANDANGO_PINK,label:this.$t("pim.other")}),o?.unassignedEmployeeCount&&this.dataset.push({value:o.unassignedEmployeeCount,color:q.CHART_COLORS.COLOR_TART_ORANGE,label:this.$t("dashboard.unassigned")})})).finally((()=>{this.isLoading=!1}))}};const UY=(0,r.c)(LY,[["render",BY],["__scopeId","data-v-ffd934a8"]]);var AY=UY;const PY={key:0,class:"orangehrm-todo-list"},qY={key:0,class:"orangehrm-todo-list-item"},FY={key:1,class:"orangehrm-todo-list-item"},MY={key:2,class:"orangehrm-todo-list-item"},zY={key:3,class:"orangehrm-todo-list-item"},jY={key:4,class:"orangehrm-todo-list-item"};function RY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(s,{icon:"list-check",empty:r.isEmpty,"empty-text":r.emptyText,loading:e.isLoading,title:e.$t("dashboard.my_actions")},{default:(0,a.withCtx)((()=>[n.myActions.length>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",PY,[n.leaveRequestCount>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",qY,[(0,a.createVNode)(i,{class:"orangehrm-report-icon",name:"attendanceAlt","icon-type":"svg","display-type":"success",onClick:r.onClickPendingLeave},null,8,["onClick"]),(0,a.createVNode)(d,{tag:"p",onClick:r.onClickPendingLeave},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.n_pending_leave_request",{pendingActionsCount:n.leaveRequestCount})),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0),n.timeSheetCount>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",FY,[(0,a.createVNode)(i,{class:"orangehrm-report-icon",name:"timeAlt","icon-type":"svg","display-type":"warn",onClick:r.onClickPendingTimesheet},null,8,["onClick"]),(0,a.createVNode)(d,{tag:"p",onClick:r.onClickPendingTimesheet},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.n_pending_time_sheet",{pendingActionsCount:n.timeSheetCount})),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0),n.reviewCount>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",MY,[(0,a.createVNode)(i,{class:"orangehrm-report-icon",name:"appraisals","icon-type":"svg","display-type":"danger",onClick:r.onClickPendingReview},null,8,["onClick"]),(0,a.createVNode)(d,{tag:"p",onClick:r.onClickPendingReview},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.n_pending_performance_evaluate",{pendingActionsCount:n.reviewCount})),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0),n.selfReviewCount>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",zY,[(0,a.createVNode)(i,{class:"orangehrm-report-icon",name:"appraisals","icon-type":"svg","display-type":"danger",onClick:r.onClickPendingReview},null,8,["onClick"]),(0,a.createVNode)(d,{tag:"p",onClick:r.onClickSelfReview},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.n_pending_self_review",{pendingActionsCount:n.selfReviewCount})),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0),n.interviewCount>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",jY,[(0,a.createVNode)(i,{class:"orangehrm-report-icon",name:"interview","icon-type":"svg","display-type":"info",onClick:r.onClickPendingInterview},null,8,["onClick"]),(0,a.createVNode)(d,{tag:"p",onClick:r.onClickPendingInterview},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.n_pending_candidate_interview",{pendingActionsCount:n.interviewCount})),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0)])):(0,a.createCommentVNode)("",!0)])),_:1},8,["empty","empty-text","loading","title"])}var OY={name:"MyActionSummaryWidget",components:{"base-widget":cY},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/employees/action-summary");return{http:e}},data(){return{myActions:[],leaveRequestCount:0,timeSheetCount:0,reviewCount:0,selfReviewCount:0,interviewCount:0}},computed:{isEmpty(){return 0===this.myActions.length},emptyText(){return this.$t("dashboard.no_pending_actions")}},beforeMount(){this.isLoading=!1,this.http.getAll().then((e=>{const{data:t}=e.data;this.myActions=t.map((e=>{const{group:t,pendingActionCount:o}=e;"Leave Requests To Approve"===t&&(this.leaveRequestCount=o),"Timesheets To Approve"===t&&(this.timeSheetCount=o),"Pending Appraisal Reviews"===t&&(this.reviewCount=o),"Pending Self Reviews"===t&&(this.selfReviewCount=o),"Candidates To Interview"===t&&(this.interviewCount=o)}))})).finally((()=>{this.isLoading=!1}))},methods:{onClickPendingLeave(){U("/leave/viewLeaveList")},onClickPendingTimesheet(){U("/time/viewEmployeeTimesheet")},onClickPendingReview(){U("/performance/searchEvaluatePerformanceReview")},onClickPendingInterview(){U("/recruitment/viewCandidates",void 0,{statusId:4})},onClickSelfReview(){U("/performance/myPerformanceReview")}}};const GY=(0,r.c)(OY,[["render",RY],["__scopeId","data-v-93929af6"]]);var QY=GY;function HY(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-pie-chart"),d=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(d,{icon:"pie-chart-fill",loading:n.isLoading,title:e.$t("dashboard.employee_distribution_by_location")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{data:n.dataset,"aspect-ratio":!1,"custom-legend":!0,"custom-tooltip":!0,"wrapper-classes":"emp-distrib-chart"},null,8,["data"])])),_:1},8,["loading","title"])}var WY={name:"EmployeeLocationWidget",components:{"base-widget":cY,"oxd-pie-chart":q.OxdPieChart},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/employees/locations");return{http:e}},data(){return{dataset:[],isLoading:!1}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t,meta:o}=e.data,a=[q.CHART_COLORS.COLOR_HEAT_WAVE,q.CHART_COLORS.COLOR_CHROME_YELLOW,q.CHART_COLORS.COLOR_YELLOW_GREEN,q.CHART_COLORS.COLOR_MOUNTAIN_MEADOW,q.CHART_COLORS.COLOR_PACIFIC_BLUE,q.CHART_COLORS.COLOR_BLEU_DE_FRANCE,q.CHART_COLORS.COLOR_MAJORELLE_BLUE,q.CHART_COLORS.COLOR_MEDIUM_ORCHID,q.CHART_COLORS.COLOR_FANDANGO_PINK];this.dataset=t.map(((e,t)=>!!e.count&&{value:e.count,color:a[t],label:e.location.name})).filter((e=>e)),o?.otherEmployeeCount&&this.dataset.push({value:o.otherEmployeeCount,color:q.CHART_COLORS.COLOR_FANDANGO_PINK,label:this.$t("pim.other")}),o?.unassignedEmployeeCount&&this.dataset.push({value:o.unassignedEmployeeCount,color:q.CHART_COLORS.COLOR_TART_ORANGE,label:this.$t("dashboard.unassigned")})})).finally((()=>{this.isLoading=!1}))}};const YY=(0,r.c)(WY,[["render",HY],["__scopeId","data-v-9d9d3d76"]]);var JY=YY;const XY={class:"orangehrm-leave-card-profile-image"},KY=["src"],ZY={class:"orangehrm-leave-card-details"};function eJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("base-widget"),c=(0,a.resolveComponent)("employees-on-leave-config-modal");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(s,{icon:"leaveAlt","icon-type":"svg",class:"emp-leave-chart",empty:r.isEmpty,"empty-text":r.emptyText,loading:n.isLoading,title:e.$t("dashboard.employees_on_leave_today")},(0,a.createSlots)({default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.leaveList,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:e,class:"orangehrm-leave-card"},[(0,a.createElementVNode)("div",XY,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:`../pim/viewPhoto/empNumber/${e.empNumber}`},null,8,KY)]),(0,a.createElementVNode)("div",ZY,[(0,a.createVNode)(d,{tag:"p",class:"orangehrm-leave-card-emp-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.empName),1)])),_:2},1024),e.leaveType?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,tag:"p",class:"orangehrm-leave-card-leave-details"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.leaveType),1)])),_:2},1024)):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(d,{tag:"p",class:"orangehrm-leave-card-emp-id"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.employeeId),1)])),_:2},1024)])))),128))])),_:2},[e.$can.update("dashboard_employees_on_leave_today_config")?{name:"action",fn:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{class:"orangehrm-leave-card-icon",name:"gear-fill",onClick:r.onClickConfig},null,8,["onClick"])])),key:"0"}:void 0]),1032,["empty","empty-text","loading","title"]),n.showConfigModal?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,onClose:r.onConfigModalClose},null,8,["onClose"])):(0,a.createCommentVNode)("",!0)],64)}const tJ={class:"orangehrm-modal-header"},oJ={class:"orangehrm-config-title"};function aJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-input-field"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-button"),p=(0,a.resolveComponent)("submit-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(v,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",tJ,[(0,a.createVNode)(i,{type:"svg",name:"leaveAlt"}),(0,a.createElementVNode)("div",oJ,[(0,a.createVNode)(d,{type:"card-body"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.employees_on_leave_today")),1)])),_:1}),(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.configurations")),1)])),_:1})])]),(0,a.createVNode)(s),(0,a.createVNode)(g,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{class:"orangehrm-config-checkbox"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:n.showAccessibleEmployeesOnly,"onUpdate:modelValue":t[0]||(t[0]=e=>n.showAccessibleEmployeesOnly=e),type:"switch",label:e.$t("dashboard.only_show_accessible_employees_on_leave_for_other_users")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(s),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(p)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}var lJ={name:"EmployeesOnLeaveConfigModal",components:{"oxd-icon":q.OxdIcon,"oxd-dialog":q.OxdDialog},emits:["close"],setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/config/employee-on-leave-today");return{http:e}},data(){return{isLoading:!1,showAccessibleEmployeesOnly:!1}},beforeMount(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t}=e.data;this.showAccessibleEmployeesOnly=t.showOnlyAccessibleEmployeesOnLeaveToday})).finally((()=>this.isLoading=!1))},methods:{onSave(){this.isLoading=!0,this.http.request({method:"PUT",data:{showOnlyAccessibleEmployeesOnLeaveToday:this.showAccessibleEmployeesOnly}}).then((()=>{this.$toast.updateSuccess(),this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const nJ=(0,r.c)(lJ,[["render",aJ],["__scopeId","data-v-f92c82c4"]]);var rJ=nJ,iJ={name:"EmployeesOnLeaveWidget",components:{"oxd-icon":q.OxdIcon,"base-widget":cY,"employees-on-leave-config-modal":rJ},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/employees/leaves"),{$tEmpName:t}=Da();return{http:e,tEmpName:t}},data(){return{leaveList:[],isLoading:!1,leavePeriod:null,showConfigModal:!1}},computed:{isEmpty(){return 0===this.leaveList.length},emptyText(){return this.leavePeriod?this.$t("dashboard.no_employees_are_on_leave_today"):this.$t("dashboard.leave_period_not_defined")}},beforeMount(){this.isLoading=!0,this.http.getAll({date:pe(me(),"yyyy-MM-dd")}).then((e=>{const{data:t,meta:o}=e.data;this.leaveList=t.map((e=>{const{employee:t,leaveType:o,duration:a}=e;let l=o?.name;return l&&"half_day_morning"===a&&(l+=` (${this.$t("leave.half_day_morning")})`),l&&"half_day_afternoon"===a&&(l+=` (${this.$t("leave.half_day_evening")})`),l&&"specify_time"===a&&(l+=` (${e.startTime} - ${e.endTime})`),{leaveType:l,empNumber:t.empNumber,employeeId:t.employeeId,empName:this.tEmpName(t,{includeMiddle:!1,excludePastEmpTag:!1})}})),this.leavePeriod=o?.leavePeriodDefined})).finally((()=>{this.isLoading=!1}))},methods:{onClickConfig(){this.showConfigModal=!0},onConfigModalClose(){this.showConfigModal=!1}}};const dJ=(0,r.c)(iJ,[["render",eJ],["__scopeId","data-v-c1c9ee5e"]]);var sJ=dJ;const cJ={class:"orangehrm-attendance-card"},mJ={class:"orangehrm-attendance-card-profile"},uJ={class:"orangehrm-attendance-card-profile-image"},pJ=["src"],hJ={class:"orangehrm-attendance-card-profile-record"},gJ={class:"orangehrm-attendance-card-bar"},vJ={class:"orangehrm-attendance-card-summary"},fJ={class:"orangehrm-attendance-card-summary-week"},yJ={class:"orangehrm-attendance-card-summary-total"};function CJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-icon-button"),s=(0,a.resolveComponent)("oxd-divider"),c=(0,a.resolveComponent)("oxd-icon"),m=(0,a.resolveComponent)("oxd-bar-chart"),u=(0,a.resolveComponent)("base-widget");return(0,a.openBlock)(),(0,a.createBlock)(u,{icon:"clock-fill",loading:n.isLoading,title:e.$t("dashboard.time_at_work")},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",cJ,[(0,a.createElementVNode)("div",mJ,[(0,a.createElementVNode)("div",uJ,[(0,a.createElementVNode)("img",{alt:"profile picture",class:"employee-image",src:`../pim/viewPhoto/empNumber/${n.empNumber}`},null,8,pJ)]),(0,a.createElementVNode)("div",hJ,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-card-state"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.lastState),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-card-details"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.lastRecord),1)])),_:1})])]),(0,a.createElementVNode)("div",gJ,[(0,a.createVNode)(i,{tag:"span",class:"orangehrm-attendance-card-fulltime"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("b",null,(0,a.toDisplayString)(n.dayTotal.hours)+"h",1),(0,a.createTextVNode)(),(0,a.createElementVNode)("b",null,(0,a.toDisplayString)(n.dayTotal.minutes)+"m",1),(0,a.createTextVNode)(" "+(0,a.toDisplayString)(e.$t("general.today")),1)])),_:1}),(0,a.createVNode)(d,{name:"stopwatch","display-type":"solid-main",class:"orangehrm-attendance-card-action",onClick:r.onClickPunchIn},null,8,["onClick"])]),(0,a.createVNode)(s),(0,a.createElementVNode)("div",vJ,[(0,a.createElementVNode)("div",fJ,[(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("dashboard.this_week")),1)])),_:1}),(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.currentWeek),1)])),_:1})]),(0,a.createElementVNode)("div",yJ,[(0,a.createVNode)(c,{name:"stopwatch",class:"orangehrm-attendance-card-icon"}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-attendance-card-fulltime"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.weekTotal.hours)+"h "+(0,a.toDisplayString)(n.weekTotal.minutes)+"m ",1)])),_:1})])])]),(0,a.createVNode)(m,{grid:!1,data:n.dataset,"y-axsis":!1,"aspect-ratio":!1,"wrapper-classes":"emp-attendance-chart"},null,8,["data"])])),_:1},8,["loading","title"])}var VJ={name:"EmployeeAttendanceWidget",components:{"oxd-icon":q.OxdIcon,"base-widget":cY,"oxd-bar-chart":q.OxdBarChart},setup(){const{locale:e}=Le(),t=new P(window.appGlobal.baseUrl,"/api/v2/dashboard/employees/time-at-work");return{http:t,locale:e}},data(){return{dataset:[],state:null,endDate:null,userDate:null,userTime:null,startDate:null,isLoading:!1,empNumber:null,timezoneOffset:null,dayTotal:{hours:0,minutes:0},weekTotal:{hours:0,minutes:0}}},computed:{lastState(){switch(this.state){case"PUNCHED IN":return this.$t("attendance.punched_in");case"PUNCHED OUT":return this.$t("attendance.punched_out");default:return this.$t("attendance.not_punched_in")}},lastRecord(){if(!this.userDate||!this.userTime)return null;const e=ue(`${this.userDate} ${this.userTime}`,"yyyy-MM-dd HH:mm"),t=pe(e,"hh:mm a",{locale:this.locale});if(!(0,se.c)(e)){const o=pe(e,"MMM do",{locale:this.locale});return this.$t("dashboard.state_date_at_time_timezone_offset",{lastState:this.lastState,date:o,time:t,timezoneOffset:this.timezoneOffset})}return this.$t("dashboard.state_today_at_time_timezone_offset",{lastState:this.lastState,time:t,timezoneOffset:this.timezoneOffset})},currentWeek(){if(!this.startDate||!this.endDate)return null;const e=pe(ue(this.startDate),"MMM dd",{locale:this.locale}),t=pe(ue(this.endDate),"MMM dd",{locale:this.locale});return`${e} - ${t}`}},beforeMount(){this.fetchWidgetData()},methods:{onClickPunchIn(){U("/attendance/punchIn")},fetchWidgetData(){this.isLoading=!0;const e=me(),t=e.getTimezoneOffset()/60*-1;this.http.getAll({timezoneOffset:t,currentDate:pe(e,"yyyy-MM-dd"),currentTime:pe(new Date,"HH:mm")}).then((e=>{const{data:t,meta:o}=e.data;this.dataset=t.map((e=>({value:e.totalTime.hours+e.totalTime.minutes/60,label:this.$t(`general.${new String(e.workDay.day).toLowerCase()}`),color:q.CHART_COLORS.COLOR_HEAT_WAVE})));const{lastAction:a,currentDay:l,currentWeek:n,currentUser:r}=o;a&&(this.state=a.state,this.userDate=a.userDate,this.userTime=a.userTime,this.timezoneOffset=a.timezoneOffset),n&&(this.weekTotal=n.totalTime,this.endDate=n.endDate?.date,this.startDate=n.startDate?.date),l&&(this.dayTotal=l.totalTime),r&&(this.empNumber=r.empNumber)})).finally((()=>{this.isLoading=!1}))}}};const bJ=(0,r.c)(VJ,[["render",CJ],["__scopeId","data-v-58bcc29e"]]);var xJ=bJ,wJ={components:{"quick-launch-widget":pY,"buzz-latest-post-widget":IY,"employee-subunit-widget":AY,"my-action-summary-widget":QY,"employee-location-widget":JY,"employees-on-leave-widget":sJ,"employee-attendance-widget":xJ},mounted(){const e=new P(window.appGlobal.baseUrl,"/events/push");e.create()}};const NJ=(0,r.c)(wJ,[["render",eY],["__scopeId","data-v-04c617d8"]]);var _J=NJ,kJ={"view-dashboard":_J};function SJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("post-filters"),d=(0,a.resolveComponent)("news-feed"),s=(0,a.resolveComponent)("oxd-tab-panel"),c=(0,a.resolveComponent)("upcoming-anniversaries"),m=(0,a.resolveComponent)("oxd-tab-container"),u=(0,a.resolveComponent)("oxd-grid-item"),p=(0,a.resolveComponent)("oxd-grid");return l.isMobile?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,ref:"swipeRef",modelValue:l.tabSelector,"onUpdate:modelValue":t[0]||(t[0]=e=>l.tabSelector=e),"keep-alive":!0},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{key:"buzz_newsfeed",name:e.$t("buzz.buzz_newsfeed")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{mobile:!0,employee:o.employee,"sort-field":l.sortField},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{mobile:!0,filter:l.sortField,onUpdatePriority:l.onUpdatePriority},null,8,["filter","onUpdatePriority"])])),_:1},8,["employee","sort-field"])])),_:1},8,["name"]),(0,a.createVNode)(s,{key:"buzz_anniversary",name:e.$t("buzz.upcoming_anniversaries")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c)])),_:1},8,["name"])])),_:1},8,["modelValue"])):l.width<1920?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,cols:2,class:"orangehrm-buzz-layout"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{employee:o.employee,"sort-field":l.sortField},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{filter:l.sortField,onUpdatePriority:l.onUpdatePriority},null,8,["filter","onUpdatePriority"])])),_:1},8,["employee","sort-field"])])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c)])),_:1})])),_:1})):((0,a.openBlock)(),(0,a.createBlock)(p,{key:2,cols:3,class:"orangehrm-buzz-layout"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{filter:l.sortField,onUpdatePriority:l.onUpdatePriority},null,8,["filter","onUpdatePriority"])])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{employee:o.employee,"sort-field":l.sortField},null,8,["employee","sort-field"])])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c)])),_:1})])),_:1}))}var $J=o(6200),DJ=o.n($J);function EJ(e){let t;const o=(0,a.ref)();return(0,a.onMounted)((()=>{if(!o.value)return;t=new(DJ().Manager)(o.value?.$el||o.value);const a=new(DJ().Swipe);t.add(a),t.on("swipe",e)})),(0,a.onBeforeUnmount)((()=>{t?.destroy()})),{swipeContainer:o}}const TJ={class:"orangehrm-buzz-newsfeed"},IJ=["src"];function BJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("create-post"),s=(0,a.resolveComponent)("post-body"),c=(0,a.resolveComponent)("post-actions"),m=(0,a.resolveComponent)("post-stats"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("post-comment-container"),h=(0,a.resolveComponent)("post-container"),g=(0,a.resolveComponent)("oxd-grid-item"),v=(0,a.resolveComponent)("oxd-grid"),f=(0,a.resolveComponent)("oxd-loading-spinner"),y=(0,a.resolveComponent)("edit-post-modal"),C=(0,a.resolveComponent)("share-post-modal"),V=(0,a.resolveComponent)("photo-carousel"),b=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createElementVNode)("div",TJ,[(0,a.createVNode)(i,{type:"card-title",class:"orangehrm-buzz-newsfeed-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.buzz_newsfeed")),1)])),_:1}),((0,a.openBlock)(),(0,a.createBlock)(d,{key:e.posts,employee:o.employee,onRefresh:l.resetFeed},null,8,["employee","onRefresh"])),(0,a.renderSlot)(e.$slots,"default",{},void 0,!0),(0,a.createVNode)(v,{cols:1,class:"orangehrm-buzz-newsfeed-posts"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.posts,((e,t)=>((0,a.openBlock)(),(0,a.createBlock)(g,{key:e},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{post:e,onEdit:e=>l.onEdit(t),onDelete:e=>l.onDelete(t)},(0,a.createSlots)({content:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{post:e,onSelectPhoto:e=>l.onSelectPhoto(e,t)},null,8,["post","onSelectPhoto"])])),actionButton:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{post:e,onLike:e=>l.onLike(t),onShare:e=>l.onShare(t),onComment:e=>l.onComment(t)},null,8,["post","onLike","onShare","onComment"])])),postStats:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{post:e,mobile:o.mobile,onComment:e=>l.onComment(t)},null,8,["post","mobile","onComment"])])),_:2},[e.showComments?{name:"comments",fn:(0,a.withCtx)((()=>[(0,a.createVNode)(u),(0,a.createVNode)(p,{"post-id":e.id,employee:o.employee,onCreate:e=>l.onCreateComment(t),onDelete:e=>l.onDeleteComment(t)},null,8,["post-id","employee","onCreate","onDelete"])])),key:"0"}:void 0]),1032,["post","onEdit","onDelete"])])),_:2},1024)))),128)),(0,a.withDirectives)((0,a.createVNode)(g,{class:"orangehrm-buzz-newsfeed-noposts"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("img",{src:l.noPostsPic,alt:"No Posts"},null,8,IJ),(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.no_posts_available")),1)])),_:1})])),_:1},512),[[a.vShow,!e.isLoading&&0===e.posts.length]])])),_:1}),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(f,{key:0,class:"orangehrm-buzz-newsfeed-loader"})):(0,a.createCommentVNode)("",!0)]),e.showEditModal?((0,a.openBlock)(),(0,a.createBlock)(y,{key:0,employee:o.employee,data:e.editModalState.post,onClose:l.onCloseEditModal},null,8,["employee","data","onClose"])):(0,a.createCommentVNode)("",!0),e.showShareModal?((0,a.openBlock)(),(0,a.createBlock)(C,{key:1,employee:o.employee,data:e.shareModalState,onClose:l.onCloseShareModal},null,8,["employee","data","onClose"])):(0,a.createCommentVNode)("",!0),e.showPhotoCarousel?((0,a.openBlock)(),(0,a.createBlock)(V,{key:2,mobile:o.mobile,post:e.photoCarouselState.post,"photo-index":e.photoCarouselState.photoIndex,onClose:l.onClosePhotoCarousel,onLike:t[0]||(t[0]=t=>l.onLike(e.photoCarouselState.postIndex)),onCreateComment:t[1]||(t[1]=t=>l.onCreateComment(e.photoCarouselState.postIndex)),onDeleteComment:t[2]||(t[2]=t=>l.onDeleteComment(e.photoCarouselState.postIndex))},null,8,["mobile","post","photo-index","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(b,{ref:"deleteDialog",message:e.$t("buzz.post_delete_confirmation_message")},null,8,["message"])],64)}const LJ={class:"orangehrm-buzz-post-body"},UJ={key:1},AJ=["onClick"],PJ=["onClick"],qJ={key:0};function FJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("video-frame"),s=(0,a.resolveComponent)("oxd-icon"),c=(0,a.resolveComponent)("photo-frame");return(0,a.openBlock)(),(0,a.createElementBlock)("div",LJ,[o.post.text?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,tag:"p",class:(0,a.normalizeClass)(l.postClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.post.text),1)])),_:1},8,["class"])):(0,a.createCommentVNode)("",!0),(0,a.withDirectives)((0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-post-body-readmore",onClick:l.onClickReadMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.read_more")),1)])),_:1},8,["onClick"]),[[a.vShow,!e.readMore]]),!o.post.text||"video"!==o.post.type&&"photo"!==o.post.type?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("br",UJ)),"video"===o.post.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:2,"video-src":o.post.video.link},null,8,["video-src"])):(0,a.createCommentVNode)("",!0),"photo"===o.post.type?((0,a.openBlock)(),(0,a.createBlock)(c,{key:3,media:o.post.photoIds},{content:(0,a.withCtx)((({index:e})=>[3===e&&5===o.post.photoIds.length?((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:0,class:"orangehrm-buzz-post-body-picture --more",onClick:t=>l.onClickPicture(e)},[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-post-body-more"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)("+1")])),_:1}),(0,a.createVNode)(s,{class:"orangehrm-buzz-post-body-more",name:"images"})],8,AJ)):((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:1,class:"orangehrm-buzz-post-body-picture",onClick:t=>l.onClickPicture(e)},null,8,PJ))])),_:1},8,["media"])):(0,a.createCommentVNode)("",!0),l.originalPost?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:4},[o.post.text||"video"===o.post.type||"photo"===o.post.type?((0,a.openBlock)(),(0,a.createElementBlock)("br",qJ)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-post-body-employee"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.employee),1)])),_:1}),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-post-body-date"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.dateTime),1)])),_:1}),l.originalPost.text?((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,tag:"p",class:"orangehrm-buzz-post-body-original-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.text),1)])),_:1})):(0,a.createCommentVNode)("",!0)],64)):(0,a.createCommentVNode)("",!0)])}const MJ=["src"];function zJ(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",{class:(0,a.normalizeClass)(r.classes)},[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(r.photos,((t,o)=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:t,class:"orangehrm-buzz-photos-item"},[(0,a.renderSlot)(e.$slots,"content",{data:t,index:o},void 0,!0),(0,a.createElementVNode)("img",{src:t},null,8,MJ)])))),128))],2)}var jJ={name:"PhotoFrame",props:{media:{type:Array,required:!0}},computed:{classes(){return{"orangehrm-buzz-photos":!0,"--two-thumbnails":2===this.media.length,"--three-thumbnails":3===this.media.length,"--four-thumbnails":4===this.media.length,"--five-thumbnails":5===this.media.length}},photos(){return(this.media||[]).map((e=>{if("number"===typeof e)return`${window.appGlobal.baseUrl}/buzz/photo/${e}`;const{type:t,base64:o}=e;return`data:${t};base64,${o}`}))}}};const RJ=(0,r.c)(jJ,[["render",zJ],["__scopeId","data-v-551cc5da"]]);var OJ=RJ,GJ={name:"PostBody",components:{"oxd-icon":q.OxdIcon,"photo-frame":OJ,"video-frame":xY},props:{post:{type:Object,required:!0}},emits:["close","selectPhoto"],setup(e,t){const{locale:o}=Le(),{jsDateFormat:l,jsTimeFormat:n}=R(),{$tEmpName:r}=Da(),i=(0,a.reactive)({readMore:new String(e.post?.text).length<500}),d=(0,a.computed)((()=>({"orangehrm-buzz-post-body-text":!0,"--truncate":!1===i.readMore}))),s=()=>{i.readMore=!i.readMore},c=e=>{t.emit("selectPhoto",e)},m=(0,a.computed)((()=>{if(null===e.post.originalPost)return null;const{createdDate:t,createdTime:a}=e.post.originalPost,i=ue(`${t} ${a} +00:00`,"yyyy-MM-dd HH:mm xxx");return{text:e.post.originalPost.text,employee:r(e.post.originalPost.employee,{includeMiddle:!0,excludePastEmpTag:!1}),dateTime:pe(i,`${l} ${n}`,{locale:o})}}));return{postClasses:d,originalPost:m,onClickPicture:c,onClickReadMore:s,...(0,a.toRefs)(i)}}};const QJ=(0,r.c)(GJ,[["render",FJ],["__scopeId","data-v-e74c83c4"]]);var HJ=QJ;const WJ={class:"orangehrm-buzz-stats"},YJ={class:"orangehrm-buzz-stats-row"},JJ={class:"orangehrm-buzz-stats-row"};function XJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("post-stats-modal"),c=(0,a.resolveDirective)("click-outside");return(0,a.withDirectives)(((0,a.openBlock)(),(0,a.createElementBlock)("div",WJ,[(0,a.createElementVNode)("div",YJ,[(0,a.createVNode)(i,{name:"heart-fill",class:"orangehrm-buzz-stats-like-icon"}),(0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.likesClasses),onClick:r.onShowLikeList},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.likesCount),1)])),_:1},8,["class","onClick"]),n.showLikeList?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,type:"likes",icon:"heart-fill",mobile:o.mobile,"post-id":o.post.id,onClose:r.onClose},null,8,["mobile","post-id","onClose"])):(0,a.createCommentVNode)("",!0)]),(0,a.createElementVNode)("div",JJ,[(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-stats-active",onClick:r.onShowComments},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.commentsCount),1)])),_:1},8,["onClick"]),r.sharesCount?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createTextVNode)(" ‚  "),(0,a.createVNode)(d,{tag:"p",class:(0,a.normalizeClass)(r.sharesClasses),onClick:r.onShowSharesList},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.sharesCount),1)])),_:1},8,["class","onClick"])],64)):(0,a.createCommentVNode)("",!0),n.showSharesList?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,type:"shares",icon:"share-fill",mobile:o.mobile,"post-id":o.post.post.id,onClose:r.onClose},null,8,["mobile","post-id","onClose"])):(0,a.createCommentVNode)("",!0)])])),[[c,r.onClose]])}const KJ={class:"orangehrm-buzz-stats-dialog-header"};function ZJ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-loading-spinner"),c=(0,a.resolveComponent)("oxd-sheet"),m=(0,a.resolveComponent)("oxd-icon"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-dialog");return o.mobile?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,class:"orangehrm-buzz-stats-dialog","onUpdate:show":l.onClose},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",KJ,[(0,a.createVNode)(m,{class:(0,a.normalizeClass)({"orangehrm-buzz-stats-dialog-icon":!0,"--likes":"likes"===o.type}),name:o.icon,"with-container":!0},null,8,["class","name"]),"shares"===o.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.n_share",{shareCount:e.total})),1)])),_:1})):(0,a.createCommentVNode)("",!0),"likes"===o.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:1},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.n_like",{likesCount:e.total})),1)])),_:1})):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(u),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.users,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:e,class:"orangehrm-buzz-stats-dialog-employee"},[(0,a.createVNode)(i,{employee:e.employee},null,8,["employee"]),(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-stats-dialog-employee-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.fullName),1)])),_:2},1024)])))),128)),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-buzz-loader"})):(0,a.createCommentVNode)("",!0)])),_:1},8,["onUpdate:show"])):((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,gutters:!1,type:"white",class:"orangehrm-buzz-stats-modal"},{default:(0,a.withCtx)((()=>[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.users,(e=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:e,class:"orangehrm-buzz-stats-modal-employee"},[(0,a.createVNode)(i,{employee:e.employee},null,8,["employee"]),(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-stats-modal-employee-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.fullName),1)])),_:2},1024)])))),128)),e.isLoading?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,class:"orangehrm-buzz-loader"})):(0,a.createCommentVNode)("",!0)])),_:1}))}var eX={name:"PostStatsModal",components:{"oxd-icon":q.OxdIcon,"oxd-sheet":q.OxdSheet,"oxd-dialog":q.OxdDialog,"profile-image":DY,"oxd-loading-spinner":q.OxdSpinner},props:{postId:{type:Number,required:!0},type:{type:String,required:!0},icon:{type:String,required:!0},mobile:{type:Boolean,default:!1}},emits:["close"],setup(e,t){let o;const l=10,{$tEmpName:n}=Da();switch(e.type){case"likes":o=`/api/v2/buzz/shares/${e.postId}/likes`;break;case"shares":o=`/api/v2/buzz/posts/${e.postId}/shares`;break;default:break}const r=new P(window.appGlobal.baseUrl,o),i=(0,a.reactive)({total:0,offset:0,users:[],isLoading:!1}),d=()=>{i.isLoading=!0,r.getAll({limit:l,offset:i.offset}).then((e=>{const{data:t,meta:o}=e.data;if(i.total=o?.total||0,Array.isArray(t)){const e=t.map((e=>{const{employee:t}=e;return{employee:t,fullName:n(t,{includeMiddle:!1,excludePastEmpTag:!1})}}));i.users=[...i.users,...e]}})).finally((()=>i.isLoading=!1))};gO((()=>{i.users.length>=i.total||(i.offset+=l,d())})),(0,a.onBeforeMount)((()=>d()));const s=()=>{t.emit("close")};return{onClose:s,fetchData:d,...(0,a.toRefs)(i)}}};const tX=(0,r.c)(eX,[["render",ZJ],["__scopeId","data-v-21e5ef86"]]);var oX=tX,aX={name:"PostStats",components:{"oxd-icon":q.OxdIcon,"post-stats-modal":oX},directives:{"click-outside":q.clickOutsideDirective},props:{post:{type:Object,required:!0},mobile:{type:Boolean,default:!1}},emits:["comment"],data(){return{showLikeList:!1,showSharesList:!1}},computed:{likesCount(){return this.$t("buzz.n_like",{likesCount:this.post.stats?.numOfLikes||0})},sharesCount(){return null===this.post.stats?.numOfShares?null:this.$t("buzz.n_share",{shareCount:this.post.stats?.numOfShares||0})},commentsCount(){return this.$t("buzz.n_comment",{commentCount:this.post.stats?.numOfComments||0})},likesClasses(){return{"orangehrm-buzz-stats-active":this.post.stats?.numOfLikes>0}},sharesClasses(){return{"orangehrm-buzz-stats-active":this.post.stats?.numOfShares>0}}},methods:{onShowComments(){this.$emit("comment")},onShowLikeList(){this.showSharesList=!1,this.post.stats?.numOfLikes&&(this.showLikeList=!0)},onShowSharesList(){this.showLikeList=!1,this.post.stats?.numOfShares&&(this.showSharesList=!0)},onClose(){this.showLikeList=!1,this.showSharesList=!1}}};const lX=(0,r.c)(aX,[["render",XJ],["__scopeId","data-v-4a5b1f8a"]]);var nX=lX;const rX={class:"orangehrm-buzz-create-post-header"},iX={class:"orangehrm-buzz-create-post-header-text"},dX={class:"orangehrm-buzz-create-post-actions"};function sX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-button"),s=(0,a.resolveComponent)("oxd-buzz-post-input"),c=(0,a.resolveComponent)("oxd-form"),m=(0,a.resolveComponent)("oxd-divider"),u=(0,a.resolveComponent)("oxd-glass-button"),p=(0,a.resolveComponent)("oxd-sheet"),h=(0,a.resolveComponent)("share-video-modal"),g=(0,a.resolveComponent)("share-photo-modal");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(p,{class:"orangehrm-buzz-create-post"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",rX,[(0,a.createVNode)(i,{employee:o.employee},null,8,["employee"]),(0,a.createElementVNode)("div",iX,[(0,a.createVNode)(c,{onSubmitValid:l.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.post,"onUpdate:modelValue":t[0]||(t[0]=e=>l.post=e),rules:l.rules,placeholder:e.$t("buzz.post_placeholder")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{type:"submit",label:e.$t("buzz.post")},null,8,["label"])])),_:1},8,["modelValue","rules","placeholder"])])),_:1},8,["onSubmitValid"])])]),(0,a.createVNode)(m),(0,a.createElementVNode)("div",dX,[(0,a.createVNode)(u,{icon:"cameraglass",label:e.$t("buzz.share_photos"),onClick:l.onClickSharePhotos},null,8,["label","onClick"]),(0,a.createVNode)(u,{icon:"videoglass",label:e.$t("buzz.share_video"),onClick:l.onClickShareVideos},null,8,["label","onClick"])])])),_:1}),l.showVideoModal?((0,a.openBlock)(),(0,a.createBlock)(h,{key:0,text:l.post,employee:o.employee,onClose:l.onCloseVideoModal},null,8,["text","employee","onClose"])):(0,a.createCommentVNode)("",!0),l.showPhotoModal?((0,a.openBlock)(),(0,a.createBlock)(g,{key:1,text:l.post,employee:o.employee,onClose:l.onClosePhotoModal},null,8,["text","employee","onClose"])):(0,a.createCommentVNode)("",!0)],64)}function cX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-buzz-post-input"),d=(0,a.resolveComponent)("oxd-input-field"),s=(0,a.resolveComponent)("video-frame"),c=(0,a.resolveComponent)("post-modal");return(0,a.openBlock)(),(0,a.createBlock)(c,{loading:e.isLoading,title:e.$t("buzz.share_video"),onSubmit:l.onSubmit,onClose:t[2]||(t[2]=t=>e.$emit("close",!1))},{header:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:e.post.text,"onUpdate:modelValue":t[0]||(t[0]=t=>e.post.text=t),rules:l.rules.text,placeholder:e.$t("buzz.post_placeholder")},null,8,["modelValue","rules","placeholder"])])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:e.post.url,"onUpdate:modelValue":t[1]||(t[1]=t=>e.post.url=t),type:"textarea",rules:l.rules.url,label:e.$t("buzz.video_url"),placeholder:e.$t("buzz.paste_video_url")},null,8,["modelValue","rules","label","placeholder"]),e.embedURL?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"video-src":e.embedURL},null,8,["video-src"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","title","onSubmit"])}const mX={class:"orangehrm-modal-header"},uX={class:"orangehrm-buzz-post-modal-header"},pX={class:"orangehrm-buzz-post-modal-header-text"};function hX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("profile-image"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("oxd-form-actions"),u=(0,a.resolveComponent)("oxd-form"),p=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(p,{class:"orangehrm-dialog-modal",persistent:!0,"onUpdate:show":l.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",mX,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.title),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(u,{loading:o.loading,onSubmitValid:l.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",uX,[(0,a.createVNode)(s,{employee:o.employee},null,8,["employee"]),(0,a.createElementVNode)("div",pX,[(0,a.renderSlot)(e.$slots,"header",{},void 0,!0)])]),(0,a.renderSlot)(e.$slots,"default",{},void 0,!0),(0,a.createVNode)(m,{class:"orangehrm-buzz-post-modal-actions"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{type:"submit",disabled:o.disabled,label:o.actionLabel||e.$t("buzz.share")},null,8,["disabled","label"])])),_:1})])),_:3},8,["loading","onSubmitValid"])])),_:3},8,["onUpdate:show"])}var gX={name:"PostModal",components:{"oxd-dialog":q.OxdDialog,"profile-image":DY},props:{title:{type:String,required:!0},employee:{type:Object,required:!0},loading:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},actionLabel:{type:String,default:null,required:!1}},emits:["close","submit"],setup(e,t){const o=()=>{t.emit("submit")},a=()=>{t.emit("close")};return{onSubmit:o,onCancel:a}}};const vX=(0,r.c)(gX,[["render",hX],["__scopeId","data-v-3aee344e"]]);var fX=vX,yX={name:"ShareVideoModal",components:{"post-modal":fX,"video-frame":xY,"oxd-buzz-post-input":q.OxdBuzzPostInput},props:{text:{type:String,default:null}},emits:["close"],setup(e,t){const{$t:o}=Be(),l=new P(window.appGlobal.baseUrl,"/api/v2/buzz/posts"),n=(0,a.reactive)({post:{text:e.text||null,url:null},embedURL:null,isLoading:!1}),r={url:[Ht,(0,q.promiseDebounce)((async e=>{if(!e)return!0;n.embedURL=null;const t=await l.request({method:"GET",url:"/api/v2/buzz/validation/links",params:{url:e}}),{data:a}=t.data;return!0===a?.valid?(n.embedURL=a.embeddedURL,!0):o("general.invalid_video_url_message")}),500)],text:[Wt(65530)]},i=()=>{n.isLoading=!0,l.create({type:"video",link:n.post.url,text:n.post.text}).then((()=>t.emit("close",!0)))};return{rules:r,onSubmit:i,...(0,a.toRefs)(n)}}};const CX=(0,r.c)(yX,[["render",cX]]);var VX=CX;function bX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-buzz-post-input"),d=(0,a.resolveComponent)("photo-input"),s=(0,a.resolveComponent)("post-modal");return(0,a.openBlock)(),(0,a.createBlock)(s,{loading:e.isLoading,disabled:l.isDisabled,title:e.$t("buzz.share_photos"),onSubmit:l.onSubmit,onClose:t[2]||(t[2]=t=>e.$emit("close",!1))},{header:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:e.post.text,"onUpdate:modelValue":t[0]||(t[0]=t=>e.post.text=t),rules:l.rules.text,placeholder:e.$t("buzz.post_placeholder")},null,8,["modelValue","rules","placeholder"])])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,{modelValue:e.post.photos,"onUpdate:modelValue":t[1]||(t[1]=t=>e.post.photos=t)},null,8,["modelValue"])])),_:1},8,["loading","disabled","title","onSubmit"])}const xX={class:"orangehrm-photo-input"},wX={class:"orangehrm-photo-input-field"};function NX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("oxd-alert"),s=(0,a.resolveComponent)("photo-upload-area"),c=(0,a.resolveComponent)("oxd-button"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("photo-frame");return(0,a.openBlock)(),(0,a.createElementBlock)("div",xX,[(0,a.createVNode)(d,{type:"error",show:!!l.validationMessage,message:l.validationMessage},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{name:"x",class:"orangehrm-photo-input-remove",onClick:l.onClickCloseAlert},null,8,["onClick"])])),_:1},8,["show","message"]),l.showUploadArea?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,"onUpdate:modelValue":l.onFileChange},null,8,["onUpdate:modelValue"])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",wX,[l.showUploadButton?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,type:"file",value:"","onUpdate:modelValue":l.onFileChange},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{"icon-name":"file-image",label:e.$t("buzz.add_photos")},null,8,["label"])])),_:1},8,["onUpdate:modelValue"])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(u,{media:o.modelValue},{content:(0,a.withCtx)((({index:e})=>[(0,a.createVNode)(i,{name:"x",class:"orangehrm-photo-input-remove --float",onClick:t=>l.onClickRemove(e)},null,8,["onClick"])])),_:1},8,["media"])])}const _X={class:"orangehrm-photo-upload-area"};function kX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(s,{type:"file"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",_X,[(0,a.createVNode)(i,{class:"orangehrm-photo-upload-icon",name:"images"}),(0,a.createVNode)(d,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.add_photos")),1)])),_:1})])])),_:1})}var SX={name:"PhotoUploadArea",components:{"oxd-icon":q.OxdIcon}};const $X=(0,r.c)(SX,[["render",kX],["__scopeId","data-v-3ee116be"]]);var DX=$X,EX={name:"PhotoInput",components:{"oxd-alert":q.OxdAlert,"photo-frame":OJ,"photo-upload-area":DX},props:{modelValue:{type:Array,required:!0}},emits:["update:modelValue"],setup(e,t){const{$t:o}=Be(),l=(0,a.ref)(""),n=po(["image/gif","image/jpeg","image/jpg","image/pjpeg","image/png","image/x-png"]),r=uo(2097152),i=a=>{if(a)return l.value="",!0!==r(a)?l.value=o("buzz.file_size_validation_message"):!0!==n(a)?l.value=o("buzz.file_type_validation_message"):void t.emit("update:modelValue",[...e.modelValue||[],a])},d=o=>{l.value="",t.emit("update:modelValue",(e.modelValue||[]).filter(((e,t)=>o!==t)))},s=()=>{l.value=""},c=(0,a.computed)((()=>Array.isArray(e.modelValue)&&e.modelValue.length<1)),m=(0,a.computed)((()=>Array.isArray(e.modelValue)&&e.modelValue.length>0&&e.modelValue.length<5));return{onFileChange:i,onClickRemove:d,showUploadArea:c,showUploadButton:m,onClickCloseAlert:s,validationMessage:l}}};const TX=(0,r.c)(EX,[["render",NX],["__scopeId","data-v-68867dd2"]]);var IX=TX,BX={name:"SharePhotoModal",components:{"post-modal":fX,"photo-input":IX,"oxd-buzz-post-input":q.OxdBuzzPostInput},props:{text:{type:String,default:null}},emits:["close"],setup(e,t){const o={text:[Wt(65530)]},l=new P(window.appGlobal.baseUrl,"/api/v2/buzz/posts"),n=(0,a.reactive)({post:{text:e.text||null,photos:[]},isLoading:!1}),r=()=>{n.isLoading=!0,l.create({type:"photo",text:n.post.text,photos:n.post.photos}).then((()=>t.emit("close",!0)))},i=(0,a.computed)((()=>0===n.post.photos.length));return{rules:o,onSubmit:r,isDisabled:i,...(0,a.toRefs)(n)}}};const LX=(0,r.c)(BX,[["render",bX]]);var UX=LX,AX={name:"CreatePost",components:{"oxd-sheet":q.OxdSheet,"profile-image":DY,"oxd-glass-button":q.OxdGlassButton,"oxd-buzz-post-input":q.OxdBuzzPostInput,"share-video-modal":VX,"share-photo-modal":UX},props:{employee:{type:Object,required:!0}},emits:["refresh"],setup(e,t){const o=(0,a.ref)(null),{saveSuccess:l}=Nt(),n=(0,a.ref)(!1),r=(0,a.ref)(!1),i=[Wt(65530)],d=new P(window.appGlobal.baseUrl,"/api/v2/buzz/posts"),s=()=>{null!==o.value&&""!==String(o.value).trim()&&d.create({type:"text",text:o.value}).then((()=>{l(),o.value=null,t.emit("refresh")}))},c=()=>{r.value=!0},m=()=>{n.value=!0},u=e=>{n.value=!1,e&&(l(),t.emit("refresh"))},p=e=>{r.value=!1,e&&(l(),t.emit("refresh"))};return{post:o,rules:i,onSubmit:s,showVideoModal:n,showPhotoModal:r,onCloseVideoModal:u,onClosePhotoModal:p,onClickSharePhotos:c,onClickShareVideos:m}}};const PX=(0,r.c)(AX,[["render",sX],["__scopeId","data-v-2afe39e0"]]);var qX=PX;const FX={class:"orangehrm-buzz-post-actions"};function MX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("post-like"),d=(0,a.resolveComponent)("post-comment"),s=(0,a.resolveComponent)("post-share");return(0,a.openBlock)(),(0,a.createElementBlock)("div",FX,[(0,a.createVNode)(i,{like:o.post.liked,onClick:t[0]||(t[0]=e=>l.onClickAction("like"))},null,8,["like"]),(0,a.createVNode)(d,{onClick:t[1]||(t[1]=e=>l.onClickAction("comment"))}),(0,a.createVNode)(s,{onClick:t[2]||(t[2]=e=>l.onClickAction("share"))})])}const zX=e=>((0,a.pushScopeId)("data-v-efc36ba6"),e=e(),(0,a.popScopeId)(),e),jX=(0,a.createStaticVNode)('<g id="Group" fill="none" fill-rule="evenodd" transform="translate(467 392)" data-v-efc36ba6><path id="heart" class="orangehrm-heart-icon-path" d="M29.144 20.773c-.063-.13-4.227-8.67-11.44-2.59C7.63 28.795 28.94 43.256 29.143 43.394c.204-.138 21.513-14.6 11.44-25.213-7.214-6.08-11.377 2.46-11.44 2.59z" fill="#64728c" data-v-efc36ba6></path><g class="orangehrm-heart-icon-group7" opacity="0" transform="translate(7 6)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval1" fill="#9CD8C3" cx="2" cy="6" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval2" fill="#8CE8C3" cx="5" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group6" opacity="0" transform="translate(0 28)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval1" fill="#CC8EF5" cx="2" cy="7" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval2" fill="#91D2FA" cx="3" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group3" opacity="0" transform="translate(52 28)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval2" fill="#9CD8C3" cx="2" cy="7" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval1" fill="#8CE8C3" cx="4" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group2" opacity="0" transform="translate(44 6)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval2" fill="#CC8EF5" cx="5" cy="6" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval1" fill="#CC8EF5" cx="2" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group5" opacity="0" transform="translate(14 50)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval1" fill="#91D2FA" cx="6" cy="5" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval2" fill="#91D2FA" cx="2" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group4" opacity="0" transform="translate(35 50)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval1" fill="#F48EA7" cx="6" cy="5" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval2" fill="#F48EA7" cx="2" cy="2" r="2" data-v-efc36ba6></circle></g><g class="orangehrm-heart-icon-group1" opacity="0" transform="translate(24)" data-v-efc36ba6><circle class="orangehrm-heart-icon-oval1" fill="#9FC7FA" cx="2.5" cy="3" r="2" data-v-efc36ba6></circle><circle class="orangehrm-heart-icon-oval2" fill="#9FC7FA" cx="7.5" cy="2" r="2" data-v-efc36ba6></circle></g></g>',1),RX=[jX],OX=zX((()=>(0,a.createElementVNode)("span",{class:"orangehrm-heart-icon-circle"},null,-1)));function GX(e,t,o,l,n,r){return(0,a.openBlock)(),(0,a.createElementBlock)("div",{class:(0,a.normalizeClass)({"orangehrm-like-animation":o.like})},[((0,a.openBlock)(),(0,a.createElementBlock)("svg",{id:"heart-svg",class:"orangehrm-heart-icon",viewBox:"467 392 58 57",xmlns:"http://www.w3.org/2000/svg",onClick:t[0]||(t[0]=(...t)=>e.addLike&&e.addLike(...t))},RX)),OX],2)}var QX={name:"PostLikeButton",props:{like:{type:Boolean,required:!0}}};const HX=(0,r.c)(QX,[["render",GX],["__scopeId","data-v-efc36ba6"]]);var WX=HX;function YX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button");return(0,a.openBlock)(),(0,a.createBlock)(i,{name:"share-fill","with-container":!0})}var JX={name:"PostShareButton"};const XX=(0,r.c)(JX,[["render",YX]]);var KX=XX;function ZX(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button");return(0,a.openBlock)(),(0,a.createBlock)(i,{name:"chat-text-fill","with-container":!0})}var eK={name:"PostCommentButton"};const tK=(0,r.c)(eK,[["render",ZX]]);var oK=tK,aK={name:"PostActions",components:{"post-like":WX,"post-share":KX,"post-comment":oK},props:{post:{type:Object,required:!0}},emits:["like","comment","share"],setup(e,t){let o=!1;const{updatePostLike:a}=wY(new P(window.appGlobal.baseUrl,"")),l=l=>{switch(l){case"comment":t.emit("comment");break;case"share":t.emit("share");break;case"like":o||(o=!0,a(e.post.id,e.post.liked).then((()=>{o=!1,t.emit("like")})));break;default:break}};return{onClickAction:l}}};const lK=(0,r.c)(aK,[["render",MX],["__scopeId","data-v-2b81b03f"]]);var nK=lK;const rK={key:2};function iK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-buzz-post-input"),d=(0,a.resolveComponent)("video-frame"),s=(0,a.resolveComponent)("photo-frame"),c=(0,a.resolveComponent)("oxd-text"),m=(0,a.resolveComponent)("photo-input"),u=(0,a.resolveComponent)("oxd-input-field"),p=(0,a.resolveComponent)("post-modal");return(0,a.openBlock)(),(0,a.createBlock)(p,{loading:e.isLoading,title:e.$t("buzz.edit_post"),"action-label":e.$t("buzz.post"),onSubmit:l.onSubmit,onClose:t[3]||(t[3]=t=>e.$emit("close",!1))},{header:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:e.post.text,"onUpdate:modelValue":t[0]||(t[0]=t=>e.post.text=t),rules:l.rules.text},null,8,["modelValue","rules"])])),default:(0,a.withCtx)((()=>[o.data.originalPost?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},["video"===o.data.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,"video-src":o.data.video.link},null,8,["video-src"])):(0,a.createCommentVNode)("",!0),"photo"===o.data.type?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,media:o.data.photoIds},null,8,["media"])):(0,a.createCommentVNode)("",!0),"video"===o.data.type||"photo"===o.data.type?((0,a.openBlock)(),(0,a.createElementBlock)("br",rK)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,{tag:"p",class:"orangehrm-buzz-share-employee"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.employee),1)])),_:1}),(0,a.createVNode)(c,{tag:"p",class:"orangehrm-buzz-share-date"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.dateTime),1)])),_:1}),l.originalPost.text?((0,a.openBlock)(),(0,a.createBlock)(c,{key:3,tag:"p",class:"orangehrm-buzz-share-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.text),1)])),_:1})):(0,a.createCommentVNode)("",!0)],64)):((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:1},["text"===e.post.type||"photo"===e.post.type?((0,a.openBlock)(),(0,a.createBlock)(m,{key:0,modelValue:e.post.photos,"onUpdate:modelValue":t[1]||(t[1]=t=>e.post.photos=t)},null,8,["modelValue"])):(0,a.createCommentVNode)("",!0),"video"===e.post.type?((0,a.openBlock)(),(0,a.createBlock)(u,{key:1,modelValue:e.post.video,"onUpdate:modelValue":t[2]||(t[2]=t=>e.post.video=t),type:"textarea",rules:l.rules.url,label:e.$t("buzz.video_url")},null,8,["modelValue","rules","label"])):(0,a.createCommentVNode)("",!0),e.embedURL?((0,a.openBlock)(),(0,a.createBlock)(d,{key:2,"video-src":e.embedURL},null,8,["video-src"])):(0,a.createCommentVNode)("",!0)],64))])),_:1},8,["loading","title","action-label","onSubmit"])}var dK={name:"EditPostModal",components:{"post-modal":fX,"photo-frame":OJ,"photo-input":IX,"video-frame":xY,"oxd-buzz-post-input":q.OxdBuzzPostInput},props:{data:{type:Object,required:!0}},emits:["close"],setup(e,t){const{$t:o}=Be(),{locale:l}=Le(),{jsDateFormat:n,jsTimeFormat:r}=R(),{$tEmpName:i}=Da(),d=new P(window.appGlobal.baseUrl,""),{updateSuccess:s}=Nt(),{updatePost:c,updateSharedPost:m}=wY(d),u=(0,a.reactive)({post:{text:e.data.text,type:e.data.type,photos:e.data.photoIds||[],video:e.data.video?.link||null},isLoading:!1,embedURL:e.data.video?.link||null}),p=()=>{let o="text";u.isLoading=!0,u.post.photos.length>0&&(o="photo"),u.post.video&&(o="video"),new Promise((t=>{e.data.originalPost?t(m(e.data.id,u.post.text)):t(c(e.data.post.id,{type:o,text:u.post.text,link:u.post.video,photos:u.post.photos.filter((e=>"object"===typeof e)),deletedPhotos:(e.data.photoIds||[]).filter((e=>-1===u.post.photos.findIndex((t=>t===e))))}))})).then((e=>{s(),t.emit("close",e.data)}))},h={url:[Ht,(0,q.promiseDebounce)((async e=>{if(!e)return!0;u.embedURL=null;const t=await d.request({method:"GET",url:"/api/v2/buzz/validation/links",params:{url:e}}),{data:a}=t.data;return!0===a?.valid?(u.embedURL=a.embeddedURL,!0):o("general.invalid_video_url_message")}),500)],text:[Wt(65530),t=>"video"===e.data.type||u.post.photos.length>0||Ht(t)]},g=(0,a.computed)((()=>{const t=e.data.originalPost?.text,o=e.data.originalPost?.employee,{createdDate:a,createdTime:d}=e.data.originalPost,s=ue(`${a} ${d} +00:00`,"yyyy-MM-dd HH:mm xxx");return{text:t,employee:i(o,{includeMiddle:!0,excludePastEmpTag:!1}),dateTime:pe(s,`${n} ${r}`,{locale:l})}}));return{rules:h,onSubmit:p,originalPost:g,...(0,a.toRefs)(u)}}};const sK=(0,r.c)(dK,[["render",iK],["__scopeId","data-v-1bc0be4f"]]);var cK=sK;function mK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("post-actions-pill"),d=(0,a.resolveComponent)("photo-viewer"),s=(0,a.resolveComponent)("post-details");return(0,a.openBlock)(),(0,a.createElementBlock)("div",{class:(0,a.normalizeClass)(l.layoutClasses)},[l.showPhoto?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,post:o.post,"photo-index":o.photoIndex,onClose:t[1]||(t[1]=t=>e.$emit("close",!1))},{default:(0,a.withCtx)((()=>[o.mobile?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,post:o.post,onLike:t[0]||(t[0]=t=>e.$emit("like")),onComment:l.onClickComment},null,8,["post","onComment"])):(0,a.createCommentVNode)("",!0)])),_:1},8,["post","photo-index"])):(0,a.createCommentVNode)("",!0),l.showDetails?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,post:o.post,mobile:o.mobile,onLike:t[2]||(t[2]=t=>e.$emit("like")),onClose:t[3]||(t[3]=t=>e.$emit("close",!1)),onCreateComment:t[4]||(t[4]=t=>e.$emit("createComment",t)),onDeleteComment:t[5]||(t[5]=t=>e.$emit("deleteComment",t))},null,8,["post","mobile"])):(0,a.createCommentVNode)("",!0)],2)}const uK={class:"orangehrm-photo-viewer"},pK=["src"],hK=["src"],gK={key:0,class:"orangehrm-photo-viewer-controls"},vK={class:"orangehrm-photo-viewer-actions"};function fK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",uK,[(0,a.createElementVNode)("img",{class:"orangehrm-photo-viewer-background",alt:"photo",src:l.selectedPhoto},null,8,pK),(0,a.createElementVNode)("img",{class:"orangehrm-photo-viewer-photo",alt:"background",src:l.selectedPhoto},null,8,hK),o.post.photoIds.length>1?((0,a.openBlock)(),(0,a.createElementBlock)("div",gK,[(0,a.createVNode)(i,{class:"orangehrm-photo-viewer-icon actions",name:"chevron-left",disabled:0===e.index,onClick:l.onClickPreviousPhoto},null,8,["disabled","onClick"]),(0,a.createVNode)(i,{class:"orangehrm-photo-viewer-icon actions",name:"chevron-right",disabled:e.index===o.post.photoIds.length-1,onClick:l.onClickNextPhoto},null,8,["disabled","onClick"])])):(0,a.createCommentVNode)("",!0),(0,a.createElementVNode)("div",vK,[(0,a.renderSlot)(e.$slots,"default",{},void 0,!0)]),(0,a.createVNode)(i,{class:"orangehrm-photo-viewer-close actions",name:"x",onClick:l.onClickClose},null,8,["onClick"])])}var yK={name:"PhotoViewer",props:{post:{type:Object,required:!0},photoIndex:{type:Number,required:!0}},emits:["close"],setup(e,t){const o=(0,a.reactive)({index:e.photoIndex}),l=()=>o.index++,n=()=>o.index--,r=(0,a.computed)((()=>{const t=e.post.photoIds[o.index];return`${window.appGlobal.baseUrl}/buzz/photo/${t}`})),i=e=>{e.key&&"Escape"!==e.key||t.emit("close")};return window.addEventListener("keydown",i),(0,a.onBeforeUnmount)((()=>window.removeEventListener("keydown",i))),{onClickClose:i,selectedPhoto:r,onClickNextPhoto:l,onClickPreviousPhoto:n,...(0,a.toRefs)(o)}}};const CK=(0,r.c)(yK,[["render",fK],["__scopeId","data-v-ee039976"]]);var VK=CK;const bK={class:"orangehrm-post-details"},xK={class:"orangehrm-post-details-header"},wK={class:"orangehrm-post-details-header-text"},NK={class:"orangehrm-post-details-actions"};function _K(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-icon-button"),d=(0,a.resolveComponent)("profile-image"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-divider"),m=(0,a.resolveComponent)("post-like"),u=(0,a.resolveComponent)("post-stats"),p=(0,a.resolveComponent)("post-comment-container");return(0,a.openBlock)(),(0,a.createElementBlock)("div",bK,[(0,a.createVNode)(i,{class:"orangehrm-post-details-close",name:"x","with-container":!1,onClick:l.onClickClose},null,8,["onClick"]),(0,a.createElementVNode)("div",xK,[(0,a.createVNode)(d,{employee:o.post.employee},null,8,["employee"]),(0,a.createElementVNode)("div",wK,[(0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-details-emp-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeFullName),1)])),_:1}),(0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-details-time"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.postDateTime),1)])),_:1})])]),o.post.text?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,tag:"p",class:(0,a.normalizeClass)(l.postClasses)},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.post.text),1)])),_:1},8,["class"])):(0,a.createCommentVNode)("",!0),(0,a.withDirectives)((0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-details-readmore",onClick:l.onClickReadMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.read_more")),1)])),_:1},8,["onClick"]),[[a.vShow,!l.readMore]]),(0,a.createVNode)(c),(0,a.createElementVNode)("div",NK,[(0,a.createVNode)(m,{like:o.post.liked,onClick:l.onClickLike},null,8,["like","onClick"]),(0,a.createVNode)(u,{post:o.post,mobile:o.mobile},null,8,["post","mobile"])]),(0,a.createVNode)(c),(0,a.createVNode)(p,{"post-id":o.post.id,employee:o.post.employee,onCreate:t[0]||(t[0]=t=>e.$emit("createComment",t)),onDelete:t[1]||(t[1]=t=>e.$emit("deleteComment",t))},null,8,["post-id","employee"])])}const kK={class:"orangehrm-buzz-comment"},SK={class:"orangehrm-buzz-comment-add"},$K={key:0};function DK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-input-field"),s=(0,a.resolveComponent)("oxd-form"),c=(0,a.resolveComponent)("post-comment"),m=(0,a.resolveComponent)("oxd-text"),u=(0,a.resolveComponent)("delete-confirmation"),p=(0,a.resolveDirective)("autofocus");return(0,a.openBlock)(),(0,a.createElementBlock)("div",kK,[(0,a.createElementVNode)("div",SK,[(0,a.createVNode)(i,{employee:o.employee},null,8,["employee"]),(0,a.createVNode)(s,{onSubmitValid:l.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createVNode)(d,{modelValue:e.text,"onUpdate:modelValue":t[0]||(t[0]=t=>e.text=t),placeholder:e.$t("buzz.write_your_comment")},null,8,["modelValue","placeholder"]),[[p]])])),_:1},8,["onSubmitValid"])]),e.total>0?((0,a.openBlock)(),(0,a.createElementBlock)("br",$K)):(0,a.createCommentVNode)("",!0),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(e.comments,(e=>((0,a.openBlock)(),(0,a.createBlock)(c,{key:e,data:e,"post-id":o.postId,onEdit:l.onEditComment,onLike:l.onLikeComment,onDelete:l.onDeleteComment},null,8,["data","post-id","onEdit","onLike","onDelete"])))),128)),e.total>4?((0,a.openBlock)(),(0,a.createBlock)(m,{key:1,tag:"p",class:"orangehrm-buzz-comment-readmore",onClick:l.onClickShowMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.showAllComments?e.$t("general.show_less"):e.$t("general.show_more")),1)])),_:1},8,["onClick"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(u,{ref:"deleteDialog",message:e.$t("buzz.post_delete_confirmation_message")},null,8,["message"])])}function EK(){const e={mounted(e){e&&e.querySelector("input")?.focus()}};return{autofocus:e}}const TK={class:"orangehrm-comment-wrapper"},IK={class:"orangehrm-post-comment"},BK={key:1,class:"orangehrm-post-comment-area"},LK={key:0,class:"orangehrm-post-comment-stats"},UK={key:2,class:"orangehrm-post-comment-action-area"};function AK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-input-field"),s=(0,a.resolveComponent)("oxd-text"),c=(0,a.resolveComponent)("oxd-form"),m=(0,a.resolveComponent)("oxd-icon"),u=(0,a.resolveDirective)("autofocus");return(0,a.openBlock)(),(0,a.createElementBlock)("div",TK,[(0,a.createVNode)(i,{employee:o.data.employee},null,8,["employee"]),(0,a.createElementVNode)("div",IK,[e.edit?((0,a.openBlock)(),(0,a.createBlock)(c,{key:0,onSubmitValid:l.onSubmit},{default:(0,a.withCtx)((()=>[(0,a.withDirectives)((0,a.createVNode)(d,{modelValue:e.comment,"onUpdate:modelValue":t[0]||(t[0]=t=>e.comment=t),rules:l.rules,onKeydown:(0,a.withKeys)((0,a.withModifiers)(l.onCancelComment,["stop"]),["esc"])},null,8,["modelValue","rules","onKeydown"]),[[u]]),(0,a.createVNode)(s,{tag:"span"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.press_esc_to"))+" ",1)])),_:1}),(0,a.createVNode)(s,{tag:"span",class:"orangehrm-post-comment-action --cancel",onClick:l.onCancelComment},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.cancel")),1)])),_:1},8,["onClick"])])),_:1},8,["onSubmitValid"])):((0,a.openBlock)(),(0,a.createElementBlock)("div",BK,[(0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-comment-employee"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeFullName),1)])),_:1}),(0,a.createVNode)(s,{tag:"span",class:(0,a.normalizeClass)({"orangehrm-post-comment-text":!0,"--truncate":!1===e.readMore})},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.comment),1)])),_:1},8,["class"]),(0,a.withDirectives)((0,a.createVNode)(s,{tag:"span",class:"orangehrm-post-comment-readmore",onClick:l.onClickReadMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.read_more")),1)])),_:1},8,["onClick"]),[[a.vShow,!e.readMore]]),(0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-comment-datetime"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.dateTime),1)])),_:1}),o.data.comment.numOfLikes>0?((0,a.openBlock)(),(0,a.createElementBlock)("div",LK,[(0,a.createVNode)(m,{name:"heart-fill",class:"orangehrm-post-comment-stats-icon"}),(0,a.createVNode)(s,{tag:"p",class:"orangehrm-post-comment-stats-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.data.comment.numOfLikes),1)])),_:1})])):(0,a.createCommentVNode)("",!0)])),e.edit?(0,a.createCommentVNode)("",!0):((0,a.openBlock)(),(0,a.createElementBlock)("div",UK,[(0,a.createVNode)(s,{tag:"p",class:(0,a.normalizeClass)({"orangehrm-post-comment-action":!0,"--liked":!0===o.data.comment.liked}),onClick:l.onClickLike},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.like")),1)])),_:1},8,["class","onClick"]),o.data.permission.canUpdate?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,tag:"p",class:"orangehrm-post-comment-action",onClick:l.onClickEdit},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit")),1)])),_:1},8,["onClick"])):(0,a.createCommentVNode)("",!0),o.data.permission.canDelete?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,tag:"p",class:"orangehrm-post-comment-action",onClick:l.onClickDelete},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("performance.delete")),1)])),_:1},8,["onClick"])):(0,a.createCommentVNode)("",!0)]))])])}var PK={name:"PostComment",components:{"oxd-icon":q.OxdIcon,"profile-image":DY},directives:{...EK()},props:{postId:{type:Number,required:!0},data:{type:Object,required:!0}},emits:["edit","delete","like"],setup(e,t){let o=!1;const{locale:l}=Le(),{jsDateFormat:n,jsTimeFormat:r}=R(),{$tEmpName:i}=Da(),d=[Ht,Wt(65530)],s=(0,a.reactive)({edit:!1,comment:e.data.comment.text,readMore:new String(e.data.comment.text).length<500}),{updatePostComment:c,updateCommentLike:m}=wY(new P(window.appGlobal.baseUrl,"")),u=()=>{c(e.postId,e.data.comment.id,s.comment).then((()=>{s.edit=!1,t.emit("edit",e.data.comment.id)}))},p=()=>{s.edit=!0},h=()=>{o||(o=!0,m(e.data.comment.id,e.data.comment.liked).then((()=>{o=!1,t.emit("like",e.data.comment.id)})))},g=()=>{t.emit("delete",e.data.comment.id)},v=()=>{s.readMore=!s.readMore},f=()=>{s.comment=e.data.comment.text,s.edit=!1},y=(0,a.computed)((()=>{const{createdDate:t,createdTime:o}=e.data.comment,a=ue(`${t} ${o} +00:00`,"yyyy-MM-dd HH:mm xxx");return pe(a,`${n} ${r}`,{locale:l})})),C=(0,a.computed)((()=>i(e.data.employee,{includeMiddle:!0,excludePastEmpTag:!1})));return{rules:d,dateTime:y,onSubmit:u,onClickLike:h,onClickEdit:p,onClickDelete:g,onClickReadMore:v,onCancelComment:f,employeeFullName:C,...(0,a.toRefs)(s)}}};const qK=(0,r.c)(PK,[["render",AK],["__scopeId","data-v-2d912105"]]);var FK=qK,MK={name:"PostCommentContainer",components:{"post-comment":FK,"profile-image":DY,"delete-confirmation":At},directives:{...EK()},props:{postId:{type:Number,required:!0},employee:{type:Object,required:!0}},emits:["create","delete"],setup(e,t){const o=(0,a.ref)(),l=(0,a.reactive)({text:null,total:0,comments:[],showAllComments:!1}),{saveSuccess:n,updateSuccess:r,deleteSuccess:i}=Nt(),{fetchPostComments:d,savePostComment:s,deletePostComment:c}=wY(new P(window.appGlobal.baseUrl,"")),m=()=>{d(e.postId,l.showAllComments?0:4,!0).then((e=>{const{data:t,meta:o}=e.data;l.total=o.total,l.comments=[...t]}))},u=()=>{l.text&&s(e.postId,l.text).then((()=>{l.text=null,m(),n(),t.emit("create")}))},p=()=>{l.showAllComments=!l.showAllComments,m()},h=()=>{m(),r()},g=a=>{o.value.showDialog().then((o=>{"ok"===o&&c(e.postId,a).then((()=>{m(),i(),t.emit("delete")}))}))},v=()=>{m()};return(0,a.onBeforeMount)((()=>m())),{onSubmit:u,deleteDialog:o,onLikeComment:v,onEditComment:h,onClickShowMore:p,onDeleteComment:g,...(0,a.toRefs)(l)}}};const zK=(0,r.c)(MK,[["render",DK],["__scopeId","data-v-a027a9ee"]]);var jK=zK,RK={name:"PostDetails",components:{"post-stats":nX,"post-like":WX,"profile-image":DY,"post-comment-container":jK},props:{post:{type:Object,required:!0},mobile:{type:Boolean,default:!1}},emits:["like","close","createComment","deleteComment"],setup(e,t){let o=!1;const{locale:l}=Le(),{jsDateFormat:n,jsTimeFormat:r}=R(),{$tEmpName:i}=Da(),d=(0,a.ref)(new String(e.post?.text).length<500),{updatePostLike:s}=wY(new P(window.appGlobal.baseUrl,"")),c=(0,a.computed)((()=>{const{createdDate:t,createdTime:o}=e.post,a=ue(`${t} ${o} +00:00`,"yyyy-MM-dd HH:mm xxx");return pe(a,`${n} ${r}`,{locale:l})})),m=(0,a.computed)((()=>i(e.post.employee,{includeMiddle:!0,excludePastEmpTag:!1}))),u=()=>t.emit("close"),p=()=>{o||(o=!0,s(e.post.id,e.post.liked).then((()=>{o=!1,t.emit("like")})))},h=(0,a.computed)((()=>({"orangehrm-post-details-text":!0,"--truncate":!1===d.value}))),g=()=>{d.value=!d.value};return{readMore:d,postClasses:h,onClickLike:p,onClickClose:u,postDateTime:c,onClickReadMore:g,employeeFullName:m}}};const OK=(0,r.c)(RK,[["render",_K],["__scopeId","data-v-3b8e4fa2"]]);var GK=OK;const QK={class:"orangehrm-buzz-pill"},HK={class:"orangehrm-buzz-pill-actions"},WK={class:"orangehrm-buzz-pill-stats"},YK={class:"orangehrm-buzz-pill-stats-likes"},JK={class:"orangehrm-buzz-pill-stats-other"};function XK(e,t,o,l,n,r){const i=(0,a.resolveComponent)("post-like"),d=(0,a.resolveComponent)("post-comment"),s=(0,a.resolveComponent)("oxd-icon"),c=(0,a.resolveComponent)("oxd-text");return(0,a.openBlock)(),(0,a.createElementBlock)("div",QK,[(0,a.createElementVNode)("div",HK,[(0,a.createVNode)(i,{like:o.post.liked,onClick:l.onClickLike},null,8,["like","onClick"]),(0,a.createVNode)(d,{onClick:l.onClickComment},null,8,["onClick"])]),(0,a.createElementVNode)("div",WK,[(0,a.createElementVNode)("div",YK,[(0,a.createVNode)(s,{name:"heart-fill"}),(0,a.createVNode)(c,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.n_like",{likesCount:o.post.stats.numOfLikes})),1)])),_:1})]),(0,a.createElementVNode)("div",JK,[(0,a.createVNode)(c,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.combinedPostStats),1)])),_:1})])])])}var KK={name:"PostActionsPill",components:{"oxd-icon":q.OxdIcon,"post-like":WX,"post-comment":oK},props:{post:{type:Object,required:!0}},emits:["like","comment"],setup(e,t){let o=!1;const{updatePostLike:a}=wY(new P(window.appGlobal.baseUrl,"")),l=()=>{t.emit("comment")},n=()=>{o||(o=!0,a(e.post.id,e.post.liked).then((()=>{o=!1,t.emit("like")})))};return{onClickLike:n,onClickComment:l}},computed:{combinedPostStats(){const e=this.$t("buzz.n_comment",{commentCount:this.post.stats?.numOfComments||0}),t=this.$t("buzz.n_share",{shareCount:this.post.stats?.numOfShares||0});return null===this.post.stats?.numOfShares?e:`${e}, ${t}`}}};const ZK=(0,r.c)(KK,[["render",XK],["__scopeId","data-v-461ec08a"]]);var eZ=ZK,tZ={name:"PhotoCarousel",components:{"photo-viewer":VK,"post-details":GK,"post-actions-pill":eZ},props:{post:{type:Object,required:!0},mobile:{type:Boolean,default:!1},photoIndex:{type:Number,required:!0}},emits:["like","close","createComment","deleteComment"],setup(e){const t=(0,a.reactive)({view:"photo",index:e.photoIndex}),o=()=>t.index++,l=()=>t.index--,n=()=>t.view="details",r=(0,a.computed)((()=>e.post.photoIds[t.index])),i=(0,a.computed)((()=>({"orangehrm-photo-carousel":!0,"--web":!1===e.mobile}))),d=(0,a.computed)((()=>!1===e.mobile||"photo"===t.view)),s=(0,a.computed)((()=>!1===e.mobile||"details"===t.view));return{showPhoto:d,showDetails:s,layoutClasses:i,selectedPhoto:r,onClickComment:n,onClickNextPhoto:o,onClickPreviousPhoto:l,...(0,a.toRefs)(t)}}};const oZ=(0,r.c)(tZ,[["render",mK],["__scopeId","data-v-9e01ca0c"]]);var aZ=oZ;const lZ={class:"orangehrm-buzz-post"},nZ={class:"orangehrm-buzz-post-header"},rZ={class:"orangehrm-buzz-post-header-details"},iZ={class:"orangehrm-buzz-post-header-text"},dZ={key:0,class:"orangehrm-buzz-post-header-config"},sZ={class:"orangehrm-buzz-post-body"},cZ={class:"orangehrm-buzz-post-footer"};function mZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("profile-image"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-icon-button"),c=(0,a.resolveComponent)("oxd-icon"),m=(0,a.resolveComponent)("oxd-dropdown"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-sheet");return(0,a.openBlock)(),(0,a.createBlock)(p,{gutters:!1,type:"white",class:"orangehrm-buzz"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",lZ,[(0,a.createElementVNode)("div",nZ,[(0,a.createElementVNode)("div",rZ,[(0,a.createVNode)(i,{employee:o.post.employee},null,8,["employee"]),(0,a.createElementVNode)("div",iZ,[(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-post-emp-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.employeeFullName),1)])),_:1}),(0,a.createVNode)(d,{tag:"p",class:"orangehrm-buzz-post-time"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.postDateTime),1)])),_:1})])]),o.post.permission.canUpdate||o.post.permission.canDelete?((0,a.openBlock)(),(0,a.createElementBlock)("div",dZ,[(0,a.createVNode)(m,null,{content:(0,a.withCtx)((()=>[o.post.permission.canDelete?((0,a.openBlock)(),(0,a.createElementBlock)("li",{key:0,class:"orangehrm-buzz-post-header-config-item",onClick:t[0]||(t[0]=t=>e.$emit("delete",t))},[(0,a.createVNode)(c,{name:"trash"}),(0,a.createVNode)(d,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.delete_post")),1)])),_:1})])):(0,a.createCommentVNode)("",!0),o.post.permission.canUpdate?((0,a.openBlock)(),(0,a.createElementBlock)("li",{key:1,class:"orangehrm-buzz-post-header-config-item",onClick:t[1]||(t[1]=t=>e.$emit("edit",t))},[(0,a.createVNode)(c,{name:"pencil"}),(0,a.createVNode)(d,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.edit_post")),1)])),_:1})])):(0,a.createCommentVNode)("",!0)])),default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{name:"three-dots","with-container":!0})])),_:1})])):(0,a.createCommentVNode)("",!0)]),(0,a.createVNode)(u)]),(0,a.createElementVNode)("div",sZ,[(0,a.renderSlot)(e.$slots,"content",{},void 0,!0),(0,a.renderSlot)(e.$slots,"body",{},void 0,!0)]),(0,a.createElementVNode)("div",cZ,[(0,a.renderSlot)(e.$slots,"actionButton",{},void 0,!0),(0,a.renderSlot)(e.$slots,"postStats",{},void 0,!0)]),(0,a.renderSlot)(e.$slots,"comments",{},void 0,!0)])),_:3})}var uZ={name:"PostContainer",components:{"oxd-icon":q.OxdIcon,"oxd-sheet":q.OxdSheet,"oxd-dropdown":q.OxdDropdownMenu,"profile-image":DY},props:{post:{type:Object,required:!0}},emits:["edit","delete"],setup(e){const{locale:t}=Le(),{jsDateFormat:o,jsTimeFormat:l}=R(),{$tEmpName:n}=Da(),r=(0,a.computed)((()=>n(e.post.employee,{includeMiddle:!0,excludePastEmpTag:!1}))),i=(0,a.computed)((()=>{const{createdDate:a,createdTime:n}=e.post,r=ue(`${a} ${n} +00:00`,"yyyy-MM-dd HH:mm xxx");return pe(r,`${o} ${l}`,{locale:t})}));return{postDateTime:i,employeeFullName:r}}};const pZ=(0,r.c)(uZ,[["render",mZ],["__scopeId","data-v-28463d71"]]);var hZ=pZ;const gZ={key:2};function vZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-buzz-post-input"),d=(0,a.resolveComponent)("video-frame"),s=(0,a.resolveComponent)("photo-frame"),c=(0,a.resolveComponent)("oxd-text"),m=(0,a.resolveComponent)("post-modal");return(0,a.openBlock)(),(0,a.createBlock)(m,{loading:e.isLoading,title:e.$t("buzz.share_post"),onSubmit:l.onSubmit,onClose:t[1]||(t[1]=t=>e.$emit("close",!1))},{header:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:e.post.text,"onUpdate:modelValue":t[0]||(t[0]=t=>e.post.text=t),rules:l.rules.text,placeholder:e.$t("buzz.post_placeholder")},null,8,["modelValue","rules","placeholder"])])),default:(0,a.withCtx)((()=>["video"===o.data.type?((0,a.openBlock)(),(0,a.createBlock)(d,{key:0,"video-src":o.data.video.link},null,8,["video-src"])):(0,a.createCommentVNode)("",!0),"photo"===o.data.type?((0,a.openBlock)(),(0,a.createBlock)(s,{key:1,media:o.data.photoIds},null,8,["media"])):(0,a.createCommentVNode)("",!0),"video"===o.data.type||"photo"===o.data.type?((0,a.openBlock)(),(0,a.createElementBlock)("br",gZ)):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(c,{tag:"p",class:"orangehrm-buzz-share-employee"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.employee),1)])),_:1}),(0,a.createVNode)(c,{tag:"p",class:"orangehrm-buzz-share-date"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.dateTime),1)])),_:1}),l.originalPost.text?((0,a.openBlock)(),(0,a.createBlock)(c,{key:3,tag:"p",class:"orangehrm-buzz-share-text"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(l.originalPost.text),1)])),_:1})):(0,a.createCommentVNode)("",!0)])),_:1},8,["loading","title","onSubmit"])}var fZ={name:"SharePostModal",components:{"post-modal":fX,"photo-frame":OJ,"video-frame":xY,"oxd-buzz-post-input":q.OxdBuzzPostInput},props:{data:{type:Object,required:!0}},emits:["close"],setup(e,t){const{locale:o}=Le(),{saveSuccess:l}=Nt(),{jsDateFormat:n,jsTimeFormat:r}=R(),{$tEmpName:i}=Da(),d={text:[Wt(65530)]},s=new P(window.appGlobal.baseUrl,"/api/v2/buzz/shares"),c=(0,a.reactive)({post:{text:null},isLoading:!1}),m=()=>{c.isLoading=!0,s.create({text:c.post.text,shareId:e.data.id}).then((()=>{l(),t.emit("close",!0)}))},u=(0,a.computed)((()=>{const t=e.data.originalPost?.text||e.data.text,a=e.data.originalPost?.employee||e.data.employee,{createdDate:l,createdTime:d}=e.data.originalPost||e.data,s=ue(`${l} ${d} +00:00`,"yyyy-MM-dd HH:mm xxx");return{text:t,employee:i(a,{includeMiddle:!0,excludePastEmpTag:!1}),dateTime:pe(s,`${n} ${r}`,{locale:o})}}));return{rules:d,onSubmit:m,originalPost:u,...(0,a.toRefs)(c)}}};const yZ=(0,r.c)(fZ,[["render",vZ],["__scopeId","data-v-26d19b6a"]]);var CZ=yZ,VZ={name:"NewsFeed",components:{"post-body":HJ,"post-stats":nX,"create-post":qX,"post-actions":nK,"oxd-loading-spinner":q.OxdSpinner,"photo-carousel":aZ,"post-container":hZ,"edit-post-modal":cK,"share-post-modal":CZ,"post-comment-container":jK,"delete-confirmation":At},props:{employee:{type:Object,required:!0},sortField:{type:String,required:!0},mobile:{type:Boolean,default:!1}},setup(e){const t=10,o=(0,a.ref)(),{deleteSuccess:l}=Nt(),{fetchPosts:n,deletePost:r}=wY(new P(window.appGlobal.baseUrl,"")),i=`${window.appGlobal.publicPath}/images/buzz_no_posts.svg`,d=(0,a.reactive)({total:0,offset:0,posts:[],isLoading:!1,showEditModal:!1,editModalState:null,showShareModal:!1,shareModalState:null,showPhotoCarousel:!1,photoCarouselState:null}),s=()=>{d.isLoading=!0,n(t,d.offset,"DESC",e.sortField).then((e=>{const{data:t,meta:o}=e.data;d.total=o.total||0,Array.isArray(t)&&(d.posts=[...d.posts,...t])})).finally((()=>d.isLoading=!1))};gO((()=>{d.posts.length>=d.total||(d.offset+=t,s())}));const c=e=>{d.posts[e].liked=!d.posts[e].liked,d.posts[e].liked?d.posts[e].stats.numOfLikes++:d.posts[e].stats.numOfLikes--},m=e=>{d.showEditModal=!0,d.editModalState={postIndex:e,post:d.posts[e]},document.body.style.overflow="hidden"},u=e=>{d.showShareModal=!0,d.shareModalState=d.posts[e],document.body.style.overflow="hidden"},p=e=>{d.posts[e].showComments?d.posts[e].showComments=!1:d.posts[e].showComments=!0},h=()=>{d.posts=[],d.offset=0,s()},g=(e,t)=>{d.photoCarouselState={postIndex:t,photoIndex:e,post:d.posts[t]},d.showPhotoCarousel=!0,document.body.style.overflow="hidden"},v=()=>{d.showPhotoCarousel=!1,d.photoCarouselState=null,document.body.style.overflow="auto"},f=e=>{d.showShareModal=!1,d.shareModalState=null,document.body.style.overflow="auto",e&&h()},y=e=>{const{data:t}=e;t&&(d.posts[d.editModalState.postIndex]={...t}),d.showEditModal=!1,d.editModalState=null,document.body.style.overflow="auto"},C=e=>{o.value.showDialog().then((t=>{"ok"===t&&r(d.posts[e].id).then((()=>{h(),l()}))}))},V=e=>{d.posts[e].stats.numOfComments++},b=e=>{d.posts[e].stats.numOfComments--};return(0,a.onBeforeMount)((()=>s())),(0,a.watch)((()=>e.sortField),(()=>{d.posts=[],d.offset=0,s()})),{onLike:c,onEdit:m,onShare:u,onDelete:C,resetFeed:h,onComment:p,noPostsPic:i,deleteDialog:o,onSelectPhoto:g,onCreateComment:V,onDeleteComment:b,onCloseEditModal:y,onCloseShareModal:f,onClosePhotoCarousel:v,...(0,a.toRefs)(d)}}};const bZ=(0,r.c)(VZ,[["render",BJ],["__scopeId","data-v-7a817506"]]);var xZ=bZ;const wZ={class:"orangehrm-post-filters"};function NZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",wZ,[(0,a.createVNode)(i,{"icon-name":"clock-history",class:"orangehrm-post-filters-button",label:r.mostRecentButtonLabel,"display-type":r.mostRecentButtonType,onClick:t[0]||(t[0]=t=>e.$emit("updatePriority","share.createdAtUtc"))},null,8,["label","display-type"]),(0,a.createVNode)(i,{"icon-name":"heart-fill",class:"orangehrm-post-filters-button",label:r.mostLikesButtonLabel,"display-type":r.mostLikesButtonType,onClick:t[1]||(t[1]=t=>e.$emit("updatePriority","share.numOfLikes"))},null,8,["label","display-type"]),(0,a.createVNode)(i,{"icon-name":"chat-dots-fill",class:"orangehrm-post-filters-button",label:r.mostCommentsButtonLabel,"display-type":r.mostCommentsButtonType,onClick:t[2]||(t[2]=t=>e.$emit("updatePriority","share.numOfComments"))},null,8,["label","display-type"])])}var _Z={name:"PostFilters",props:{filter:{type:String,required:!0},mobile:{type:Boolean,default:!1}},emits:["updatePriority"],computed:{isMostRecent(){return"share.createdAtUtc"===this.filter},isMostLikes(){return"share.numOfLikes"===this.filter},isMostComments(){return"share.numOfComments"===this.filter},mostRecentButtonType(){return this.isMostRecent?"label-warn":"text"},mostLikesButtonType(){return this.isMostLikes?"label-warn":"text"},mostCommentsButtonType(){return this.isMostComments?"label-warn":"text"},mostRecentButtonLabel(){return this.mobile?this.isMostRecent?this.$t("buzz.most_recent_posts"):"":this.$t("buzz.most_recent_posts")},mostLikesButtonLabel(){return this.mobile?this.isMostLikes?this.$t("buzz.most_liked_posts"):"":this.$t("buzz.most_liked_posts")},mostCommentsButtonLabel(){return this.mobile?this.isMostComments?this.$t("buzz.most_commented_posts"):"":this.$t("buzz.most_commented_posts")}}};const kZ=(0,r.c)(_Z,[["render",NZ],["__scopeId","data-v-33fec775"]]);var SZ=kZ;const $Z={class:"orangehrm-buzz-anniversary"},DZ={class:"orangehrm-buzz-anniversary-profile"},EZ={class:"orangehrm-buzz-anniversary-profile-details"},TZ={class:"orangehrm-buzz-anniversary-duration"},IZ=["src"],BZ={class:"orangehrm-buzz-anniversary-durations-text"},LZ={key:0,class:"orangehrm-buzz-anniversary-nocontent"},UZ=["src"],AZ={key:0,class:"orangehrm-buzz-anniversary-footer"};function PZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("profile-image");return(0,a.openBlock)(),(0,a.createElementBlock)("div",$Z,[(0,a.createVNode)(i,{type:"card-title",class:"orangehrm-buzz-anniversary-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.upcoming_anniversaries")),1)])),_:1}),(0,a.createElementVNode)("div",{class:(0,a.normalizeClass)(["orangehrm-buzz-anniversary-content",{"--show-more":n.anniversariesCount>5}])},[((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.anniversaries,(t=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:t,class:"orangehrm-buzz-anniversary-item"},[(0,a.createElementVNode)("div",DZ,[(0,a.createVNode)(d,{employee:t},null,8,["employee"]),(0,a.createElementVNode)("div",EZ,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-anniversary-emp-name"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.empName),1)])),_:2},1024),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-anniversary-job-details"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.jobTitle),1)])),_:2},1024)])]),(0,a.createElementVNode)("div",TZ,[(0,a.createElementVNode)("img",{alt:"year celebration",class:"orangehrm-buzz-anniversary-year-celebration",src:l.celebrationPic},null,8,IZ),(0,a.createElementVNode)("div",BZ,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-anniversary-duration-years"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.anniversaryYear),1)])),_:2},1024),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-anniversary-duration-years"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("buzz.n_year",{yearsCount:t.anniversaryYear})),1)])),_:2},1024),(0,a.createVNode)(i,{tag:"p",class:"orangehrm-buzz-anniversary-duration-date"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(t.joinedDate),1)])),_:2},1024)])])])))),128)),r.isEmpty?((0,a.openBlock)(),(0,a.createElementBlock)("div",LZ,[(0,a.createElementVNode)("img",{src:l.noContentPic,alt:"No Content"},null,8,UZ),(0,a.createVNode)(i,{tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.no_records_found")),1)])),_:1})])):(0,a.createCommentVNode)("",!0)],2),n.anniversariesCount>5?((0,a.openBlock)(),(0,a.createElementBlock)("div",AZ,[(0,a.createVNode)(i,{tag:"p",onClick:r.onSeeMore},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(r.isViewDetails?e.$t("general.show_more"):e.$t("general.show_less")),1)])),_:1},8,["onClick"])])):(0,a.createCommentVNode)("",!0)])}var qZ={name:"UpcomingAnniversaries",components:{"profile-image":DY},setup(){const{locale:e}=Le(),{$tEmpName:t}=Da(),o=`${window.appGlobal.publicPath}/images/year_celebration.png`,a=`${window.appGlobal.publicPath}/images/buzz_no_anniversaries.png`,l=new P(window.appGlobal.baseUrl,"/api/v2/buzz/anniversaries");return{http:l,locale:e,noContentPic:a,celebrationPic:o,tEmpName:t}},data(){return{viewMore:!1,isLoading:!1,anniversaries:[],anniversariesCount:0}},computed:{isViewDetails(){return!this.viewMore},isEmpty(){return!this.isLoading&&0===this.anniversaries.length}},beforeMount(){this.anniversariesLimit=5,this.getAnniversaries()},methods:{onSeeMore(){this.viewMore=!this.viewMore,this.viewMore?this.anniversariesLimit=0:this.anniversariesLimit=5,this.getAnniversaries()},getAnniversaries(){this.isLoading=!0,this.http.getAll({limit:this.anniversariesLimit}).then((e=>{const{data:t,meta:o}=e.data;this.anniversaries=t.map((e=>{const{employee:t,jobTitle:o,joinedDate:a}=e;return{empNumber:t.empNumber,empName:this.tEmpName(t,{includeMiddle:!1,excludePastEmpTag:!1}),jobTitle:o.title,joinedDate:pe(ue(a),"MMM dd",{locale:this.locale}),anniversaryYear:(new Date).getFullYear()-new Date(a).getFullYear()}})),this.anniversariesCount=o?.total})).finally((()=>this.isLoading=!1))}}};const FZ=(0,r.c)(qZ,[["render",PZ],["__scopeId","data-v-6242e5b6"]]);var MZ=FZ,zZ={components:{"news-feed":xZ,"oxd-tab-panel":q.OxdTabPanel,"post-filters":SZ,"oxd-tab-container":q.OxdTabContainer,"upcoming-anniversaries":MZ},props:{employee:{type:Object,required:!0}},setup(){const{$t:e}=Be(),t=(0,a.ref)(null),o=(0,q.useResponsive)(),l=(0,a.ref)("share.createdAtUtc"),n=(0,a.computed)((()=>!(o.screenType===q.DEVICE_TYPES.DEVICE_LG||o.screenType===q.DEVICE_TYPES.DEVICE_XL))),r=(0,a.computed)((()=>o.windowWidth)),{swipeContainer:i}=EJ((o=>{const a=o.offsetDirection;2===a&&(t.value=e("buzz.upcoming_anniversaries")),4===a&&(t.value=e("buzz.buzz_newsfeed"))})),d=e=>{e&&(l.value=e)};return{width:r,isMobile:n,sortField:l,tabSelector:t,onUpdatePriority:d,swipeRef:i}}};const jZ=(0,r.c)(zZ,[["render",SJ],["__scopeId","data-v-41ac401c"]]);var RZ=jZ,OZ={"view-buzz":RZ};const GZ=e=>((0,a.pushScopeId)("data-v-27a542b7"),e=e(),(0,a.popScopeId)(),e),QZ={class:"orangehrm-system-check"},HZ=GZ((()=>(0,a.createElementVNode)("br",null,null,-1))),WZ=GZ((()=>(0,a.createElementVNode)("br",null,null,-1))),YZ=GZ((()=>(0,a.createElementVNode)("b",null,"/src/log",-1))),JZ=GZ((()=>(0,a.createElementVNode)("b",null,"/src/log/orangehrm.log",-1)));function XZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("flex-table"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("oxd-form-actions"),m=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createBlock)(m,{loading:n.isLoading,class:(0,a.normalizeClass)(n.isLoading?"orangehrm-system-check-form-loading":"orangehrm-system-check-form")},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",QZ,[(0,a.createVNode)(i,{tag:"h5",class:"orangehrm-system-check-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" System Check ")])),_:1}),HZ,(0,a.createVNode)(i,{class:"orangehrm-system-check-content"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" To properly function the system, please ensure that all of the system check items listed below are green. If any are red, please take the necessary steps to fix them. ")])),_:1}),WZ,n.error?.message?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,class:"orangehrm-system-check-content --error"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)(" An unexpected error occurred. Please provide the file write permission to "),YZ,(0,a.createTextVNode)(" directory and check the error log in "),JZ,(0,a.createTextVNode)(" file for more details. ")])),_:1})):(0,a.createCommentVNode)("",!0),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(n.items,(e=>((0,a.openBlock)(),(0,a.createBlock)(d,{key:e.category,items:e.checks,"title-name":e.category},null,8,["items","title-name"])))),128)),(0,a.createVNode)(c,{class:"orangehrm-system-check-action"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{class:"orangehrm-left-space","display-type":"ghost",label:"Re-Check",type:"submit",onClick:r.reCheck},null,8,["onClick"])])),_:1})]),(0,a.renderSlot)(e.$slots,"footer",{},void 0,!0)])),_:3},8,["loading","class"])}const KZ={class:"orangehrm-flex-table"};function ZZ(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider");return(0,a.openBlock)(),(0,a.createElementBlock)("div",KZ,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-flex-table-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(o.titleName),1)])),_:1}),(0,a.createVNode)(d,{class:"orangehrm-flex-table-divider"}),((0,a.openBlock)(!0),(0,a.createElementBlock)(a.Fragment,null,(0,a.renderList)(o.items,((e,t)=>((0,a.openBlock)(),(0,a.createElementBlock)("div",{key:t,class:"orangehrm-flex-table-row"},[(0,a.createVNode)(i,{class:"orangehrm-flex-table-content"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.label),1)])),_:2},1024),(0,a.createVNode)(i,{class:(0,a.normalizeClass)(r.getClass(e.value.status))},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.value.message),1)])),_:2},1032,["class"])])))),128))])}var e0={name:"FlexTable",props:{titleName:{type:String,required:!0},items:{type:Array,required:!0,default:()=>[]}},methods:{getClass(e){return 1===e?"orangehrm-flex-table-value --success":2===e?"orangehrm-flex-table-value --warning":"orangehrm-flex-table-value --error"}}};const t0=(0,r.c)(e0,[["render",ZZ],["__scopeId","data-v-29402b1e"]]);var o0=t0,a0={name:"SystemCheckScreen",components:{"flex-table":o0},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/core/system-check");return{http:e}},data(){return{items:[],isLoading:!1,isInterrupted:!1,error:null}},beforeMount(){this.fetchData()},methods:{fetchData(){this.isLoading=!0,this.http.getAll().then((e=>{const{data:t,meta:o}=e.data;this.items=t,this.isInterrupted=o.isInterrupted,this.error=o.error})).finally((()=>{this.isLoading=!1}))},reCheck(){this.fetchData()}}};const l0=(0,r.c)(a0,[["render",XZ],["__scopeId","data-v-27a542b7"]]);var n0=l0,r0={"system-check":n0};const i0=(0,a.createElementVNode)("br",null,null,-1),d0={class:"orangehrm-paper-container"},s0={class:"orangehrm-header-container"},c0={class:"orangehrm-container"},m0={class:"orangehrm-bottom-container"};function u0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("event-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("table-header"),y=(0,a.resolveComponent)("oxd-card-table"),C=(0,a.resolveComponent)("oxd-pagination"),V=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(v,{"filter-title":e.$t("claim.events")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.name,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.name=e),label:e.$t("claim.event_name")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.status,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.status=e),type:"select",label:e.$t("general.status"),options:n.ClaimEventStatuses},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),i0,(0,a.createElementVNode)("div",d0,[(0,a.createElementVNode)("div",s0,[(0,a.createVNode)(p,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(f,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",c0,[(0,a.createVNode)(y,{selected:n.checkedItems,"onUpdate:selected":t[2]||(t[2]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[3]||(t[3]=e=>l.sortDefinition=e),items:l.items.data,headers:n.headers,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","items","headers","loading"])]),(0,a.createElementVNode)("div",m0,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(C,{key:0,current:l.currentPage,"onUpdate:current":t[4]||(t[4]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(V,{ref:"deleteDialog"},null,512)],64)}function p0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",clear:!1,label:e.$t("claim.event_name"),"create-options":r.loadEvents},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var h0={name:"EventAutocomplete",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/events");return{http:e}},methods:{async loadEvents(e){return new Promise((t=>{if(e.trim()){const o={name:e.trim()};this.http.getAll(o).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:e.name}))))}))}else t([])}))}}};const g0=(0,r.c)(h0,[["render",p0],["__scopeId","data-v-98384454"]]);var v0=g0;const f0={name:"",status:null},y0={"claimEvent.name":"ASC","claimEvent.status":"DESC"};var C0={components:{"delete-confirmation":At,"event-autocomplete":v0},setup(){const e=(0,a.ref)({...f0}),{$t:t}=Be(),{sortDefinition:o,sortField:l,sortOrder:n,onSort:r}=Pt({sortDefinition:y0}),i=(0,a.computed)((()=>({eventId:"object"===typeof e.value.name?e.value.name.id:null,name:"string"===typeof e.value.name?e.value.name:null,status:e.value.status?1===e.value.status?.id:null,sortField:l.value,sortOrder:n.value}))),d=e=>e.map((e=>({id:e.id,name:e.name,description:e.description,status:e.status?t("general.active"):t("performance.inactive")}))),s=new P(window.appGlobal.baseUrl,"/api/v2/claim/events"),{showPaginator:c,currentPage:m,total:u,pages:p,pageSize:h,response:g,isLoading:v,execQuery:f}=Dt(s,{normalizer:d,query:i});return r(f),{http:s,showPaginator:c,currentPage:m,isLoading:v,total:u,pages:p,pageSize:h,execQuery:f,items:g,response:g,filters:e,sortDefinition:o}},data(){return{headers:[{name:"name",title:this.$t("claim.event_name"),slot:"title",sortField:"claimEvent.name",style:{flex:3}},{name:"status",title:this.$t("general.status"),sortField:"claimEvent.status",style:{flex:2}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],ClaimEventStatuses:[{id:1,label:this.$t("general.active")},{id:0,label:this.$t("performance.inactive")}]}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...f0},this.filterItems()},onClickAdd(){U("/claim/saveEvents")},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onClickEdit(e){U("/claim/saveEvents/{id}",{id:e.id})}}};const V0=(0,r.c)(C0,[["render",u0]]);var b0=V0;const x0={class:"orangehrm-background-container"},w0={class:"orangehrm-card-container"},N0={class:"orangehrm-sm-field"};function _0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-switch-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",x0,[(0,a.createElementVNode)("div",w0,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.add_event")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.claimEvent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.claimEvent.name=e),label:e.$t("claim.event_name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.claimEvent.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.claimEvent.description=e),type:"textarea",label:e.$t("general.description"),rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",N0,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-sm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(m,{modelValue:n.claimEvent.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.claimEvent.status=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const k0={name:"",description:"",status:!0};var S0={components:{"oxd-switch-input":q.OxdSwitchInput},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/events"),{createUniqueValidator:t}=qo(e),o=t("ClaimEvent","name",{matchByField:"isDeleted",matchByValue:"false"});return{http:e,claimEventNameUniqueValidation:o}},data(){return{isLoading:!1,claimEvent:{...k0},rules:{name:[Ht,this.claimEventNameUniqueValidation,Wt(100)],description:[Wt(1e3)]}}},methods:{onCancel(){U("/claim/viewEvents")},onSave(){this.isLoading=!0,this.http.create({...this.claimEvent,name:this.claimEvent.name.trim()}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const $0=(0,r.c)(S0,[["render",_0],["__scopeId","data-v-334dffa7"]]);var D0=$0;const E0={class:"orangehrm-background-container"},T0={class:"orangehrm-card-container"},I0={class:"orangehrm-sm-field"};function B0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-switch-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",E0,[(0,a.createElementVNode)("div",T0,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.edit_event")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.claimEvent.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.claimEvent.name=e),label:e.$t("claim.event_name"),disabled:!n.canEdit,rules:n.rules.name,required:""},null,8,["modelValue","label","disabled","rules"])])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.claimEvent.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.claimEvent.description=e),type:"textarea",label:e.$t("general.description"),rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",I0,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-sm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(u,{modelValue:n.claimEvent.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.claimEvent.status=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const L0={name:"",description:"",status:null};var U0={components:{"oxd-switch-input":q.OxdSwitchInput},props:{id:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/claim/events"),{createUniqueValidator:o}=qo(t),a=o("ClaimEvent","name",{entityId:e.id,matchByField:"isDeleted",matchByValue:"false"});return{http:t,claimEventNameUniqueValidation:a}},data(){return{isLoading:!1,claimEvent:{...L0},canEdit:!1,name:"",rules:{name:[Ht,this.claimEventNameUniqueValidation,Wt(100)],description:[Wt(1e3)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.id).then((e=>{const{data:t}=e.data;this.claimEvent={...t},this.name=t.name,this.canEdit=e.data.meta.canEdit})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/claim/viewEvents")},onSave(){this.isLoading=!0,this.http.update(this.id,{name:this.canEdit?this.claimEvent.name:null,description:this.claimEvent.description,status:this.claimEvent.status}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const A0=(0,r.c)(U0,[["render",B0],["__scopeId","data-v-cce331ca"]]);var P0=A0;const q0=(0,a.createElementVNode)("br",null,null,-1),F0={class:"orangehrm-paper-container"},M0={class:"orangehrm-header-container"},z0={class:"orangehrm-container"},j0={class:"orangehrm-bottom-container"};function R0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("expense-type-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid"),m=(0,a.resolveComponent)("oxd-form-row"),u=(0,a.resolveComponent)("oxd-divider"),p=(0,a.resolveComponent)("oxd-button"),h=(0,a.resolveComponent)("oxd-form-actions"),g=(0,a.resolveComponent)("oxd-form"),v=(0,a.resolveComponent)("oxd-table-filter"),f=(0,a.resolveComponent)("table-header"),y=(0,a.resolveComponent)("oxd-card-table"),C=(0,a.resolveComponent)("oxd-pagination"),V=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(v,{"filter-title":e.$t("claim.expense_types")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.name,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.name=e),label:e.$t("general.name")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.status,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.status=e),type:"select",label:e.$t("general.status"),options:n.ExpenseTypeStatuses},null,8,["modelValue","label","options"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u),(0,a.createVNode)(h,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(p,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),q0,(0,a.createElementVNode)("div",F0,[(0,a.createElementVNode)("div",M0,[(0,a.createVNode)(p,{label:e.$t("general.add"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(f,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",z0,[(0,a.createVNode)(y,{selected:n.checkedItems,"onUpdate:selected":t[2]||(t[2]=e=>n.checkedItems=e),order:l.sortDefinition,"onUpdate:order":t[3]||(t[3]=e=>l.sortDefinition=e),items:l.items.data,headers:n.headers,selectable:!0,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","order","items","headers","loading"])]),(0,a.createElementVNode)("div",j0,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(C,{key:0,current:l.currentPage,"onUpdate:current":t[4]||(t[4]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(V,{ref:"deleteDialog"},null,512)],64)}function O0(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",clear:!1,label:e.$t("general.name"),"create-options":r.loadTypes},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var G0={name:"ExpenseTypeAutocomplete",setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/expenses/types");return{http:e}},methods:{async loadTypes(e){return new Promise((t=>{if(e.trim()){const o={name:e.trim()};this.http.getAll(o).then((({data:e})=>{t(e.data.map((e=>({id:e.id,label:e.name}))))}))}else t([])}))}}};const Q0=(0,r.c)(G0,[["render",O0],["__scopeId","data-v-51b2e68f"]]);var H0=Q0;const W0={name:"",status:null},Y0={"expenseType.name":"ASC","expenseType.status":"DESC"};var J0={components:{"delete-confirmation":At,"expense-type-autocomplete":H0},setup(){const e=(0,a.ref)({...W0}),{$t:t}=Be(),{sortDefinition:o,sortField:l,sortOrder:n,onSort:r}=Pt({sortDefinition:Y0}),i=(0,a.computed)((()=>({expenseTypeId:"object"===typeof e.value.name?e.value.name.id:null,name:"string"===typeof e.value.name?e.value.name:null,status:e.value.status?1===e.value.status?.id:null,sortField:l.value,sortOrder:n.value}))),d=e=>e.map((e=>({id:e.id,name:e.name,description:e.description,status:e.status?t("general.active"):t("performance.inactive")}))),s=new P(window.appGlobal.baseUrl,"/api/v2/claim/expenses/types"),{showPaginator:c,currentPage:m,total:u,pages:p,pageSize:h,response:g,isLoading:v,execQuery:f}=Dt(s,{normalizer:d,query:i});return r(f),{http:s,showPaginator:c,currentPage:m,isLoading:v,total:u,pages:p,pageSize:h,execQuery:f,items:g,response:g,filters:e,sortDefinition:o}},data(){return{headers:[{name:"name",title:this.$t("general.name"),slot:"title",sortField:"expenseType.name",style:{flex:3}},{name:"status",title:this.$t("general.status"),sortField:"expenseType.status",style:{flex:2}},{name:"actions",title:this.$t("general.actions"),slot:"action",style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{delete:{onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},edit:{onClick:this.onClickEdit,props:{name:"pencil-fill"}}}}],checkedItems:[],ExpenseTypeStatuses:[{id:1,label:this.$t("general.active")},{id:0,label:this.$t("performance.inactive")}]}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...W0},this.filterItems()},onClickAdd(){U("/claim/saveExpense")},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onClickEdit(e){U("/claim/saveExpense/{id}",{id:e.id})}}};const X0=(0,r.c)(J0,[["render",R0]]);var K0=X0;const Z0={class:"orangehrm-background-container"},e1={class:"orangehrm-card-container"},t1={class:"orangehrm-sm-field"};function o1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-switch-input"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Z0,[(0,a.createElementVNode)("div",e1,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.add_expense_type")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.expenseTypes.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.expenseTypes.name=e),label:e.$t("general.name"),rules:n.rules.name,required:""},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.expenseTypes.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.expenseTypes.description=e),type:"textarea",label:e.$t("general.description"),rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1}),(0,a.createVNode)(c,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",t1,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-sm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(m,{modelValue:n.expenseTypes.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.expenseTypes.status=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const a1={name:"",description:"",status:!0};var l1={components:{"oxd-switch-input":q.OxdSwitchInput},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/expenses/types"),{createUniqueValidator:t}=qo(e),o=t("ExpenseType","name",{matchByField:"isDeleted",matchByValue:"false"});return{http:e,expenseTypeNameUniqueValidation:o}},data(){return{isLoading:!1,expenseTypes:{...a1},rules:{name:[Ht,this.expenseTypeNameUniqueValidation,Wt(100)],description:[Wt(1e3)]}}},methods:{onCancel(){U("/claim/viewExpense")},onSave(){this.isLoading=!0,this.http.create({...this.expenseTypes,name:this.expenseTypes.name.trim()}).then((()=>this.$toast.saveSuccess())).then((()=>{this.onCancel()}))}}};const n1=(0,r.c)(l1,[["render",o1],["__scopeId","data-v-eec81cf0"]]);var r1=n1;const i1={class:"orangehrm-background-container"},d1={class:"orangehrm-card-container"},s1={class:"orangehrm-sm-field"};function c1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-form-row"),m=(0,a.resolveComponent)("oxd-grid-item"),u=(0,a.resolveComponent)("oxd-switch-input"),p=(0,a.resolveComponent)("oxd-grid"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",i1,[(0,a.createElementVNode)("div",d1,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.edit_expense_type")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.expenseTypes.name,"onUpdate:modelValue":t[0]||(t[0]=e=>n.expenseTypes.name=e),label:e.$t("general.name"),disabled:!n.canEdit,rules:n.rules.name,required:""},null,8,["modelValue","label","disabled","rules"])])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.expenseTypes.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.expenseTypes.description=e),type:"textarea",label:e.$t("general.description"),rules:n.rules.description},null,8,["modelValue","label","rules"])])),_:1})])),_:1}),(0,a.createVNode)(m,{class:"--offset-row-3"},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",s1,[(0,a.createVNode)(i,{tag:"p",class:"orangehrm-sm-field-label"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.active")),1)])),_:1}),(0,a.createVNode)(u,{modelValue:n.expenseTypes.status,"onUpdate:modelValue":t[2]||(t[2]=e=>n.expenseTypes.status=e)},null,8,["modelValue"])])])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const m1={name:"",description:"",status:!1};var u1={components:{"oxd-switch-input":q.OxdSwitchInput},props:{id:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,"/api/v2/claim/expenses/types"),{createUniqueValidator:o}=qo(t),a=o("ExpenseType","name",{entityId:e.id,matchByField:"isDeleted",matchByValue:"false"});return{http:t,expenseTypeNameUniqueValidation:a}},data(){return{isLoading:!1,expenseTypes:{...m1},canEdit:!1,name:"",rules:{name:[Ht,this.expenseTypeNameUniqueValidation,Wt(100)],description:[Wt(1e3)]}}},beforeMount(){this.isLoading=!0,this.http.get(this.id).then((e=>{const{data:t}=e.data;this.expenseTypes={...t},this.name=t.name,this.canEdit=e.data.meta.canEdit})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/claim/viewExpense")},onSave(){this.isLoading=!0,this.http.update(this.id,{name:this.canEdit?this.expenseTypes.name:null,description:this.expenseTypes.description,status:this.expenseTypes.status}).then((()=>this.$toast.updateSuccess())).then((()=>{this.onCancel()}))}}};const p1=(0,r.c)(u1,[["render",c1],["__scopeId","data-v-4dc24a28"]]);var h1=p1;const g1={class:"orangehrm-background-container"},v1={class:"orangehrm-card-container"};function f1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("claim-event-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-input-field"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",g1,[(0,a.createElementVNode)("div",v1,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.create_claim_request")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.request.event,"onUpdate:modelValue":t[0]||(t[0]=e=>n.request.event=e),rules:n.rules.event,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.request.currency,"onUpdate:modelValue":t[1]||(t[1]=e=>n.request.currency=e),type:"select",rules:n.rules.currency,options:o.currencies,label:e.$t("general.currency"),required:""},null,8,["modelValue","rules","options","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:n.request.remarks,"onUpdate:modelValue":t[2]||(t[2]=e=>n.request.remarks=e),type:"textarea",label:e.$t("claim.remarks"),rules:n.rules.remarks},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v,{label:e.$t("claim.create")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}function y1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("claim.event"),options:l.options},null,8,["label","options"])}var C1={name:"ClaimEventDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/claim/events");return(0,a.onBeforeMount)((()=>{t.getAll({limit:0,status:!0}).then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.name})))}))})),{options:e}}};const V1=(0,r.c)(C1,[["render",y1]]);var b1=V1;const x1={event:null,currency:null,remarks:null};var w1={name:"SubmitClaimRequest",components:{"claim-event-dropdown":b1},props:{currencies:{type:Array,default:()=>[]}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/requests");return{http:e}},data(){return{isLoading:!1,request:{...x1},id:0,rules:{event:[Ht],currency:[Ht],remarks:[Wt(1e3)]}}},methods:{onCancel(){U("/claim/viewClaim")},onSave(){this.isLoading=!0,this.http.create({claimEventId:this.request.event.id,currencyId:this.request.currency.id,remarks:this.request.remarks}).then((e=>(this.id=e.data.data.id,this.$toast.saveSuccess()))).then((()=>{U("/claim/submitClaim/id/{id}",{id:this.id})}))}}};const N1=(0,r.c)(w1,[["render",f1]]);var _1=N1;const k1={class:"orangehrm-background-container"},S1={class:"orangehrm-paper-container"},$1={class:"orangehrm-card-container"},D1=(0,a.createElementVNode)("br",null,null,-1),E1=(0,a.createElementVNode)("br",null,null,-1);function T1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-form"),h=(0,a.resolveComponent)("claim-expenses"),g=(0,a.resolveComponent)("claim-attachment"),v=(0,a.resolveComponent)("claim-action-buttons");return(0,a.openBlock)(),(0,a.createElementBlock)("div",k1,[(0,a.createElementVNode)("div",S1,[(0,a.createElementVNode)("div",$1,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.submit_claim")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,{loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.request.referenceId,"onUpdate:modelValue":t[0]||(t[0]=e=>n.request.referenceId=e),label:e.$t("claim.reference_id"),disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:r.formattedEventName,"onUpdate:modelValue":t[1]||(t[1]=e=>r.formattedEventName=e),label:e.$t("claim.event"),disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.statusMap[n.request.status],"onUpdate:modelValue":t[2]||(t[2]=e=>n.statusMap[n.request.status]=e),label:e.$t("general.status"),disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.currency.name,"onUpdate:modelValue":t[3]||(t[3]=e=>n.currency.name=e),label:e.$t("general.currency"),disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.request.remarks,"onUpdate:modelValue":t[4]||(t[4]=e=>n.request.remarks=e),label:e.$t("claim.remarks"),type:"textarea",disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1})])),_:1},8,["loading"])]),(0,a.createVNode)(h,{"request-id":o.id,currency:n.currency,"can-edit":r.canEdit},null,8,["request-id","currency","can-edit"]),D1,(0,a.createVNode)(g,{"request-id":o.id,"can-edit":r.canEdit,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize},null,8,["request-id","can-edit","allowed-file-types","max-file-size"]),E1,(0,a.createVNode)(v,{"request-id":o.id,"allowed-actions":n.allowedActions},null,8,["request-id","allowed-actions"])])])}const I1={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},B1={class:"orangehrm-action-header"},L1={class:"orangehrm-container"};function U1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("add-attachment-modal"),p=(0,a.resolveComponent)("edit-attachment-modal"),h=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(i,{class:"orangehrm-horizontal-margin"}),(0,a.createElementVNode)("div",I1,[(0,a.createElementVNode)("div",B1,[(0,a.createVNode)(d,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.attachments")),1)])),_:1}),o.canEdit?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"text",onClick:r.onClickAdd},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(c,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",L1,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),class:"orangehrm-card-table",items:l.items.data,headers:r.tableHeaders,selectable:o.canEdit,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","items","headers","selectable","loading"])]),n.showAddAttachmentModal?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"request-id":o.requestId,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,onClose:r.onCloseAddAttachmentModal},null,8,["request-id","allowed-file-types","max-file-size","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditAttachmentModal?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,"request-id":o.requestId,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize,data:n.editModalState,onClose:r.onCloseEditAttachmentModal},null,8,["request-id","allowed-file-types","max-file-size","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(h,{ref:"deleteDialog"},null,512)],64)}const A1={class:"orangehrm-modal-header"};function P1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("required-text"),h=(0,a.resolveComponent)("oxd-button"),g=(0,a.resolveComponent)("submit-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(y,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",A1,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.add_attachment")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(f,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.select_file"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected"),required:""},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.attachment.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.description=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p),(0,a.createVNode)(h,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(g)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const q1={attachment:null,description:""};var F1={name:"SaveAttachment",components:{"oxd-dialog":q.OxdDialog},props:{requestId:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/attachments`);return{http:t}},data(){return{isLoading:!1,attachment:{...q1},rules:{description:[Wt(200)],attachment:[Ht,uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},methods:{onSave(){this.isLoading=!0,this.http.create({...this.attachment}).then((()=>this.$toast.saveSuccess())).then((()=>{this.attachment={...q1},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const M1=(0,r.c)(F1,[["render",P1]]);var z1=M1;const j1=e=>((0,a.pushScopeId)("data-v-00a26785"),e=e(),(0,a.popScopeId)(),e),R1={class:"orangehrm-modal-header"},O1=j1((()=>(0,a.createElementVNode)("br",null,null,-1)));function G1(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-group"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-input-field"),h=(0,a.resolveComponent)("required-text"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("submit-button"),f=(0,a.resolveComponent)("oxd-form-actions"),y=(0,a.resolveComponent)("oxd-form"),C=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(C,{class:"orangehrm-dialog-modal","onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",R1,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.edit_attachment")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(y,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{label:e.$t("general.current_file")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{tag:"p",class:"current-file"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(n.currentFile),1)])),_:1})])),_:1},8,["label"])])),_:1})])),_:1})])),_:1}),O1,(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.attachment,"onUpdate:modelValue":t[0]||(t[0]=e=>n.attachment.attachment=e),type:"file",label:e.$t("general.replace_with"),"button-label":e.$t("general.browse"),rules:n.rules.attachment,placeholder:e.$t("general.no_file_selected")},null,8,["modelValue","label","button-label","rules","placeholder"]),(0,a.createVNode)(i,{class:"orangehrm-input-hint",tag:"p"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.accepts_up_to_n_mb",{count:r.formattedFileSize})),1)])),_:1})])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.attachment.description,"onUpdate:modelValue":t[1]||(t[1]=e=>n.attachment.description=e),type:"textarea",label:e.$t("general.comment"),placeholder:e.$t("general.type_comment_here"),rules:n.rules.description},null,8,["modelValue","label","placeholder","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(f,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h),(0,a.createVNode)(g,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(v)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const Q1={attachment:null,description:""};var H1={name:"SaveAttachment",components:{"oxd-dialog":q.OxdDialog},props:{data:{type:Object,required:!0},requestId:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/attachments`);return{http:t}},data(){return{isLoading:!1,currentFile:"",attachment:{...Q1},rules:{description:[Wt(200)],attachment:[uo(this.maxFileSize),po(this.allowedFileTypes)]}}},computed:{formattedFileSize(){return Math.round(this.maxFileSize/1048576*100)/100}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.currentFile=LT(t.attachment.fileName),this.attachment.description=t.attachment.description})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{...this.attachment}).then((()=>this.$toast.updateSuccess())).then((()=>{this.attachment={...Q1},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const W1=(0,r.c)(H1,[["render",G1],["__scopeId","data-v-00a26785"]]);var Y1=W1,J1={name:"ClaimAttachment",components:{"delete-confirmation":At,"add-attachment-modal":z1,"edit-attachment-modal":Y1},props:{requestId:{type:Number,required:!0},canEdit:{type:Boolean,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(e){const{locale:t}=Le(),{jsDateFormat:o}=R(),a=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/attachments`),{$tEmpName:l}=Da(),n=e=>e.map((e=>({id:e.id,attachedDate:e.date?pe(ue(e.date),o,{locale:t}):"",filename:e.attachment.fileName??"",size:e.attachment.size?Ih(e.attachment.size,2):"",fileType:e.attachment.fileType?e.attachment.fileType:"",description:e.attachment.description?e.attachment.description:"",attachedByName:l(e.attachedBy,{excludePastEmpTag:!1})}))),{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(a,{normalizer:n,toastNoRecords:!1});return{http:a,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m}},data(){return{headers:[{name:"filename",slot:"title",cellType:"oxd-table-cell-truncate",title:this.$t("general.file_name"),style:{flex:1}},{name:"description",title:this.$t("general.description"),cellType:"oxd-table-cell-truncate",style:{flex:1}},{name:"size",title:this.$t("general.size"),style:{flex:1}},{name:"fileType",title:this.$t("general.type"),style:{flex:1}},{name:"attachedDate",title:this.$t("pim.date_added"),style:{flex:1}},{name:"attachedByName",title:this.$t("pim.added_by"),style:{flex:1}}],checkedItems:[],editModalState:null,showAddAttachmentModal:!1,showEditAttachmentModal:!1}},computed:{tableHeaders(){let e=this.headers;e.length>6&&e.pop();const t={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.canEdit&&(t.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}},t.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}}),t.cellConfig.download={onClick:this.onClickDownload,props:{name:"download"}},e.push(t),e}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showAddAttachmentModal=!0,this.showEditAttachmentModal=!1},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onClickEdit(e){this.showAddAttachmentModal=!1,this.editModalState=e,this.showEditAttachmentModal=!0},onCloseAddAttachmentModal(){this.showAddAttachmentModal=!1,this.reloadAttachments()},onCloseEditAttachmentModal(){this.showEditAttachmentModal=!1,this.reloadAttachments()},async reloadAttachments(){await this.execQuery()},onClickDownload(e){const t=`${window.appGlobal.baseUrl}/claim/requests/${this.requestId}/attachId/${e.id}`;window.open(t,"_blank")}}};const X1=(0,r.c)(J1,[["render",U1],["__scopeId","data-v-216eab2c"]]);var K1=X1;const Z1={class:"orangehrm-horizontal-padding orangehrm-vertical-padding"},e8={class:"orangehrm-action-header"},t8={class:"orangehrm-container"},o8={class:"orangehrm-bottom-container"};function a8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-divider"),d=(0,a.resolveComponent)("oxd-text"),s=(0,a.resolveComponent)("oxd-button"),c=(0,a.resolveComponent)("table-header"),m=(0,a.resolveComponent)("oxd-card-table"),u=(0,a.resolveComponent)("add-expense-modal"),p=(0,a.resolveComponent)("edit-expense-modal"),h=(0,a.resolveComponent)("delete-confirmation");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(i,{class:"orangehrm-horizontal-margin"}),(0,a.createElementVNode)("div",Z1,[(0,a.createElementVNode)("div",e8,[(0,a.createVNode)(d,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.expenses")),1)])),_:1}),o.canEdit?((0,a.openBlock)(),(0,a.createBlock)(s,{key:0,label:e.$t("general.add"),"icon-name":"plus","display-type":"text",onClick:r.onClickAdd},null,8,["label","onClick"])):(0,a.createCommentVNode)("",!0)])]),(0,a.createVNode)(c,{total:l.total,loading:l.isLoading,selected:n.checkedItems.length,onDelete:r.onClickDeleteSelected},null,8,["total","loading","selected","onDelete"]),(0,a.createElementVNode)("div",t8,[(0,a.createVNode)(m,{selected:n.checkedItems,"onUpdate:selected":t[0]||(t[0]=e=>n.checkedItems=e),items:l.items.data,headers:r.tableHeaders,selectable:o.canEdit,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["selected","items","headers","selectable","loading"])]),(0,a.createElementVNode)("div",o8,[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.total_amount",{currencyName:o.currency.name,totalAmount:r.formatedAmount})),1)])),_:1})]),n.showAddExpenseModal?((0,a.openBlock)(),(0,a.createBlock)(u,{key:0,"request-id":o.requestId,onClose:r.onCloseAddExpenseModal},null,8,["request-id","onClose"])):(0,a.createCommentVNode)("",!0),n.showEditExpenseModal?((0,a.openBlock)(),(0,a.createBlock)(p,{key:1,"request-id":o.requestId,data:n.editModalState,onClose:r.onCloseEditExpenseModal},null,8,["request-id","data","onClose"])):(0,a.createCommentVNode)("",!0),(0,a.createVNode)(h,{ref:"deleteDialog"},null,512)],64)}const l8={class:"orangehrm-modal-header"};function n8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("claim-expense-type-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("oxd-input-field"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(V,{"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",l8,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.add_expense")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.expense.type,"onUpdate:modelValue":t[0]||(t[0]=e=>n.expense.type=e),label:e.$t("claim.expense_type"),rules:n.rules.type},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.expense.date,"onUpdate:modelValue":t[1]||(t[1]=e=>n.expense.date=e),label:e.$t("general.date"),rules:n.rules.date,years:n.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.expense.amount,"onUpdate:modelValue":t[2]||(t[2]=e=>n.expense.amount=e),label:e.$t("general.amount"),rules:n.rules.amount,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.expense.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.expense.note=e),type:"textarea",label:e.$t("general.note"),rules:n.rules.note},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}function r8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("claim.event"),options:l.options,required:""},null,8,["label","options"])}var i8={name:"ClaimEventDropdown",setup(){const e=(0,a.ref)([]),t=new P(window.appGlobal.baseUrl,"/api/v2/claim/expenses/types");return(0,a.onBeforeMount)((()=>{t.getAll({limit:0,status:!0}).then((({data:t})=>{e.value=t.data.map((e=>({id:e.id,label:e.name})))}))})),{options:e}}};const d8=(0,r.c)(i8,[["render",r8]]);var s8=d8;const c8={type:null,date:null,amount:null,note:null};var m8={name:"SaveExpense",components:{"oxd-dialog":q.OxdDialog,"claim-expense-type-dropdown":s8},props:{requestId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/expenses`),{userDateFormat:o}=R();return{http:t,userDateFormat:o}},data(){return{isLoading:!1,yearsArray:[...Uy()],expense:{...c8},rules:{type:[Ht],date:[Ht,Yt(this.userDateFormat)],note:[Wt(1e3)],amount:[Ht,fo(1e10),Eo]}}},methods:{onSave(){this.isLoading=!0,this.http.create({expenseTypeId:this.expense.type.id,date:this.expense.date,amount:Number(this.expense.amount).toFixed(2),note:this.expense.note}).then((()=>this.$toast.saveSuccess())).then((()=>{this.expense={...c8},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const u8=(0,r.c)(m8,[["render",n8]]);var p8=u8;const h8={class:"orangehrm-modal-header"};function g8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("claim-expense-type-dropdown"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("oxd-input-field"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("oxd-dialog");return(0,a.openBlock)(),(0,a.createBlock)(V,{"onUpdate:show":r.onCancel},{default:(0,a.withCtx)((()=>[(0,a.createElementVNode)("div",h8,[(0,a.createVNode)(i,{type:"card-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.edit_expense")),1)])),_:1})]),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.selectedOption,"onUpdate:modelValue":t[0]||(t[0]=e=>n.selectedOption=e),label:e.$t("claim.expense_type"),rules:n.rules.type},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:2,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.expense.date,"onUpdate:modelValue":t[1]||(t[1]=e=>n.expense.date=e),label:e.$t("general.date"),rules:n.rules.date,years:e.yearsArray,required:""},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.expense.amount,"onUpdate:modelValue":t[2]||(t[2]=e=>n.expense.amount=e),label:e.$t("general.amount"),rules:n.rules.amount,required:""},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:1,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.expense.note,"onUpdate:modelValue":t[3]||(t[3]=e=>n.expense.note=e),type:"textarea",label:e.$t("general.note"),rules:n.rules.note},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{type:"button","display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f)])),_:1})])),_:1},8,["loading","onSubmitValid"])])),_:1},8,["onUpdate:show"])}const v8={expenseType:null,date:null,amount:null,note:null};var f8={name:"EditExpense",components:{"oxd-dialog":q.OxdDialog,"claim-expense-type-dropdown":s8},props:{data:{type:Object,required:!0},requestId:{type:Number,required:!0}},emits:["close"],setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/expenses`),{userDateFormat:o}=R();return{http:t,userDateFormat:o}},data(){return{isLoading:!1,selectedOption:{},expense:{...v8},rules:{type:[Ht],date:[Ht,Yt(this.userDateFormat)],note:[Wt(1e3)],amount:[Ht,to,fo(1e10),Eo]}}},beforeMount(){this.isLoading=!0,this.http.get(this.data.id).then((e=>{const{data:t}=e.data;this.expense=t,this.expense.amount=parseFloat(t.amount).toFixed(2),this.selectedOption={id:t.expenseType.id,label:t.expenseType.isDeleted?`${t.expenseType.name} (${this.$t("general.deleted")})`:t.expenseType.status?t.expenseType.name:`${t.expenseType.name} (${this.$t("performance.inactive")})`}})).finally((()=>{this.isLoading=!1}))},methods:{onSave(){this.isLoading=!0,this.http.update(this.data.id,{expenseTypeId:this.selectedOption.id,date:this.expense.date,amount:Number(this.expense.amount).toFixed(2),note:this.expense.note}).then((()=>this.$toast.updateSuccess())).then((()=>{this.expense={...v8},this.onCancel()}))},onCancel(){this.$emit("close",!0)}}};const y8=(0,r.c)(f8,[["render",g8]]);var C8=y8,V8={name:"ClaimExpenses",components:{"delete-confirmation":At,"add-expense-modal":p8,"edit-expense-modal":C8},props:{requestId:{type:Number,required:!0},currency:{type:Object,required:!0},canEdit:{type:Boolean,required:!0}},setup(e){const{locale:t}=Le(),{jsDateFormat:o}=R(),l=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/expenses`),n=e=>e.map((e=>({id:e.id,date:e.date?pe(ue(e.date),o,{locale:t}):"",amount:e.amount?e.amount.toFixed(2):"0.00",note:e.note?e.note:"",expenseType:e.expenseType?e.expenseType.name:""}))),{showPaginator:r,currentPage:i,total:d,pages:s,pageSize:c,response:m,isLoading:u,execQuery:p}=Dt(l,{normalizer:n,toastNoRecords:!1}),h=(0,a.computed)((()=>{const e=m.value?.meta;return e?e.totalAmount.toFixed(2):(0).toFixed(2)}));return{http:l,showPaginator:r,currentPage:i,isLoading:u,total:d,pages:s,pageSize:c,execQuery:p,items:m,totalAmount:h}},data(){return{headers:[{name:"expenseType",slot:"title",title:this.$t("claim.expense_type"),style:{flex:2}},{name:"date",title:this.$t("general.date"),style:{flex:1}},{name:"note",title:this.$t("general.note"),cellType:"oxd-table-cell-truncate",style:{flex:2}},{name:"amount",style:{flex:1},title:this.$t("general.amount")}],checkedItems:[],showAddExpenseModal:!1,showEditExpenseModal:!1,editModalState:null}},computed:{tableHeaders(){let e=this.headers;const t={name:"actions",slot:"action",title:this.$t("general.actions"),style:{flex:1},cellType:"oxd-table-cell-actions",cellConfig:{}};return this.canEdit&&(t.cellConfig.edit={onClick:this.onClickEdit,props:{name:"pencil-fill"}},t.cellConfig.delete={onClick:this.onClickDelete,component:"oxd-icon-button",props:{name:"trash"}}),e[3]={name:"amount",title:`${this.$t("general.amount")} (${this.currency.name})`,style:{flex:1}},Object.keys(t.cellConfig).length>0&&e.push(t),e},formatedAmount(){const e=Number(this.totalAmount);return e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},onClickAdd(){this.showAddExpenseModal=!0},onClickDeleteSelected(){const e=[];this.checkedItems.forEach((t=>{e.push(this.items?.data[t].id)})),this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems(e)}))},deleteItems(e){e instanceof Array&&(this.isLoading=!0,this.http.deleteAll({ids:e}).then((()=>this.$toast.deleteSuccess())).then((()=>{this.isLoading=!1,this.resetDataTable()})))},onClickDelete(e){this.$refs.deleteDialog.showDialog().then((t=>{"ok"===t&&this.deleteItems([e.id])}))},onCloseAddExpenseModal(){this.showAddExpenseModal=!1,this.resetDataTable()},onCloseEditExpenseModal(){this.showEditExpenseModal=!1,this.resetDataTable()},onClickEdit(e){this.showEditExpenseModal=!0,this.editModalState=e,this.showAddExpenseModal=!1}}};const b8=(0,r.c)(V8,[["render",a8],["__scopeId","data-v-6a9dd8d1"]]);var x8=b8;function w8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-button");return(0,a.openBlock)(),(0,a.createElementBlock)("div",{class:(0,a.normalizeClass)({"orangehrm-action-button-container":o.allowedActions.length<2,"orangehrm-action-buttons-container":o.allowedActions.length>1})},[(0,a.createVNode)(i,{"display-type":"ghost",class:"orangehrm-sm-button",label:e.$t("general.back"),onClick:r.onBack},null,8,["label","onClick"]),r.isCancelAllowed?((0,a.openBlock)(),(0,a.createBlock)(i,{key:0,"display-type":"danger",class:"orangehrm-sm-button",label:e.$t("general.cancel"),onClick:t[0]||(t[0]=e=>r.onClaimAction("CANCEL"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.isRejectAllowed?((0,a.openBlock)(),(0,a.createBlock)(i,{key:1,"display-type":"danger",class:"orangehrm-sm-button",label:e.$t("general.reject"),onClick:t[1]||(t[1]=e=>r.onClaimAction("REJECT"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.isApproveAllowed?((0,a.openBlock)(),(0,a.createBlock)(i,{key:2,"display-type":"secondary",class:"orangehrm-sm-button",label:e.$t("general.approve"),onClick:t[2]||(t[2]=e=>r.onClaimAction("APPROVE"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.isPayAllowed?((0,a.openBlock)(),(0,a.createBlock)(i,{key:3,"display-type":"secondary",class:"orangehrm-sm-button",label:e.$t("claim.pay"),onClick:t[3]||(t[3]=e=>r.onClaimAction("PAY"))},null,8,["label"])):(0,a.createCommentVNode)("",!0),r.isSubmitAllowed?((0,a.openBlock)(),(0,a.createBlock)(i,{key:4,"display-type":"secondary",class:"orangehrm-sm-button",label:e.$t("general.submit"),onClick:t[4]||(t[4]=e=>r.onClaimAction("SUBMIT"))},null,8,["label"])):(0,a.createCommentVNode)("",!0)],2)}var N8={name:"ClaimActionButtons",props:{requestId:{type:Number,required:!0},allowedActions:{type:Array,required:!0},isAssigned:{default:!1,type:Boolean,required:!1}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/requests/${e.requestId}/action`);return{http:t}},computed:{isCancelAllowed(){return this.allowedActions.includes("Cancel")},isSubmitAllowed(){return this.allowedActions.includes("Submit")},isApproveAllowed(){return this.allowedActions.includes("Approve")},isRejectAllowed(){return this.allowedActions.includes("Reject")},isPayAllowed(){return this.allowedActions.includes("Pay")}},methods:{onClaimAction(e){this.http.request({method:"PUT",data:{action:e}}).then((()=>this.$toast.saveSuccess())).then((()=>{this.isAssigned?U(`/claim/assignClaim/id/${this.requestId}`):U(`/claim/submitClaim/id/${this.requestId}`)}))},onBack(){this.isAssigned?U("/claim/viewAssignClaim"):U("/claim/viewClaim")}}};const _8=(0,r.c)(N8,[["render",w8],["__scopeId","data-v-48e487b6"]]);var k8=_8,S8={name:"SubmitClaim",components:{"claim-attachment":K1,"claim-expenses":x8,"claim-action-buttons":k8},props:{id:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0}},setup(){const e=new P(window.appGlobal.baseUrl,"/api/v2/claim/requests");return{http:e}},data(){const e={SUBMITTED:this.$t("time.submitted"),APPROVED:this.$t("time.approved"),REJECTED:this.$t("leave.rejected"),CANCELLED:this.$t("leave.cancelled"),PAID:this.$t("claim.paid"),INITIATED:this.$t("claim.initiated")};return{isLoading:!1,request:{},claimEvent:{},currency:{},response:{},allowedActions:[],statusMap:e}},computed:{canEdit(){return!!this.allowedActions&&this.allowedActions.includes("Submit")},formattedEventName(){return this.claimEvent.isDeleted?`${this.claimEvent.name} (${this.$t("general.deleted")})`:this.claimEvent.status?this.claimEvent.name:`${this.claimEvent.name} (${this.$t("performance.inactive")})`}},beforeMount(){this.isLoading=!0,this.http.get(this.id).then((e=>{const{data:t,meta:o}=e.data;this.response=e.data,this.request=t,this.claimEvent=t.claimEvent,this.currency=t.currencyType,this.allowedActions=o.allowedActions.map((e=>e.name))})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/claim/submitClaim")}}};const $8=(0,r.c)(S8,[["render",T1]]);var D8=$8;const E8=(0,a.createElementVNode)("br",null,null,-1),T8={class:"orangehrm-paper-container"},I8={class:"orangehrm-header-container"},B8={class:"orangehrm-container"},L8={class:"orangehrm-bottom-container"};function U8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("reference-id-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("claim-event-dropdown"),c=(0,a.resolveComponent)("status-dropdown"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("date-input"),h=(0,a.resolveComponent)("oxd-divider"),g=(0,a.resolveComponent)("oxd-button"),v=(0,a.resolveComponent)("oxd-form-actions"),f=(0,a.resolveComponent)("oxd-form"),y=(0,a.resolveComponent)("oxd-table-filter"),C=(0,a.resolveComponent)("table-header"),V=(0,a.resolveComponent)("oxd-card-table"),b=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(y,{"filter-title":e.$t("claim.my_claims")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.referenceId,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.referenceId=e),label:e.$t("claim.reference_id")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.claimEvent,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.claimEvent=e),label:e.$t("claim.event_name")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.status,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.status=e),label:e.$t("general.status")},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.fromDate=e),label:e.$t("general.from_date"),rules:n.rules.date,years:e.yearsArray},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.toDate=e),label:e.$t("general.to_date"),rules:n.rules.toDate,years:e.yearsArray},null,8,["modelValue","label","rules","years"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(h),(0,a.createVNode)(v,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(g,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),E8,(0,a.createElementVNode)("div",T8,[(0,a.createElementVNode)("div",I8,[(0,a.createVNode)(g,{label:e.$t("claim.submit_claim"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(C,{total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",B8,[(0,a.createVNode)(V,{order:l.sortDefinition,"onUpdate:order":t[5]||(t[5]=e=>l.sortDefinition=e),items:l.items.data,headers:n.headers,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["order","items","headers","loading"])]),(0,a.createElementVNode)("div",L8,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(b,{key:0,current:l.currentPage,"onUpdate:current":t[6]||(t[6]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])],64)}function A8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",clear:!1,label:e.$t("claim.reference_id"),"create-options":r.loadTypes},{option:(0,a.withCtx)((({data:e})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(e.label),1)])),_:1},8,["label","create-options"])}var P8={name:"ReferenceIdAutocomplete",props:{isAssigned:{default:!1,type:Boolean,required:!1}},setup(e){const t=new P(window.appGlobal.baseUrl,e.isAssigned?"/api/v2/claim/employees/requests?model=summary":"/api/v2/claim/requests?model=summary");return{http:t}},methods:{async loadTypes(e){return new Promise((t=>{if(e.trim()){const o={referenceId:e.trim()};this.http.getAll(o).then((({data:e})=>{t(e.data.map((e=>({id:e.referenceId,label:e.referenceId}))))}))}else t([])}))}}};const q8=(0,r.c)(P8,[["render",A8],["__scopeId","data-v-10a570b5"]]);var F8=q8;function M8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"select",label:e.$t("general.status"),options:n.options},null,8,["label","options"])}var z8={name:"StatusDropdown",data(){const e=(0,a.ref)([{id:"INITIATED",label:this.$t("claim.initiated")},{id:"SUBMITTED",label:this.$t("time.submitted")},{id:"APPROVED",label:this.$t("time.approved")},{id:"REJECTED",label:this.$t("leave.rejected")},{id:"CANCELLED",label:this.$t("leave.cancelled")},{id:"PAID",label:this.$t("claim.paid")}]);return{options:e}}};const j8=(0,r.c)(z8,[["render",M8]]);var R8=j8;const O8={referenceId:"",claimEvent:null,status:null,fromDate:null,toDate:null},G8={"claimRequest.referenceId":"DESC","claimRequest.claimEvent.name":"ASC","claimRequest.status":"ASC","claimRequest.submittedDate":"ASC"};var Q8={components:{"reference-id-autocomplete":F8,"claim-event-dropdown":b1,"status-dropdown":R8},setup(){const e=(0,a.ref)({...O8}),{sortDefinition:t,sortField:o,sortOrder:l,onSort:n}=Pt({sortDefinition:G8}),{locale:r}=Le(),{jsDateFormat:i}=R(),d=(0,a.computed)((()=>({referenceId:"object"===typeof e.value.referenceId&&e.value.referenceId?e.value.referenceId.id:"string"===typeof e.value.referenceId?e.value.referenceId:null,eventId:e.value.claimEvent?e.value.claimEvent?.id:null,status:e.value.status?e.value.status?.id:null,fromDate:e.value.fromDate,toDate:e.value.toDate,sortField:"claimRequest.claimEvent.name"===o.value?"claimEvent.name":o.value,sortOrder:l.value}))),s=e=>e.map((e=>({id:e.id,referenceId:e.referenceId,eventName:e.claimEvent.name,description:e.description,currency:e.currencyType.name,status:e.status.charAt(0).toUpperCase()+e.status.slice(1).toLowerCase(),submittedDate:pe(ue(e.submittedDate),i,{locale:r}),amount:Number(e.amount).toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})}))),c=new P(window.appGlobal.baseUrl,"/api/v2/claim/requests"),{showPaginator:m,currentPage:u,total:p,pages:h,pageSize:g,response:v,isLoading:f,execQuery:y}=Dt(c,{normalizer:s,query:d});return n(y),{http:c,showPaginator:m,currentPage:u,isLoading:f,total:p,pages:h,pageSize:g,execQuery:y,items:v,response:v,filters:e,sortDefinition:t,useDateFormat:R}},data(){return{headers:[{name:"referenceId",title:this.$t("claim.reference_id"),slot:"title",sortField:"claimRequest.referenceId",style:{flex:3}},{name:"eventName",title:this.$t("claim.event_name"),slot:"title",cellType:"oxd-table-cell-truncate",sortField:"claimRequest.claimEvent.name",style:{flex:3}},{name:"description",title:this.$t("general.description"),slot:"title",cellType:"oxd-table-cell-truncate",sortField:"claimRequest.description",style:{flex:4}},{name:"currency",title:this.$t("general.currency"),slot:"title",style:{flex:3}},{name:"submittedDate",title:this.$t("claim.submitted_date"),slot:"title",sortField:"claimRequest.submittedDate",style:{flex:3}},{name:"status",title:this.$t("general.status"),sortField:"claimRequest.status",style:{flex:2}},{name:"amount",title:this.$t("general.amount"),slot:"title",sortField:"claimRequest.amount",style:{flex:3}},{name:"actions",slot:"right",title:this.$t("general.actions"),style:{flex:3},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{label:this.$t("claim.view_details"),displayType:"text",size:"medium"}}}}],rules:{date:[Yt(this.userDateFormat)],toDate:[Yt(this.userDateFormat),ro((()=>this.filters.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})]}}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...O8},this.filterItems()},onClickAdd(){U("/claim/submitClaim")},onClickView(e){U("/claim/submitClaim/id/{id}",{id:e.id})}}};const H8=(0,r.c)(Q8,[["render",U8]]);var W8=H8;const Y8={class:"orangehrm-background-container"},J8={class:"orangehrm-card-container"};function X8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("claim-employee-autocomplete"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("claim-event-dropdown"),h=(0,a.resolveComponent)("oxd-input-field"),g=(0,a.resolveComponent)("required-text"),v=(0,a.resolveComponent)("oxd-button"),f=(0,a.resolveComponent)("submit-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form");return(0,a.openBlock)(),(0,a.createElementBlock)("div",Y8,[(0,a.createElementVNode)("div",J8,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.create_claim_request")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(C,{loading:n.isLoading,onSubmitValid:r.onSave},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.employee=e),rules:n.rules.employee,params:{includeEmployees:"onlyCurrent"},required:"","auth-employee-number":o.authEmployeeNumber},null,8,["modelValue","rules","auth-employee-number"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,{modelValue:n.request.event,"onUpdate:modelValue":t[1]||(t[1]=e=>n.request.event=e),rules:n.rules.event,required:""},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.request.currency,"onUpdate:modelValue":t[2]||(t[2]=e=>n.request.currency=e),type:"select",rules:n.rules.currency,options:o.currencies,label:e.$t("general.currency"),required:""},null,8,["modelValue","rules","options","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{class:"--span-column-2"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:n.request.remarks,"onUpdate:modelValue":t[3]||(t[3]=e=>n.request.remarks=e),type:"textarea",label:e.$t("claim.remarks"),rules:n.rules.remarks},null,8,["modelValue","label","rules"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g),(0,a.createVNode)(v,{"display-type":"ghost",label:e.$t("general.cancel"),onClick:r.onCancel},null,8,["label","onClick"]),(0,a.createVNode)(f,{label:e.$t("claim.create")},null,8,["label"])])),_:1})])),_:1},8,["loading","onSubmitValid"])])])}const K8={key:0,class:"past-employee-tag"};function Z8(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-input-field");return(0,a.openBlock)(),(0,a.createBlock)(i,{type:"autocomplete",label:e.$t("general.employee_name"),clear:!1,"create-options":r.loadEmployees},{afterSelected:(0,a.withCtx)((({data:t})=>[t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,{key:0},[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("general.past_employee")),1)],64)):(0,a.createCommentVNode)("",!0)])),option:(0,a.withCtx)((({data:t})=>[(0,a.createElementVNode)("span",null,(0,a.toDisplayString)(t.label),1),t.isPastEmployee?((0,a.openBlock)(),(0,a.createElementBlock)("div",K8,(0,a.toDisplayString)(e.$t("general.past_employee")),1)):(0,a.createCommentVNode)("",!0)])),_:1},8,["label","create-options"])}var e2={name:"ClaimEmployeeAutocomplete",props:{params:{type:Object,default:()=>({})},apiPath:{type:String,default:"/api/v2/pim/employees"},authEmployeeNumber:{type:Number,default:null}},setup(e){const t=new P(window.appGlobal.baseUrl,e.apiPath);return{http:t}},methods:{async loadEmployees(e){return new Promise((t=>{e.trim()?this.http.getAll({nameOrId:e.trim(),...this.params}).then((({data:e})=>{t(e.data.filter((e=>e.empNumber!==this.authEmployeeNumber)).map((e=>({id:e.empNumber,label:`${e.firstName} ${e.middleName} ${e.lastName}`,_employee:e,isPastEmployee:!!e.terminationId}))))})):t([])}))}}};const t2=(0,r.c)(e2,[["render",Z8],["__scopeId","data-v-a121b97a"]]);var o2=t2;const a2={event:null,currency:null,remarks:null};var l2={name:"AssignClaimRequest",components:{"claim-event-dropdown":b1,"claim-employee-autocomplete":o2},props:{currencies:{type:Array,default:()=>[]},authEmployeeNumber:{type:Number,required:!0}},setup(){const e=(0,a.ref)(null);return{employee:e}},data(){return{isLoading:!1,request:{...a2},id:0,rules:{employee:[Ht,So],event:[Ht],currency:[Ht],remarks:[Wt(1e3)]}}},methods:{onCancel(){U("/claim/viewAssignClaim")},onSave(){this.isLoading=!0;const e=new P(window.appGlobal.baseUrl,`/api/v2/claim/employees/${this.employee.id}/requests`);e.create({claimEventId:this.request.event.id,currencyId:this.request.currency.id,remarks:this.request.remarks}).then((e=>(this.id=e.data.data.id,this.$toast.saveSuccess()))).then((()=>{U("/claim/assignClaim/id/{id}",{id:this.id})}))}}};const n2=(0,r.c)(l2,[["render",X8]]);var r2=n2;const i2={class:"orangehrm-background-container"},d2={class:"orangehrm-paper-container"},s2={class:"orangehrm-card-container"},c2=(0,a.createElementVNode)("br",null,null,-1),m2=(0,a.createElementVNode)("br",null,null,-1);function u2(e,t,o,l,n,r){const i=(0,a.resolveComponent)("oxd-text"),d=(0,a.resolveComponent)("oxd-divider"),s=(0,a.resolveComponent)("oxd-input-field"),c=(0,a.resolveComponent)("oxd-grid-item"),m=(0,a.resolveComponent)("oxd-grid"),u=(0,a.resolveComponent)("oxd-form-row"),p=(0,a.resolveComponent)("oxd-form"),h=(0,a.resolveComponent)("claim-expenses"),g=(0,a.resolveComponent)("claim-attachment"),v=(0,a.resolveComponent)("claim-action-buttons");return(0,a.openBlock)(),(0,a.createElementBlock)("div",i2,[(0,a.createElementVNode)("div",d2,[(0,a.createElementVNode)("div",s2,[(0,a.createVNode)(i,{tag:"h6",class:"orangehrm-main-title"},{default:(0,a.withCtx)((()=>[(0,a.createTextVNode)((0,a.toDisplayString)(e.$t("claim.assign_claim")),1)])),_:1}),(0,a.createVNode)(d),(0,a.createVNode)(p,{loading:n.isLoading},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.employeeName,"onUpdate:modelValue":t[0]||(t[0]=e=>n.employeeName=e),label:e.$t("general.employee"),disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.request.referenceId,"onUpdate:modelValue":t[1]||(t[1]=e=>n.request.referenceId=e),label:e.$t("claim.reference_id"),disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:r.formattedEventName,"onUpdate:modelValue":t[2]||(t[2]=e=>r.formattedEventName=e),label:e.$t("claim.event"),disabled:""},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.statusMap[n.request.status],"onUpdate:modelValue":t[3]||(t[3]=e=>n.statusMap[n.request.status]=e),label:e.$t("general.status"),disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.currency.name,"onUpdate:modelValue":t[4]||(t[4]=e=>n.currency.name=e),label:e.$t("general.currency"),disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(u,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{cols:3,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:n.request.remarks,"onUpdate:modelValue":t[5]||(t[5]=e=>n.request.remarks=e),label:e.$t("claim.remarks"),type:"textarea",disabled:""},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1})])),_:1},8,["loading"])]),(0,a.createVNode)(h,{"request-id":o.id,currency:n.currency,"can-edit":r.canEdit},null,8,["request-id","currency","can-edit"]),c2,(0,a.createVNode)(g,{"request-id":o.id,"can-edit":r.canEdit,"allowed-file-types":o.allowedFileTypes,"max-file-size":o.maxFileSize},null,8,["request-id","can-edit","allowed-file-types","max-file-size"]),m2,(0,a.createVNode)(v,{"request-id":o.id,"allowed-actions":n.allowedActions,"is-assigned":!0},null,8,["request-id","allowed-actions"])])])}var p2={name:"AssignClaim",components:{"claim-attachment":K1,"claim-expenses":x8,"claim-action-buttons":k8},props:{id:{type:Number,required:!0},allowedFileTypes:{type:Array,required:!0},maxFileSize:{type:Number,required:!0},empNumber:{type:Number,required:!0}},setup(e){const t=new P(window.appGlobal.baseUrl,`/api/v2/claim/employees/${e.empNumber}/requests`);return{http:t}},data(){const e={SUBMITTED:this.$t("time.submitted"),APPROVED:this.$t("time.approved"),REJECTED:this.$t("leave.rejected"),CANCELLED:this.$t("leave.cancelled"),PAID:this.$t("claim.paid"),INITIATED:this.$t("claim.initiated")};return{isLoading:!1,request:{},claimEvent:{},currency:{},response:{},allowedActions:[],employee:{},statusMap:e,employeeName:""}},computed:{canEdit(){return!!this.allowedActions&&this.allowedActions.includes("Submit")},formattedEventName(){return this.claimEvent.isDeleted?`${this.claimEvent.name} ${this.$t("general.deleted")}`:this.claimEvent.status?this.claimEvent.name:`${this.claimEvent.name} (${this.$t("performance.inactive")})`}},beforeMount(){const{$tEmpName:e}=Da();this.isLoading=!0,this.http.get(this.id).then((t=>{const{data:o,meta:a}=t.data;this.response=t.data,this.request=o,this.claimEvent=o.claimEvent,this.currency=o.currencyType,this.allowedActions=a.allowedActions.map((e=>e.name)),this.employee=a.employee,this.employeeName=e(this.employee)})).finally((()=>{this.isLoading=!1}))},methods:{onCancel(){U("/claim/submitClaim")}}};const h2=(0,r.c)(p2,[["render",u2]]);var g2=h2;const v2=(0,a.createElementVNode)("br",null,null,-1),f2={class:"orangehrm-paper-container"},y2={class:"orangehrm-header-container"},C2={class:"orangehrm-container"},V2={class:"orangehrm-bottom-container"};function b2(e,t,o,l,n,r){const i=(0,a.resolveComponent)("employee-autocomplete"),d=(0,a.resolveComponent)("oxd-grid-item"),s=(0,a.resolveComponent)("reference-id-autocomplete"),c=(0,a.resolveComponent)("claim-event-dropdown"),m=(0,a.resolveComponent)("status-dropdown"),u=(0,a.resolveComponent)("oxd-grid"),p=(0,a.resolveComponent)("oxd-form-row"),h=(0,a.resolveComponent)("date-input"),g=(0,a.resolveComponent)("include-employee-dropdown"),v=(0,a.resolveComponent)("oxd-divider"),f=(0,a.resolveComponent)("oxd-button"),y=(0,a.resolveComponent)("oxd-form-actions"),C=(0,a.resolveComponent)("oxd-form"),V=(0,a.resolveComponent)("oxd-table-filter"),b=(0,a.resolveComponent)("table-header"),x=(0,a.resolveComponent)("oxd-card-table"),w=(0,a.resolveComponent)("oxd-pagination");return(0,a.openBlock)(),(0,a.createElementBlock)(a.Fragment,null,[(0,a.createVNode)(V,{"filter-title":e.$t("claim.employee_claims")},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(C,{onSubmitValid:r.filterItems},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(i,{modelValue:l.filters.employee,"onUpdate:modelValue":t[0]||(t[0]=e=>l.filters.employee=e),rules:n.rules.employee,params:{includeEmployees:"currentAndPast"}},null,8,["modelValue","rules"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(s,{modelValue:l.filters.referenceId,"onUpdate:modelValue":t[1]||(t[1]=e=>l.filters.referenceId=e),"is-assigned":!0,label:e.$t("claim.reference_id")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(c,{modelValue:l.filters.claimEvent,"onUpdate:modelValue":t[2]||(t[2]=e=>l.filters.claimEvent=e),label:e.$t("claim.event_name")},null,8,["modelValue","label"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(m,{modelValue:l.filters.status,"onUpdate:modelValue":t[3]||(t[3]=e=>l.filters.status=e),label:e.$t("general.status")},null,8,["modelValue","label"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(p,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(u,{cols:4,class:"orangehrm-full-width-grid"},{default:(0,a.withCtx)((()=>[(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:l.filters.fromDate,"onUpdate:modelValue":t[4]||(t[4]=e=>l.filters.fromDate=e),label:e.$t("general.from_date"),rules:n.rules.date,years:e.yearsArray},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(h,{modelValue:l.filters.toDate,"onUpdate:modelValue":t[5]||(t[5]=e=>l.filters.toDate=e),label:e.$t("general.to_date"),rules:n.rules.toDate,years:e.yearsArray},null,8,["modelValue","label","rules","years"])])),_:1}),(0,a.createVNode)(d,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(g,{modelValue:l.filters.includeEmployees,"onUpdate:modelValue":t[6]||(t[6]=e=>l.filters.includeEmployees=e)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1}),(0,a.createVNode)(v),(0,a.createVNode)(y,null,{default:(0,a.withCtx)((()=>[(0,a.createVNode)(f,{"display-type":"ghost",label:e.$t("general.reset"),onClick:r.onClickReset},null,8,["label","onClick"]),(0,a.createVNode)(f,{class:"orangehrm-left-space","display-type":"secondary",label:e.$t("general.search"),type:"submit"},null,8,["label"])])),_:1})])),_:1},8,["onSubmitValid"])])),_:1},8,["filter-title"]),v2,(0,a.createElementVNode)("div",f2,[(0,a.createElementVNode)("div",y2,[(0,a.createVNode)(f,{label:e.$t("claim.assign_claim"),"icon-name":"plus","display-type":"secondary",onClick:r.onClickAdd},null,8,["label","onClick"])]),(0,a.createVNode)(b,{total:l.total,loading:l.isLoading},null,8,["total","loading"]),(0,a.createElementVNode)("div",C2,[(0,a.createVNode)(x,{order:l.sortDefinition,"onUpdate:order":t[7]||(t[7]=e=>l.sortDefinition=e),items:l.items.data,headers:n.headers,selectable:!1,clickable:!1,loading:l.isLoading,"row-decorator":"oxd-table-decorator-card"},null,8,["order","items","headers","loading"])]),(0,a.createElementVNode)("div",V2,[l.showPaginator?((0,a.openBlock)(),(0,a.createBlock)(w,{key:0,current:l.currentPage,"onUpdate:current":t[8]||(t[8]=e=>l.currentPage=e),length:l.pages},null,8,["current","length"])):(0,a.createCommentVNode)("",!0)])])],64)}const x2={referenceId:"",employee:null,claimEvent:null,status:null,fromDate:null,toDate:null},w2={"claimRequest.referenceId":"DESC","employee.firstName":"ASC","claimEvent.name":"ASC","claimRequest.status":"ASC","claimRequest.submittedDate":"ASC"};var N2={components:{"reference-id-autocomplete":F8,"claim-event-dropdown":b1,"status-dropdown":R8,"employee-autocomplete":$a,"include-employee-dropdown":eh},props:{empNumber:{type:Number,required:!0}},setup(){const{$t:e}=Be(),t=(0,a.ref)({includeEmployees:{id:1,param:"onlyCurrent",label:e("general.current_employees_only")},...x2}),{$tEmpName:o}=Da(),{sortDefinition:l,sortField:n,sortOrder:r,onSort:i}=Pt({sortDefinition:w2}),{locale:d}=Le(),{jsDateFormat:s}=R(),c=(0,a.computed)((()=>({referenceId:"object"===typeof t.value.referenceId&&t.value.referenceId?t.value.referenceId.id:"string"===typeof t.value.referenceId?t.value.referenceId:null,empNumber:t.value.employee?.id,eventId:t.value.claimEvent?t.value.claimEvent?.id:null,status:t.value.status?t.value.status?.id:null,fromDate:t.value.fromDate,toDate:t.value.toDate,includeEmployees:t.value.includeEmployees?.param,sortField:"claimRequest.claimEvent.name"===n.value?"claimEvent.name":n.value,sortOrder:r.value}))),m=e=>e.map((e=>({id:e.id,referenceId:e.referenceId,employee:o(e.employee),eventName:e.claimEvent.name,description:e.description,currency:e.currencyType.name,status:e.status.charAt(0).toUpperCase()+e.status.slice(1).toLowerCase(),submittedDate:pe(ue(e.submittedDate),s,{locale:d}),amount:Number(e.amount).toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})}))),u=new P(window.appGlobal.baseUrl,"/api/v2/claim/employees/requests"),{showPaginator:p,currentPage:h,total:g,pages:v,pageSize:f,response:y,isLoading:C,execQuery:V}=Dt(u,{normalizer:m,query:c});return i(V),{http:u,showPaginator:p,currentPage:h,isLoading:C,total:g,pages:v,pageSize:f,execQuery:V,items:y,response:y,filters:t,sortDefinition:l,useDateFormat:R}},data(){return{headers:[{name:"referenceId",title:this.$t("claim.reference_id"),slot:"title",sortField:"claimRequest.referenceId",style:{flex:3}},{name:"employee",title:this.$t("general.employee_name"),slot:"title",sortField:"employee.firstName",style:{flex:4}},{name:"eventName",title:this.$t("claim.event_name"),slot:"title",cellType:"oxd-table-cell-truncate",sortField:"claimEvent.name",style:{flex:3}},{name:"description",title:this.$t("general.description"),slot:"title",cellType:"oxd-table-cell-truncate",sortField:"claimRequest.description",style:{flex:4}},{name:"currency",title:this.$t("general.currency"),slot:"title",style:{flex:3}},{name:"submittedDate",title:this.$t("claim.submitted_date"),slot:"title",sortField:"claimRequest.submittedDate",style:{flex:3}},{name:"status",title:this.$t("general.status"),sortField:"claimRequest.status",style:{flex:2}},{name:"amount",title:this.$t("general.amount"),slot:"title",sortField:"claimRequest.amount",style:{flex:3}},{name:"actions",slot:"right",title:this.$t("general.actions"),style:{flex:4},cellType:"oxd-table-cell-actions",cellConfig:{view:{onClick:this.onClickView,component:"oxd-button",props:{label:this.$t("claim.view_details"),displayType:"text",size:"medium"}}}}],rules:{date:[Yt(this.userDateFormat)],toDate:[Yt(this.userDateFormat),ro((()=>this.filters.fromDate),this.$t("general.to_date_should_be_after_from_date"),{allowSameDate:!0})],employee:[Wt(100),So]}}},methods:{async resetDataTable(){this.checkedItems=[],await this.execQuery()},async filterItems(){await this.execQuery()},onClickReset(){this.filters={...x2},this.filterItems()},onClickAdd(){U("/claim/assignClaim")},onClickView(e){U("/claim/assignClaim/id/{id}",{id:e.id})}}};const _2=(0,r.c)(N2,[["render",b2]]);var k2=_2,S2={"claim-event":b0,"claim-event-create":D0,"claim-event-edit":P0,"claim-expense-types":K0,"claim-expense-type-create":r1,"claim-expense-type-edit":h1,"submit-claim-request":_1,"submit-claim":D8,"my-claim":W8,"assign-claim-request":r2,"assign-claim":g2,"employee-claim":k2},$2={...dp,...Dw,...ft,...zw,...HS,...UB,...eB,...cU,...wA,...iz,...mQ,...oH,...ZW,...dp,...kJ,...OZ,...r0,...S2};const D2=e=>(...t)=>{const o=(0,a.getCurrentInstance)();if(!o)throw new Error("Vue app context not found!");const l=(0,a.inject)("permissions",void 0);return!!l&&t.reduce(((t,o)=>t&&Boolean(l[o])&&l[o][e]),!0)};function E2(){return{beforeCreate(){this.$can={read:D2("canRead"),create:D2("canCreate"),update:D2("canUpdate"),delete:D2("canDelete")}}}}var T2={install:e=>{e.mixin(E2())}},I2=o(5720);const B2=De(),L2=(0,a.reactive)({toasts:[],transition:"",class:"",position:""}),U2=(0,a.defineComponent)({name:"OxdToaster",setup(){return{...(0,a.toRefs)(L2)}},computed:{classes(){return{"oxd-toast-container":!0,[`oxd-toast-container--${this.position}`]:!0}}},methods:{onUpdateShow(e,t){!1===e&&this.toasts.splice(t,1)}},render(){return(0,a.h)(a.TransitionGroup,{appear:!0,name:this.transition,tag:"div",class:this.classes},{default:()=>this.toasts.map(((e,t)=>(0,a.h)(q.OxdToast,{key:e.id,type:e.type,title:e.title,message:e.message,show:e.show,class:this.class,"onUpdate:show":e=>this.onUpdateShow(e,t)})))})}});var A2={install:(e,t)=>{const o=document.createElement("oxd-toaster");o.id="oxd-toaster_1",document.getElementById("app").appendChild(o);const a=e=>{if("string"===typeof e){const t=L2.toasts.findIndex((t=>t.id===e));t>-1&&a(t)}else L2.toasts[e]&&L2.toasts.splice(e,1)},l=e=>new Promise((o=>{const l=(0,I2.nanoid)(8);if(L2.toasts.push({...e,id:l}),t.persist)o(l);else{const e=t.duration?t.duration:2500;setTimeout((()=>{a(l),o(l)}),e)}})),n=e=>l({id:"",type:q.TOAST_TYPES.TYPE_SUCCESS,show:!0,...e}),r=e=>l({id:"",type:q.TOAST_TYPES.TYPE_ERROR,show:!0,...e}),i=e=>l({id:"",type:q.TOAST_TYPES.TYPE_INFO,show:!0,...e}),d=e=>l({id:"",type:q.TOAST_TYPES.TYPE_WARN,show:!0,...e}),s=e=>l({id:"",type:q.TOAST_TYPES.TYPE_DEFAULT,show:!0,...e}),c=()=>{L2.toasts=[]},m=()=>n({title:B2("general.success"),message:B2("general.successfully_saved")}),u=()=>n({title:B2("general.success"),message:B2("general.successfully_added")}),p=()=>n({title:B2("general.success"),message:B2("general.successfully_updated")}),h=()=>n({title:B2("general.success"),message:B2("general.successfully_deleted")}),g=()=>r({title:B2("general.error"),message:B2("general.cannot_be_deleted")}),v=()=>i({title:B2("general.info"),message:B2("general.no_records_found")}),f=e=>r({title:B2("general.error"),message:e??B2("general.unexpected_error")});L2.class=t.class?t.class:"oxd-toast-container--toast",L2.transition=t.animation?t.animation:"oxd-toast-list",L2.position=t.position?t.position:"bottom",e.component("OxdToaster",U2);const y={notify:l,show:s,success:n,error:r,info:i,warn:d,clear:a,clearAll:c,saveSuccess:m,addSuccess:u,updateSuccess:p,deleteSuccess:h,cannotDelete:g,noRecordsFound:v,unexpectedError:f};e.config.globalProperties.$toast=y}};const P2=(0,a.createApp)({name:"App",components:$2});P2.use(je),P2.use(A2,{duration:2500,persist:!1,animation:"oxd-toast-list",position:"bottom"});const q2=window.appGlobal.baseUrl,{i18n:F2,init:M2}=Ie({baseUrl:q2,resourceUrl:"/core/i18n/messages"});P2.use(T2),P2.use(F2),P2.config.globalProperties.global={baseUrl:q2},M2().then((()=>P2.mount("#app")))}},t={};function o(a){var l=t[a];if(void 0!==l)return l.exports;var n=t[a]={exports:{}};return e[a].call(n.exports,n,n.exports,o),n.exports}o.m=e,function(){var e=[];o.O=function(t,a,l,n){if(!a){var r=1/0;for(c=0;c<e.length;c++){a=e[c][0],l=e[c][1],n=e[c][2];for(var i=!0,d=0;d<a.length;d++)(!1&n||r>=n)&&Object.keys(o.O).every((function(e){return o.O[e](a[d])}))?a.splice(d--,1):(i=!1,n<r&&(r=n));if(i){e.splice(c--,1);var s=l();void 0!==s&&(t=s)}}return t}n=n||0;for(var c=e.length;c>0&&e[c-1][2]>n;c--)e[c]=e[c-1];e[c]=[a,l,n]}}(),function(){o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,{a:t}),t}}(),function(){o.d=function(e,t){for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}}(),function(){o.f={},o.e=function(e){return Promise.all(Object.keys(o.f).reduce((function(t,a){return o.f[a](e,t),t}),[]))}}(),function(){o.u=function(e){return"js/"+e+".js"}}(),function(){o.miniCssF=function(e){}}(),function(){o.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="orangehrm:";o.l=function(a,l,n,r){if(e[a])e[a].push(l);else{var i,d;if(void 0!==n)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var m=s[c];if(m.getAttribute("src")==a||m.getAttribute("data-webpack")==t+n){i=m;break}}i||(d=!0,i=document.createElement("script"),i.charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",t+n),i.src=a),e[a]=[l];var u=function(t,o){i.onerror=i.onload=null,clearTimeout(p);var l=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),l&&l.forEach((function(e){return e(o)})),t)return t(o)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=u.bind(null,i.onerror),i.onload=u.bind(null,i.onload),d&&document.head.appendChild(i)}}}(),function(){o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){o.p=""}(),function(){var e={524:0};o.f.j=function(t,a){var l=o.o(e,t)?e[t]:void 0;if(0!==l)if(l)a.push(l[2]);else{var n=new Promise((function(o,a){l=e[t]=[o,a]}));a.push(l[2]=n);var r=o.p+o.u(t),i=new Error,d=function(a){if(o.o(e,t)&&(l=e[t],0!==l&&(e[t]=void 0),l)){var n=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",i.name="ChunkLoadError",i.type=n,i.request=r,l[1](i)}};o.l(r,d,"chunk-"+t,t)}},o.O.j=function(t){return 0===e[t]};var t=function(t,a){var l,n,r=a[0],i=a[1],d=a[2],s=0;if(r.some((function(t){return 0!==e[t]}))){for(l in i)o.o(i,l)&&(o.m[l]=i[l]);if(d)var c=d(o)}for(t&&t(a);s<r.length;s++)n=r[s],o.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return o.O(c)},a=self["webpackChunkorangehrm"]=self["webpackChunkorangehrm"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var a=o.O(void 0,[999],(function(){return o(7368)}));a=o.O(a)})();
//# sourceMappingURL=app.js.map</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="1138003921" offset="0" length="1438" />
        <PacketInfo time="1138003921" offset="1438" length="213448" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>